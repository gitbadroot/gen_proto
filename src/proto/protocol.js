/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
var P = (function($protobuf) {    "use strict";
    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    $root.p_kv = (function() {
        function p_kv(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_kv.prototype.key = 0;
        p_kv.prototype.value = 0;
        p_kv.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.key);
            w.uint32(16).int32(m.value);
            return w;
        };
        p_kv.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_kv();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.int32();
                    break;
                case 2:
                    m.value = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("key"))
                throw $util.ProtocolError("missing required 'key'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            return m;
        };
        return p_kv;
    })();
    $root.c2s_keepalive_request = (function() {
        function c2s_keepalive_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_keepalive_request.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_keepalive_request.cmd = 1;
        c2s_keepalive_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(8).int64(m.time);
            return w;
        };
        c2s_keepalive_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_keepalive_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_keepalive_request;
    })();
    $root.s2c_keepalive_reply = (function() {
        function s2c_keepalive_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_keepalive_reply.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_keepalive_reply.cmd = 2;
        s2c_keepalive_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(8).int64(m.time);
            return w;
        };
        s2c_keepalive_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_keepalive_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_keepalive_reply;
    })();
    $root.s2c_request_sucess = (function() {
        function s2c_request_sucess(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_request_sucess.cmd = 3;
        s2c_request_sucess.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_request_sucess.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_request_sucess();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_request_sucess;
    })();
    $root.s2c_request_fail = (function() {
        function s2c_request_fail(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_request_fail.prototype.code = 0;
        s2c_request_fail.prototype.reason = "";
        s2c_request_fail.cmd = 4;
        s2c_request_fail.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.code != null && Object.hasOwnProperty.call(m, "code"))
                w.uint32(8).int32(m.code);
            if (m.reason != null && Object.hasOwnProperty.call(m, "reason"))
                w.uint32(18).string(m.reason);
            return w;
        };
        s2c_request_fail.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_request_fail();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.code = r.int32();
                    break;
                case 2:
                    m.reason = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_request_fail;
    })();
    $root.c2s_gm_command = (function() {
        function c2s_gm_command(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_gm_command.prototype.command = "";
        c2s_gm_command.cmd = 5;
        c2s_gm_command.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.command);
            return w;
        };
        c2s_gm_command.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_gm_command();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.command = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("command"))
                throw $util.ProtocolError("missing required 'command'", { instance: m });
            return m;
        };
        return c2s_gm_command;
    })();
    $root.c2s_calc_formula_request = (function() {
        function c2s_calc_formula_request(p) {
            this.paramList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_calc_formula_request.prototype.formulaId = 0;
        c2s_calc_formula_request.prototype.paramList = $util.emptyArray;
        c2s_calc_formula_request.cmd = 6;
        c2s_calc_formula_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.formulaId);
            if (m.paramList != null && m.paramList.length) {
                for (var i = 0; i < m.paramList.length; ++i)
                    w.uint32(16).int32(m.paramList[i]);
            }
            return w;
        };
        c2s_calc_formula_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_calc_formula_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.formulaId = r.int32();
                    break;
                case 2:
                    if (!(m.paramList && m.paramList.length))
                        m.paramList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.paramList.push(r.int32());
                    } else
                        m.paramList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("formulaId"))
                throw $util.ProtocolError("missing required 'formulaId'", { instance: m });
            return m;
        };
        return c2s_calc_formula_request;
    })();
    $root.s2c_calc_formula_reply = (function() {
        function s2c_calc_formula_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_calc_formula_reply.prototype.formulaId = 0;
        s2c_calc_formula_reply.prototype.value = 0;
        s2c_calc_formula_reply.cmd = 7;
        s2c_calc_formula_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.formulaId);
            w.uint32(16).int32(m.value);
            return w;
        };
        s2c_calc_formula_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_calc_formula_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.formulaId = r.int32();
                    break;
                case 2:
                    m.value = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("formulaId"))
                throw $util.ProtocolError("missing required 'formulaId'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            return m;
        };
        return s2c_calc_formula_reply;
    })();
    $root.c2s_upload_client_error_request = (function() {
        function c2s_upload_client_error_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_upload_client_error_request.prototype.errorMsg = "";
        c2s_upload_client_error_request.cmd = 8;
        c2s_upload_client_error_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.errorMsg);
            return w;
        };
        c2s_upload_client_error_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_upload_client_error_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.errorMsg = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("errorMsg"))
                throw $util.ProtocolError("missing required 'errorMsg'", { instance: m });
            return m;
        };
        return c2s_upload_client_error_request;
    })();
    $root.s2c_request_fail_member_notify = (function() {
        function s2c_request_fail_member_notify(p) {
            this.argsStr = [];
            this.argsInt = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_request_fail_member_notify.prototype.cmd = 0;
        s2c_request_fail_member_notify.prototype.code = 0;
        s2c_request_fail_member_notify.prototype.argsStr = $util.emptyArray;
        s2c_request_fail_member_notify.prototype.argsInt = $util.emptyArray;
        s2c_request_fail_member_notify.cmd = 9;
        s2c_request_fail_member_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.cmd);
            w.uint32(16).int32(m.code);
            if (m.argsStr != null && m.argsStr.length) {
                for (var i = 0; i < m.argsStr.length; ++i)
                    w.uint32(26).string(m.argsStr[i]);
            }
            if (m.argsInt != null && m.argsInt.length) {
                for (var i = 0; i < m.argsInt.length; ++i)
                    w.uint32(32).int64(m.argsInt[i]);
            }
            return w;
        };
        s2c_request_fail_member_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_request_fail_member_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.cmd = r.int32();
                    break;
                case 2:
                    m.code = r.int32();
                    break;
                case 3:
                    if (!(m.argsStr && m.argsStr.length))
                        m.argsStr = [];
                    m.argsStr.push(r.string());
                    break;
                case 4:
                    if (!(m.argsInt && m.argsInt.length))
                        m.argsInt = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.argsInt.push(r.int64());
                    } else
                        m.argsInt.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("cmd"))
                throw $util.ProtocolError("missing required 'cmd'", { instance: m });
            if (!m.hasOwnProperty("code"))
                throw $util.ProtocolError("missing required 'code'", { instance: m });
            return m;
        };
        return s2c_request_fail_member_notify;
    })();
    $root.p_gameplay_info = (function() {
        function p_gameplay_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_gameplay_info.prototype.id = 0;
        p_gameplay_info.prototype.prepareTime = 0;
        p_gameplay_info.prototype.beginTime = 0;
        p_gameplay_info.prototype.endTime = 0;
        p_gameplay_info.prototype.status = 0;
        p_gameplay_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.prepareTime);
            w.uint32(24).int32(m.beginTime);
            w.uint32(32).int32(m.endTime);
            w.uint32(40).int32(m.status);
            return w;
        };
        p_gameplay_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_gameplay_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.prepareTime = r.int32();
                    break;
                case 3:
                    m.beginTime = r.int32();
                    break;
                case 4:
                    m.endTime = r.int32();
                    break;
                case 5:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("prepareTime"))
                throw $util.ProtocolError("missing required 'prepareTime'", { instance: m });
            if (!m.hasOwnProperty("beginTime"))
                throw $util.ProtocolError("missing required 'beginTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return p_gameplay_info;
    })();
    $root.c2s_gameplay_info_request = (function() {
        function c2s_gameplay_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_gameplay_info_request.cmd = 10;
        c2s_gameplay_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_gameplay_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_gameplay_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_gameplay_info_request;
    })();
    $root.s2c_gameplay_info_notify = (function() {
        function s2c_gameplay_info_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gameplay_info_notify.prototype.list = $util.emptyArray;
        s2c_gameplay_info_notify.cmd = 11;
        s2c_gameplay_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_gameplay_info.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_gameplay_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gameplay_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_gameplay_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_gameplay_info_notify;
    })();
    $root.s2c_world_level_notify = (function() {
        function s2c_world_level_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_world_level_notify.prototype.level = 0;
        s2c_world_level_notify.cmd = 12;
        s2c_world_level_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            return w;
        };
        s2c_world_level_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_world_level_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            return m;
        };
        return s2c_world_level_notify;
    })();
    $root.c2s_whiteip_request = (function() {
        function c2s_whiteip_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_whiteip_request.cmd = 13;
        c2s_whiteip_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_whiteip_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_whiteip_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_whiteip_request;
    })();
    $root.s2c_whiteip_notify = (function() {
        function s2c_whiteip_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_whiteip_notify.prototype.type = 0;
        s2c_whiteip_notify.cmd = 14;
        s2c_whiteip_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        s2c_whiteip_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_whiteip_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_whiteip_notify;
    })();
    $root.c2s_pannel_contrl_request = (function() {
        function c2s_pannel_contrl_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pannel_contrl_request.cmd = 15;
        c2s_pannel_contrl_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_pannel_contrl_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pannel_contrl_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_pannel_contrl_request;
    })();
    $root.s2c_pannel_contrl_notify = (function() {
        function s2c_pannel_contrl_notify(p) {
            this.pannelContrlList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_pannel_contrl_notify.prototype.pannelContrlList = $util.emptyArray;
        s2c_pannel_contrl_notify.cmd = 16;
        s2c_pannel_contrl_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.pannelContrlList != null && m.pannelContrlList.length) {
                for (var i = 0; i < m.pannelContrlList.length; ++i)
                    $root.p_kv.encode(m.pannelContrlList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_pannel_contrl_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_pannel_contrl_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.pannelContrlList && m.pannelContrlList.length))
                        m.pannelContrlList = [];
                    m.pannelContrlList.push($root.p_kv.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_pannel_contrl_notify;
    })();
    $root.c2s_local_server_list_request = (function() {
        function c2s_local_server_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_local_server_list_request.cmd = 17;
        c2s_local_server_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_local_server_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_local_server_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_local_server_list_request;
    })();
    $root.s2c_local_server_list_reply = (function() {
        function s2c_local_server_list_reply(p) {
            this.slaveServerId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_local_server_list_reply.prototype.masterServerId = 0;
        s2c_local_server_list_reply.prototype.slaveServerId = $util.emptyArray;
        s2c_local_server_list_reply.cmd = 18;
        s2c_local_server_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.masterServerId);
            if (m.slaveServerId != null && m.slaveServerId.length) {
                for (var i = 0; i < m.slaveServerId.length; ++i)
                    w.uint32(16).int32(m.slaveServerId[i]);
            }
            return w;
        };
        s2c_local_server_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_local_server_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.masterServerId = r.int32();
                    break;
                case 2:
                    if (!(m.slaveServerId && m.slaveServerId.length))
                        m.slaveServerId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.slaveServerId.push(r.int32());
                    } else
                        m.slaveServerId.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("masterServerId"))
                throw $util.ProtocolError("missing required 'masterServerId'", { instance: m });
            return m;
        };
        return s2c_local_server_list_reply;
    })();
    $root.c2s_role_list_request = (function() {
        function c2s_role_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_list_request.prototype.account = "";
        c2s_role_list_request.prototype.serverId = 0;
        c2s_role_list_request.cmd = 257;
        c2s_role_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.account);
            w.uint32(16).int32(m.serverId);
            return w;
        };
        c2s_role_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.account = r.string();
                    break;
                case 2:
                    m.serverId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("account"))
                throw $util.ProtocolError("missing required 'account'", { instance: m });
            if (!m.hasOwnProperty("serverId"))
                throw $util.ProtocolError("missing required 'serverId'", { instance: m });
            return m;
        };
        return c2s_role_list_request;
    })();
    $root.role_brief = (function() {
        function role_brief(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        role_brief.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        role_brief.prototype.account = "";
        role_brief.prototype.name = "";
        role_brief.prototype.serverId = 0;
        role_brief.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.account);
            w.uint32(26).string(m.name);
            w.uint32(32).int32(m.serverId);
            return w;
        };
        role_brief.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.role_brief();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.account = r.string();
                    break;
                case 3:
                    m.name = r.string();
                    break;
                case 4:
                    m.serverId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("account"))
                throw $util.ProtocolError("missing required 'account'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("serverId"))
                throw $util.ProtocolError("missing required 'serverId'", { instance: m });
            return m;
        };
        return role_brief;
    })();
    $root.role_brief_info = (function() {
        function role_brief_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        role_brief_info.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        role_brief_info.prototype.name = "";
        role_brief_info.prototype.sex = 0;
        role_brief_info.prototype.trans = 0;
        role_brief_info.prototype.level = 0;
        role_brief_info.prototype.combat = 0;
        role_brief_info.prototype.online = 0;
        role_brief_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.sex);
            w.uint32(32).int32(m.trans);
            w.uint32(40).int32(m.level);
            w.uint32(48).int32(m.combat);
            w.uint32(56).int32(m.online);
            return w;
        };
        role_brief_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.role_brief_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.sex = r.int32();
                    break;
                case 4:
                    m.trans = r.int32();
                    break;
                case 5:
                    m.level = r.int32();
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    m.online = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("online"))
                throw $util.ProtocolError("missing required 'online'", { instance: m });
            return m;
        };
        return role_brief_info;
    })();
    $root.s2c_role_list_reply = (function() {
        function s2c_role_list_reply(p) {
            this.roles = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_list_reply.prototype.roles = $util.emptyArray;
        s2c_role_list_reply.cmd = 258;
        s2c_role_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roles != null && m.roles.length) {
                for (var i = 0; i < m.roles.length; ++i)
                    $root.role_brief.encode(m.roles[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roles && m.roles.length))
                        m.roles = [];
                    m.roles.push($root.role_brief.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_list_reply;
    })();
    $root.c2s_create_role_request = (function() {
        function c2s_create_role_request(p) {
            this.args = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_create_role_request.prototype.serverId = 0;
        c2s_create_role_request.prototype.authType = 0;
        c2s_create_role_request.prototype.sex = 0;
        c2s_create_role_request.prototype.name = "";
        c2s_create_role_request.prototype.version = "";
        c2s_create_role_request.prototype.args = $util.emptyArray;
        c2s_create_role_request.prototype.channel = "";
        c2s_create_role_request.prototype.phoneInfo = "";
        c2s_create_role_request.prototype.head = "";
        c2s_create_role_request.prototype.fromUrl = "";
        c2s_create_role_request.prototype.source = "";
        c2s_create_role_request.cmd = 259;
        c2s_create_role_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.serverId);
            w.uint32(16).int32(m.authType);
            w.uint32(24).int32(m.sex);
            w.uint32(34).string(m.name);
            w.uint32(42).string(m.version);
            if (m.args != null && m.args.length) {
                for (var i = 0; i < m.args.length; ++i)
                    w.uint32(50).string(m.args[i]);
            }
            w.uint32(58).string(m.channel);
            if (m.phoneInfo != null && Object.hasOwnProperty.call(m, "phoneInfo"))
                w.uint32(66).string(m.phoneInfo);
            w.uint32(74).string(m.head);
            if (m.fromUrl != null && Object.hasOwnProperty.call(m, "fromUrl"))
                w.uint32(82).string(m.fromUrl);
            if (m.source != null && Object.hasOwnProperty.call(m, "source"))
                w.uint32(90).string(m.source);
            return w;
        };
        c2s_create_role_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_create_role_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serverId = r.int32();
                    break;
                case 2:
                    m.authType = r.int32();
                    break;
                case 3:
                    m.sex = r.int32();
                    break;
                case 4:
                    m.name = r.string();
                    break;
                case 5:
                    m.version = r.string();
                    break;
                case 6:
                    if (!(m.args && m.args.length))
                        m.args = [];
                    m.args.push(r.string());
                    break;
                case 7:
                    m.channel = r.string();
                    break;
                case 8:
                    m.phoneInfo = r.string();
                    break;
                case 9:
                    m.head = r.string();
                    break;
                case 10:
                    m.fromUrl = r.string();
                    break;
                case 11:
                    m.source = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("serverId"))
                throw $util.ProtocolError("missing required 'serverId'", { instance: m });
            if (!m.hasOwnProperty("authType"))
                throw $util.ProtocolError("missing required 'authType'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("version"))
                throw $util.ProtocolError("missing required 'version'", { instance: m });
            if (!m.hasOwnProperty("channel"))
                throw $util.ProtocolError("missing required 'channel'", { instance: m });
            if (!m.hasOwnProperty("head"))
                throw $util.ProtocolError("missing required 'head'", { instance: m });
            return m;
        };
        return c2s_create_role_request;
    })();
    $root.c2s_login_request = (function() {
        function c2s_login_request(p) {
            this.args = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_login_request.prototype.serverId = 0;
        c2s_login_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_login_request.prototype.authType = 0;
        c2s_login_request.prototype.args = $util.emptyArray;
        c2s_login_request.prototype.channel = "";
        c2s_login_request.prototype.loginFlag = 0;
        c2s_login_request.prototype.phoneInfo = "";
        c2s_login_request.prototype.head = "";
        c2s_login_request.prototype.version = "";
        c2s_login_request.cmd = 260;
        c2s_login_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.serverId);
            w.uint32(16).int64(m.roleId);
            w.uint32(24).int32(m.authType);
            if (m.args != null && m.args.length) {
                for (var i = 0; i < m.args.length; ++i)
                    w.uint32(34).string(m.args[i]);
            }
            w.uint32(42).string(m.channel);
            if (m.loginFlag != null && Object.hasOwnProperty.call(m, "loginFlag"))
                w.uint32(48).int32(m.loginFlag);
            if (m.phoneInfo != null && Object.hasOwnProperty.call(m, "phoneInfo"))
                w.uint32(58).string(m.phoneInfo);
            w.uint32(66).string(m.head);
            w.uint32(74).string(m.version);
            return w;
        };
        c2s_login_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_login_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serverId = r.int32();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                case 3:
                    m.authType = r.int32();
                    break;
                case 4:
                    if (!(m.args && m.args.length))
                        m.args = [];
                    m.args.push(r.string());
                    break;
                case 5:
                    m.channel = r.string();
                    break;
                case 6:
                    m.loginFlag = r.int32();
                    break;
                case 7:
                    m.phoneInfo = r.string();
                    break;
                case 8:
                    m.head = r.string();
                    break;
                case 9:
                    m.version = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("serverId"))
                throw $util.ProtocolError("missing required 'serverId'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("authType"))
                throw $util.ProtocolError("missing required 'authType'", { instance: m });
            if (!m.hasOwnProperty("channel"))
                throw $util.ProtocolError("missing required 'channel'", { instance: m });
            if (!m.hasOwnProperty("head"))
                throw $util.ProtocolError("missing required 'head'", { instance: m });
            if (!m.hasOwnProperty("version"))
                throw $util.ProtocolError("missing required 'version'", { instance: m });
            return m;
        };
        return c2s_login_request;
    })();
    $root.s2c_login_reply = (function() {
        function s2c_login_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_login_reply.prototype.code = 0;
        s2c_login_reply.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_login_reply.prototype.level = 0;
        s2c_login_reply.prototype.sharelvl = 0;
        s2c_login_reply.cmd = 261;
        s2c_login_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.code);
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(16).int64(m.roleId);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(24).int32(m.level);
            if (m.sharelvl != null && Object.hasOwnProperty.call(m, "sharelvl"))
                w.uint32(32).int32(m.sharelvl);
            return w;
        };
        s2c_login_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_login_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.code = r.int32();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                case 4:
                    m.sharelvl = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("code"))
                throw $util.ProtocolError("missing required 'code'", { instance: m });
            return m;
        };
        return s2c_login_reply;
    })();
    $root.s2c_kick_out_notify = (function() {
        function s2c_kick_out_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_kick_out_notify.prototype.code = 0;
        s2c_kick_out_notify.prototype.reason = "";
        s2c_kick_out_notify.cmd = 262;
        s2c_kick_out_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.code);
            if (m.reason != null && Object.hasOwnProperty.call(m, "reason"))
                w.uint32(18).string(m.reason);
            return w;
        };
        s2c_kick_out_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_kick_out_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.code = r.int32();
                    break;
                case 2:
                    m.reason = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("code"))
                throw $util.ProtocolError("missing required 'code'", { instance: m });
            return m;
        };
        return s2c_kick_out_notify;
    })();
    $root.p_role_info = (function() {
        function p_role_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_role_info.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.account = "";
        p_role_info.prototype.serverId = 0;
        p_role_info.prototype.name = "";
        p_role_info.prototype.sex = 0;
        p_role_info.prototype.trans = 0;
        p_role_info.prototype.level = 0;
        p_role_info.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.title = 0;
        p_role_info.prototype.goldUnbound = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.goldBound = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.coin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.hp = 0;
        p_role_info.prototype.combat = 0;
        p_role_info.prototype.vip = 0;
        p_role_info.prototype.expPerMinute = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.expAdditionRate = 0;
        p_role_info.prototype.pk = 0;
        p_role_info.prototype.pkEndTime = 0;
        p_role_info.prototype.charm = 0;
        p_role_info.prototype.gangId = 0;
        p_role_info.prototype.gangName = "";
        p_role_info.prototype.overflowExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.dragonSoulLv = 0;
        p_role_info.prototype.coinInvit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_info.prototype.createAt = 0;
        p_role_info.prototype.dayOnlineDuration = 0;
        p_role_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.account);
            w.uint32(24).int32(m.serverId);
            w.uint32(34).string(m.name);
            w.uint32(40).int32(m.sex);
            w.uint32(48).int32(m.trans);
            w.uint32(56).int32(m.level);
            w.uint32(64).int64(m.exp);
            w.uint32(72).int32(m.title);
            w.uint32(80).int64(m.goldUnbound);
            w.uint32(88).int64(m.goldBound);
            w.uint32(96).int64(m.coin);
            w.uint32(104).int32(m.hp);
            w.uint32(112).int32(m.combat);
            w.uint32(120).int32(m.vip);
            w.uint32(128).int64(m.expPerMinute);
            w.uint32(136).int32(m.expAdditionRate);
            w.uint32(144).int32(m.pk);
            w.uint32(152).int32(m.pkEndTime);
            w.uint32(160).int32(m.charm);
            w.uint32(168).int32(m.gangId);
            w.uint32(178).string(m.gangName);
            w.uint32(184).int64(m.overflowExp);
            w.uint32(192).int32(m.dragonSoulLv);
            if (m.coinInvit != null && Object.hasOwnProperty.call(m, "coinInvit"))
                w.uint32(200).int64(m.coinInvit);
            w.uint32(208).int32(m.createAt);
            w.uint32(216).int32(m.dayOnlineDuration);
            return w;
        };
        p_role_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_role_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.account = r.string();
                    break;
                case 3:
                    m.serverId = r.int32();
                    break;
                case 4:
                    m.name = r.string();
                    break;
                case 5:
                    m.sex = r.int32();
                    break;
                case 6:
                    m.trans = r.int32();
                    break;
                case 7:
                    m.level = r.int32();
                    break;
                case 8:
                    m.exp = r.int64();
                    break;
                case 9:
                    m.title = r.int32();
                    break;
                case 10:
                    m.goldUnbound = r.int64();
                    break;
                case 11:
                    m.goldBound = r.int64();
                    break;
                case 12:
                    m.coin = r.int64();
                    break;
                case 13:
                    m.hp = r.int32();
                    break;
                case 14:
                    m.combat = r.int32();
                    break;
                case 15:
                    m.vip = r.int32();
                    break;
                case 16:
                    m.expPerMinute = r.int64();
                    break;
                case 17:
                    m.expAdditionRate = r.int32();
                    break;
                case 18:
                    m.pk = r.int32();
                    break;
                case 19:
                    m.pkEndTime = r.int32();
                    break;
                case 20:
                    m.charm = r.int32();
                    break;
                case 21:
                    m.gangId = r.int32();
                    break;
                case 22:
                    m.gangName = r.string();
                    break;
                case 23:
                    m.overflowExp = r.int64();
                    break;
                case 24:
                    m.dragonSoulLv = r.int32();
                    break;
                case 25:
                    m.coinInvit = r.int64();
                    break;
                case 26:
                    m.createAt = r.int32();
                    break;
                case 27:
                    m.dayOnlineDuration = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("account"))
                throw $util.ProtocolError("missing required 'account'", { instance: m });
            if (!m.hasOwnProperty("serverId"))
                throw $util.ProtocolError("missing required 'serverId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("title"))
                throw $util.ProtocolError("missing required 'title'", { instance: m });
            if (!m.hasOwnProperty("goldUnbound"))
                throw $util.ProtocolError("missing required 'goldUnbound'", { instance: m });
            if (!m.hasOwnProperty("goldBound"))
                throw $util.ProtocolError("missing required 'goldBound'", { instance: m });
            if (!m.hasOwnProperty("coin"))
                throw $util.ProtocolError("missing required 'coin'", { instance: m });
            if (!m.hasOwnProperty("hp"))
                throw $util.ProtocolError("missing required 'hp'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("vip"))
                throw $util.ProtocolError("missing required 'vip'", { instance: m });
            if (!m.hasOwnProperty("expPerMinute"))
                throw $util.ProtocolError("missing required 'expPerMinute'", { instance: m });
            if (!m.hasOwnProperty("expAdditionRate"))
                throw $util.ProtocolError("missing required 'expAdditionRate'", { instance: m });
            if (!m.hasOwnProperty("pk"))
                throw $util.ProtocolError("missing required 'pk'", { instance: m });
            if (!m.hasOwnProperty("pkEndTime"))
                throw $util.ProtocolError("missing required 'pkEndTime'", { instance: m });
            if (!m.hasOwnProperty("charm"))
                throw $util.ProtocolError("missing required 'charm'", { instance: m });
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("overflowExp"))
                throw $util.ProtocolError("missing required 'overflowExp'", { instance: m });
            if (!m.hasOwnProperty("dragonSoulLv"))
                throw $util.ProtocolError("missing required 'dragonSoulLv'", { instance: m });
            if (!m.hasOwnProperty("createAt"))
                throw $util.ProtocolError("missing required 'createAt'", { instance: m });
            if (!m.hasOwnProperty("dayOnlineDuration"))
                throw $util.ProtocolError("missing required 'dayOnlineDuration'", { instance: m });
            return m;
        };
        return p_role_info;
    })();
    $root.p_fight_attribute = (function() {
        function p_fight_attribute(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_fight_attribute.prototype.attack = 0;
        p_fight_attribute.prototype.hpMax = 0;
        p_fight_attribute.prototype["break"] = 0;
        p_fight_attribute.prototype.defense = 0;
        p_fight_attribute.prototype.hit = 0;
        p_fight_attribute.prototype.dodge = 0;
        p_fight_attribute.prototype.crit = 0;
        p_fight_attribute.prototype.tenacity = 0;
        p_fight_attribute.prototype.elementAttack = 0;
        p_fight_attribute.prototype.elementDefense = 0;
        p_fight_attribute.prototype.damageDeepen = 0;
        p_fight_attribute.prototype.damageReduction = 0;
        p_fight_attribute.prototype.critProbability = 0;
        p_fight_attribute.prototype.critResist = 0;
        p_fight_attribute.prototype.critDamage = 0;
        p_fight_attribute.prototype.knowingDamage = 0;
        p_fight_attribute.prototype.knowingProbability = 0;
        p_fight_attribute.prototype.knowingResist = 0;
        p_fight_attribute.prototype.parryProbability = 0;
        p_fight_attribute.prototype.parryPass = 0;
        p_fight_attribute.prototype.skillDamageDeepen = 0;
        p_fight_attribute.prototype.skillDamageReduction = 0;
        p_fight_attribute.prototype.dodgeProbability = 0;
        p_fight_attribute.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.attack);
            w.uint32(16).int32(m.hpMax);
            w.uint32(24).int32(m["break"]);
            w.uint32(32).int32(m.defense);
            w.uint32(40).int32(m.hit);
            w.uint32(48).int32(m.dodge);
            w.uint32(56).int32(m.crit);
            w.uint32(64).int32(m.tenacity);
            w.uint32(72).int32(m.elementAttack);
            w.uint32(80).int32(m.elementDefense);
            w.uint32(88).int32(m.damageDeepen);
            w.uint32(96).int32(m.damageReduction);
            w.uint32(104).int32(m.critProbability);
            w.uint32(112).int32(m.critResist);
            w.uint32(120).int32(m.critDamage);
            w.uint32(128).int32(m.knowingDamage);
            w.uint32(136).int32(m.knowingProbability);
            w.uint32(144).int32(m.knowingResist);
            w.uint32(152).int32(m.parryProbability);
            w.uint32(160).int32(m.parryPass);
            w.uint32(168).int32(m.skillDamageDeepen);
            w.uint32(176).int32(m.skillDamageReduction);
            w.uint32(184).int32(m.dodgeProbability);
            return w;
        };
        p_fight_attribute.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_fight_attribute();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.attack = r.int32();
                    break;
                case 2:
                    m.hpMax = r.int32();
                    break;
                case 3:
                    m["break"] = r.int32();
                    break;
                case 4:
                    m.defense = r.int32();
                    break;
                case 5:
                    m.hit = r.int32();
                    break;
                case 6:
                    m.dodge = r.int32();
                    break;
                case 7:
                    m.crit = r.int32();
                    break;
                case 8:
                    m.tenacity = r.int32();
                    break;
                case 9:
                    m.elementAttack = r.int32();
                    break;
                case 10:
                    m.elementDefense = r.int32();
                    break;
                case 11:
                    m.damageDeepen = r.int32();
                    break;
                case 12:
                    m.damageReduction = r.int32();
                    break;
                case 13:
                    m.critProbability = r.int32();
                    break;
                case 14:
                    m.critResist = r.int32();
                    break;
                case 15:
                    m.critDamage = r.int32();
                    break;
                case 16:
                    m.knowingDamage = r.int32();
                    break;
                case 17:
                    m.knowingProbability = r.int32();
                    break;
                case 18:
                    m.knowingResist = r.int32();
                    break;
                case 19:
                    m.parryProbability = r.int32();
                    break;
                case 20:
                    m.parryPass = r.int32();
                    break;
                case 21:
                    m.skillDamageDeepen = r.int32();
                    break;
                case 22:
                    m.skillDamageReduction = r.int32();
                    break;
                case 23:
                    m.dodgeProbability = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("attack"))
                throw $util.ProtocolError("missing required 'attack'", { instance: m });
            if (!m.hasOwnProperty("hpMax"))
                throw $util.ProtocolError("missing required 'hpMax'", { instance: m });
            if (!m.hasOwnProperty("break"))
                throw $util.ProtocolError("missing required 'break'", { instance: m });
            if (!m.hasOwnProperty("defense"))
                throw $util.ProtocolError("missing required 'defense'", { instance: m });
            if (!m.hasOwnProperty("hit"))
                throw $util.ProtocolError("missing required 'hit'", { instance: m });
            if (!m.hasOwnProperty("dodge"))
                throw $util.ProtocolError("missing required 'dodge'", { instance: m });
            if (!m.hasOwnProperty("crit"))
                throw $util.ProtocolError("missing required 'crit'", { instance: m });
            if (!m.hasOwnProperty("tenacity"))
                throw $util.ProtocolError("missing required 'tenacity'", { instance: m });
            if (!m.hasOwnProperty("elementAttack"))
                throw $util.ProtocolError("missing required 'elementAttack'", { instance: m });
            if (!m.hasOwnProperty("elementDefense"))
                throw $util.ProtocolError("missing required 'elementDefense'", { instance: m });
            if (!m.hasOwnProperty("damageDeepen"))
                throw $util.ProtocolError("missing required 'damageDeepen'", { instance: m });
            if (!m.hasOwnProperty("damageReduction"))
                throw $util.ProtocolError("missing required 'damageReduction'", { instance: m });
            if (!m.hasOwnProperty("critProbability"))
                throw $util.ProtocolError("missing required 'critProbability'", { instance: m });
            if (!m.hasOwnProperty("critResist"))
                throw $util.ProtocolError("missing required 'critResist'", { instance: m });
            if (!m.hasOwnProperty("critDamage"))
                throw $util.ProtocolError("missing required 'critDamage'", { instance: m });
            if (!m.hasOwnProperty("knowingDamage"))
                throw $util.ProtocolError("missing required 'knowingDamage'", { instance: m });
            if (!m.hasOwnProperty("knowingProbability"))
                throw $util.ProtocolError("missing required 'knowingProbability'", { instance: m });
            if (!m.hasOwnProperty("knowingResist"))
                throw $util.ProtocolError("missing required 'knowingResist'", { instance: m });
            if (!m.hasOwnProperty("parryProbability"))
                throw $util.ProtocolError("missing required 'parryProbability'", { instance: m });
            if (!m.hasOwnProperty("parryPass"))
                throw $util.ProtocolError("missing required 'parryPass'", { instance: m });
            if (!m.hasOwnProperty("skillDamageDeepen"))
                throw $util.ProtocolError("missing required 'skillDamageDeepen'", { instance: m });
            if (!m.hasOwnProperty("skillDamageReduction"))
                throw $util.ProtocolError("missing required 'skillDamageReduction'", { instance: m });
            if (!m.hasOwnProperty("dodgeProbability"))
                throw $util.ProtocolError("missing required 'dodgeProbability'", { instance: m });
            return m;
        };
        return p_fight_attribute;
    })();
    $root.s2c_role_info_notify = (function() {
        function s2c_role_info_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_info_notify.prototype.info = null;
        s2c_role_info_notify.prototype.fight = null;
        s2c_role_info_notify.cmd = 263;
        s2c_role_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_role_info.encode(m.info, w.uint32(10).fork()).ldelim();
            $root.p_fight_attribute.encode(m.fight, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_role_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.info = $root.p_role_info.decode(r, r.uint32());
                    break;
                case 2:
                    m.fight = $root.p_fight_attribute.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("info"))
                throw $util.ProtocolError("missing required 'info'", { instance: m });
            if (!m.hasOwnProperty("fight"))
                throw $util.ProtocolError("missing required 'fight'", { instance: m });
            return m;
        };
        return s2c_role_info_notify;
    })();
    $root.s2c_role_info_changed_notify = (function() {
        function s2c_role_info_changed_notify(p) {
            this.info = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_info_changed_notify.prototype.info = $util.emptyArray;
        s2c_role_info_changed_notify.cmd = 264;
        s2c_role_info_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.info != null && m.info.length) {
                for (var i = 0; i < m.info.length; ++i)
                    $root.p_kv_pair.encode(m.info[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_info_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_info_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.info && m.info.length))
                        m.info = [];
                    m.info.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_info_changed_notify;
    })();
    $root.s2c_role_fight_attribute_changed_notify = (function() {
        function s2c_role_fight_attribute_changed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_fight_attribute_changed_notify.prototype.attr = null;
        s2c_role_fight_attribute_changed_notify.cmd = 265;
        s2c_role_fight_attribute_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_fight_attribute.encode(m.attr, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_role_fight_attribute_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_fight_attribute_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.attr = $root.p_fight_attribute.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("attr"))
                throw $util.ProtocolError("missing required 'attr'", { instance: m });
            return m;
        };
        return s2c_role_fight_attribute_changed_notify;
    })();
    $root.c2s_query_role_info_request = (function() {
        function c2s_query_role_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_role_info_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_query_role_info_request.cmd = 266;
        c2s_query_role_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_query_role_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_role_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_query_role_info_request;
    })();
    $root.p_role_friend = (function() {
        function p_role_friend(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_role_friend.prototype.friendCount = 0;
        p_role_friend.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.friendCount);
            return w;
        };
        p_role_friend.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_role_friend();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendCount"))
                throw $util.ProtocolError("missing required 'friendCount'", { instance: m });
            return m;
        };
        return p_role_friend;
    })();
    $root.s2c_query_role_info_reply = (function() {
        function s2c_query_role_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_role_info_reply.prototype.info = null;
        s2c_query_role_info_reply.prototype.fight = null;
        s2c_query_role_info_reply.prototype.friendInfo = null;
        s2c_query_role_info_reply.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_role_info_reply.prototype.spouseName = "";
        s2c_query_role_info_reply.cmd = 267;
        s2c_query_role_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_role_info.encode(m.info, w.uint32(10).fork()).ldelim();
            $root.p_fight_attribute.encode(m.fight, w.uint32(18).fork()).ldelim();
            $root.p_role_friend.encode(m.friendInfo, w.uint32(26).fork()).ldelim();
            w.uint32(32).int64(m.teamId);
            if (m.spouseName != null && Object.hasOwnProperty.call(m, "spouseName"))
                w.uint32(42).string(m.spouseName);
            return w;
        };
        s2c_query_role_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_role_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.info = $root.p_role_info.decode(r, r.uint32());
                    break;
                case 2:
                    m.fight = $root.p_fight_attribute.decode(r, r.uint32());
                    break;
                case 3:
                    m.friendInfo = $root.p_role_friend.decode(r, r.uint32());
                    break;
                case 4:
                    m.teamId = r.int64();
                    break;
                case 5:
                    m.spouseName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("info"))
                throw $util.ProtocolError("missing required 'info'", { instance: m });
            if (!m.hasOwnProperty("fight"))
                throw $util.ProtocolError("missing required 'fight'", { instance: m });
            if (!m.hasOwnProperty("friendInfo"))
                throw $util.ProtocolError("missing required 'friendInfo'", { instance: m });
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return s2c_query_role_info_reply;
    })();
    $root.c2s_name_change_request = (function() {
        function c2s_name_change_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_name_change_request.prototype.name = "";
        c2s_name_change_request.cmd = 268;
        c2s_name_change_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            return w;
        };
        c2s_name_change_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_name_change_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            return m;
        };
        return c2s_name_change_request;
    })();
    $root.c2s_role_revive_request = (function() {
        function c2s_role_revive_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_revive_request.prototype.reviveType = 0;
        c2s_role_revive_request.cmd = 269;
        c2s_role_revive_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.reviveType);
            return w;
        };
        c2s_role_revive_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_revive_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.reviveType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("reviveType"))
                throw $util.ProtocolError("missing required 'reviveType'", { instance: m });
            return m;
        };
        return c2s_role_revive_request;
    })();
    $root.p_role_buff = (function() {
        function p_role_buff(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_role_buff.prototype.id = 0;
        p_role_buff.prototype.typeId = 0;
        p_role_buff.prototype.enabled = 0;
        p_role_buff.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_buff.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_role_buff.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.typeId);
            w.uint32(24).int32(m.enabled);
            w.uint32(32).int64(m.startTime);
            w.uint32(40).int64(m.endTime);
            return w;
        };
        p_role_buff.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_role_buff();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.typeId = r.int32();
                    break;
                case 3:
                    m.enabled = r.int32();
                    break;
                case 4:
                    m.startTime = r.int64();
                    break;
                case 5:
                    m.endTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("enabled"))
                throw $util.ProtocolError("missing required 'enabled'", { instance: m });
            if (!m.hasOwnProperty("startTime"))
                throw $util.ProtocolError("missing required 'startTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            return m;
        };
        return p_role_buff;
    })();
    $root.c2s_role_buff_list_request = (function() {
        function c2s_role_buff_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_buff_list_request.cmd = 270;
        c2s_role_buff_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_role_buff_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_buff_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_role_buff_list_request;
    })();
    $root.s2c_role_buff_list_reply = (function() {
        function s2c_role_buff_list_reply(p) {
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_buff_list_reply.prototype.buffList = $util.emptyArray;
        s2c_role_buff_list_reply.cmd = 271;
        s2c_role_buff_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_role_buff.encode(m.buffList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_buff_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_buff_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_role_buff.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_buff_list_reply;
    })();
    $root.s2c_add_role_buff_notify = (function() {
        function s2c_add_role_buff_notify(p) {
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_role_buff_notify.prototype.buffList = $util.emptyArray;
        s2c_add_role_buff_notify.cmd = 272;
        s2c_add_role_buff_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_role_buff.encode(m.buffList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_add_role_buff_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_role_buff_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_role_buff.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_add_role_buff_notify;
    })();
    $root.s2c_remove_role_buff_notify = (function() {
        function s2c_remove_role_buff_notify(p) {
            this.idList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_remove_role_buff_notify.prototype.idList = $util.emptyArray;
        s2c_remove_role_buff_notify.cmd = 273;
        s2c_remove_role_buff_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.idList != null && m.idList.length) {
                for (var i = 0; i < m.idList.length; ++i)
                    w.uint32(8).int32(m.idList[i]);
            }
            return w;
        };
        s2c_remove_role_buff_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_remove_role_buff_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.idList && m.idList.length))
                        m.idList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.idList.push(r.int32());
                    } else
                        m.idList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_remove_role_buff_notify;
    })();
    $root.c2s_change_battle_mode_request = (function() {
        function c2s_change_battle_mode_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_battle_mode_request.prototype.mode = 0;
        c2s_change_battle_mode_request.cmd = 274;
        c2s_change_battle_mode_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.mode);
            return w;
        };
        c2s_change_battle_mode_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_battle_mode_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.mode = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("mode"))
                throw $util.ProtocolError("missing required 'mode'", { instance: m });
            return m;
        };
        return c2s_change_battle_mode_request;
    })();
    $root.s2c_vip_info_notify = (function() {
        function s2c_vip_info_notify(p) {
            this.buyList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_vip_info_notify.prototype.lv = 0;
        s2c_vip_info_notify.prototype.timeout = 0;
        s2c_vip_info_notify.prototype.exp = 0;
        s2c_vip_info_notify.prototype.isGetExp = 0;
        s2c_vip_info_notify.prototype.buyList = $util.emptyArray;
        s2c_vip_info_notify.cmd = 275;
        s2c_vip_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.lv);
            w.uint32(16).int32(m.timeout);
            w.uint32(24).int32(m.exp);
            w.uint32(32).int32(m.isGetExp);
            if (m.buyList != null && m.buyList.length) {
                for (var i = 0; i < m.buyList.length; ++i)
                    w.uint32(40).int32(m.buyList[i]);
            }
            return w;
        };
        s2c_vip_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_vip_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.lv = r.int32();
                    break;
                case 2:
                    m.timeout = r.int32();
                    break;
                case 3:
                    m.exp = r.int32();
                    break;
                case 4:
                    m.isGetExp = r.int32();
                    break;
                case 5:
                    if (!(m.buyList && m.buyList.length))
                        m.buyList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.buyList.push(r.int32());
                    } else
                        m.buyList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("lv"))
                throw $util.ProtocolError("missing required 'lv'", { instance: m });
            if (!m.hasOwnProperty("timeout"))
                throw $util.ProtocolError("missing required 'timeout'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("isGetExp"))
                throw $util.ProtocolError("missing required 'isGetExp'", { instance: m });
            return m;
        };
        return s2c_vip_info_notify;
    })();
    $root.c2s_vip_get_exp = (function() {
        function c2s_vip_get_exp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_vip_get_exp.prototype.type = 0;
        c2s_vip_get_exp.cmd = 276;
        c2s_vip_get_exp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_vip_get_exp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_vip_get_exp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_vip_get_exp;
    })();
    $root.c2s_vip_buy_gift_package = (function() {
        function c2s_vip_buy_gift_package(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_vip_buy_gift_package.prototype.lv = 0;
        c2s_vip_buy_gift_package.cmd = 277;
        c2s_vip_buy_gift_package.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.lv);
            return w;
        };
        c2s_vip_buy_gift_package.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_vip_buy_gift_package();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.lv = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("lv"))
                throw $util.ProtocolError("missing required 'lv'", { instance: m });
            return m;
        };
        return c2s_vip_buy_gift_package;
    })();
    $root.s2c_vip_buy_gift_package = (function() {
        function s2c_vip_buy_gift_package(p) {
            this.buyList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_vip_buy_gift_package.prototype.buyList = $util.emptyArray;
        s2c_vip_buy_gift_package.cmd = 278;
        s2c_vip_buy_gift_package.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.buyList != null && m.buyList.length) {
                for (var i = 0; i < m.buyList.length; ++i)
                    w.uint32(8).int32(m.buyList[i]);
            }
            return w;
        };
        s2c_vip_buy_gift_package.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_vip_buy_gift_package();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.buyList && m.buyList.length))
                        m.buyList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.buyList.push(r.int32());
                    } else
                        m.buyList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_vip_buy_gift_package;
    })();
    $root.s2c_change_role_buff_notify = (function() {
        function s2c_change_role_buff_notify(p) {
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_change_role_buff_notify.prototype.buffList = $util.emptyArray;
        s2c_change_role_buff_notify.cmd = 279;
        s2c_change_role_buff_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_role_buff.encode(m.buffList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_change_role_buff_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_change_role_buff_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_role_buff.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_change_role_buff_notify;
    })();
    $root.s2c_add_exp_notify = (function() {
        function s2c_add_exp_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_exp_notify.prototype.addExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_add_exp_notify.prototype.additionRate = 0;
        s2c_add_exp_notify.prototype.reason = 0;
        s2c_add_exp_notify.cmd = 280;
        s2c_add_exp_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.addExp);
            w.uint32(16).int32(m.additionRate);
            w.uint32(24).int32(m.reason);
            return w;
        };
        s2c_add_exp_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_exp_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.addExp = r.int64();
                    break;
                case 2:
                    m.additionRate = r.int32();
                    break;
                case 3:
                    m.reason = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("addExp"))
                throw $util.ProtocolError("missing required 'addExp'", { instance: m });
            if (!m.hasOwnProperty("additionRate"))
                throw $util.ProtocolError("missing required 'additionRate'", { instance: m });
            if (!m.hasOwnProperty("reason"))
                throw $util.ProtocolError("missing required 'reason'", { instance: m });
            return m;
        };
        return s2c_add_exp_notify;
    })();
    $root.c2s_query_role_image_info_request = (function() {
        function c2s_query_role_image_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_role_image_info_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_query_role_image_info_request.cmd = 281;
        c2s_query_role_image_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_query_role_image_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_role_image_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_query_role_image_info_request;
    })();
    $root.s2c_query_role_image_info_reply = (function() {
        function s2c_query_role_image_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_role_image_info_reply.prototype.wingImage = 0;
        s2c_query_role_image_info_reply.prototype.talismanImage = 0;
        s2c_query_role_image_info_reply.prototype.weaponImage = 0;
        s2c_query_role_image_info_reply.prototype.cloakImage = 0;
        s2c_query_role_image_info_reply.prototype.clothesDressupImage = 0;
        s2c_query_role_image_info_reply.prototype.weaponDressupImage = 0;
        s2c_query_role_image_info_reply.prototype.lightDressupImage = 0;
        s2c_query_role_image_info_reply.prototype.weaponId = 0;
        s2c_query_role_image_info_reply.prototype.bubbleDressupImage = 0;
        s2c_query_role_image_info_reply.prototype.frameDressupImage = 0;
        s2c_query_role_image_info_reply.prototype.headDressupImage = 0;
        s2c_query_role_image_info_reply.prototype.bgDressupImage = 0;
        s2c_query_role_image_info_reply.cmd = 282;
        s2c_query_role_image_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.wingImage);
            w.uint32(16).int32(m.talismanImage);
            w.uint32(24).int32(m.weaponImage);
            w.uint32(32).int32(m.cloakImage);
            w.uint32(40).int32(m.clothesDressupImage);
            w.uint32(48).int32(m.weaponDressupImage);
            w.uint32(56).int32(m.lightDressupImage);
            w.uint32(64).int32(m.weaponId);
            w.uint32(72).int32(m.bubbleDressupImage);
            w.uint32(80).int32(m.frameDressupImage);
            w.uint32(88).int32(m.headDressupImage);
            w.uint32(96).int32(m.bgDressupImage);
            return w;
        };
        s2c_query_role_image_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_role_image_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.wingImage = r.int32();
                    break;
                case 2:
                    m.talismanImage = r.int32();
                    break;
                case 3:
                    m.weaponImage = r.int32();
                    break;
                case 4:
                    m.cloakImage = r.int32();
                    break;
                case 5:
                    m.clothesDressupImage = r.int32();
                    break;
                case 6:
                    m.weaponDressupImage = r.int32();
                    break;
                case 7:
                    m.lightDressupImage = r.int32();
                    break;
                case 8:
                    m.weaponId = r.int32();
                    break;
                case 9:
                    m.bubbleDressupImage = r.int32();
                    break;
                case 10:
                    m.frameDressupImage = r.int32();
                    break;
                case 11:
                    m.headDressupImage = r.int32();
                    break;
                case 12:
                    m.bgDressupImage = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("wingImage"))
                throw $util.ProtocolError("missing required 'wingImage'", { instance: m });
            if (!m.hasOwnProperty("talismanImage"))
                throw $util.ProtocolError("missing required 'talismanImage'", { instance: m });
            if (!m.hasOwnProperty("weaponImage"))
                throw $util.ProtocolError("missing required 'weaponImage'", { instance: m });
            if (!m.hasOwnProperty("cloakImage"))
                throw $util.ProtocolError("missing required 'cloakImage'", { instance: m });
            if (!m.hasOwnProperty("clothesDressupImage"))
                throw $util.ProtocolError("missing required 'clothesDressupImage'", { instance: m });
            if (!m.hasOwnProperty("weaponDressupImage"))
                throw $util.ProtocolError("missing required 'weaponDressupImage'", { instance: m });
            if (!m.hasOwnProperty("lightDressupImage"))
                throw $util.ProtocolError("missing required 'lightDressupImage'", { instance: m });
            if (!m.hasOwnProperty("weaponId"))
                throw $util.ProtocolError("missing required 'weaponId'", { instance: m });
            if (!m.hasOwnProperty("bubbleDressupImage"))
                throw $util.ProtocolError("missing required 'bubbleDressupImage'", { instance: m });
            if (!m.hasOwnProperty("frameDressupImage"))
                throw $util.ProtocolError("missing required 'frameDressupImage'", { instance: m });
            if (!m.hasOwnProperty("headDressupImage"))
                throw $util.ProtocolError("missing required 'headDressupImage'", { instance: m });
            if (!m.hasOwnProperty("bgDressupImage"))
                throw $util.ProtocolError("missing required 'bgDressupImage'", { instance: m });
            return m;
        };
        return s2c_query_role_image_info_reply;
    })();
    $root.c2s_dragon_soul_lv_up = (function() {
        function c2s_dragon_soul_lv_up(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dragon_soul_lv_up.prototype.payWay = 0;
        c2s_dragon_soul_lv_up.cmd = 283;
        c2s_dragon_soul_lv_up.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.payWay);
            return w;
        };
        c2s_dragon_soul_lv_up.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dragon_soul_lv_up();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.payWay = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("payWay"))
                throw $util.ProtocolError("missing required 'payWay'", { instance: m });
            return m;
        };
        return c2s_dragon_soul_lv_up;
    })();
    $root.c2s_trans_up = (function() {
        function c2s_trans_up(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_trans_up.cmd = 284;
        c2s_trans_up.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_trans_up.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_trans_up();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_trans_up;
    })();
    $root.s2c_finish_trans_condition = (function() {
        function s2c_finish_trans_condition(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_finish_trans_condition.prototype.finishTrans = 0;
        s2c_finish_trans_condition.cmd = 285;
        s2c_finish_trans_condition.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.finishTrans);
            return w;
        };
        s2c_finish_trans_condition.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_finish_trans_condition();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.finishTrans = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("finishTrans"))
                throw $util.ProtocolError("missing required 'finishTrans'", { instance: m });
            return m;
        };
        return s2c_finish_trans_condition;
    })();
    $root.c2s_change_setting_request = (function() {
        function c2s_change_setting_request(p) {
            this.settingList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_setting_request.prototype.settingList = $util.emptyArray;
        c2s_change_setting_request.cmd = 286;
        c2s_change_setting_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.settingList != null && m.settingList.length) {
                for (var i = 0; i < m.settingList.length; ++i)
                    $root.p_kv_pair.encode(m.settingList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        c2s_change_setting_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_setting_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.settingList && m.settingList.length))
                        m.settingList = [];
                    m.settingList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_change_setting_request;
    })();
    $root.s2c_setting_info_notify = (function() {
        function s2c_setting_info_notify(p) {
            this.settingList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_setting_info_notify.prototype.settingList = $util.emptyArray;
        s2c_setting_info_notify.cmd = 287;
        s2c_setting_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.settingList != null && m.settingList.length) {
                for (var i = 0; i < m.settingList.length; ++i)
                    $root.p_kv_pair.encode(m.settingList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_setting_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_setting_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.settingList && m.settingList.length))
                        m.settingList = [];
                    m.settingList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_setting_info_notify;
    })();
    $root.c2s_complaint_request = (function() {
        function c2s_complaint_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_complaint_request.prototype.type = 0;
        c2s_complaint_request.prototype.title = "";
        c2s_complaint_request.prototype.content = "";
        c2s_complaint_request.cmd = 288;
        c2s_complaint_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(18).string(m.title);
            w.uint32(26).string(m.content);
            return w;
        };
        c2s_complaint_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_complaint_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.title = r.string();
                    break;
                case 3:
                    m.content = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("title"))
                throw $util.ProtocolError("missing required 'title'", { instance: m });
            if (!m.hasOwnProperty("content"))
                throw $util.ProtocolError("missing required 'content'", { instance: m });
            return m;
        };
        return c2s_complaint_request;
    })();
    $root.s2c_revive_tired_info = (function() {
        function s2c_revive_tired_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_revive_tired_info.prototype.dieTimes = 0;
        s2c_revive_tired_info.prototype.dieTimestamp = 0;
        s2c_revive_tired_info.prototype.tiredTime = 0;
        s2c_revive_tired_info.cmd = 289;
        s2c_revive_tired_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.dieTimes);
            w.uint32(16).int32(m.dieTimestamp);
            w.uint32(24).int32(m.tiredTime);
            return w;
        };
        s2c_revive_tired_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_revive_tired_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.dieTimes = r.int32();
                    break;
                case 2:
                    m.dieTimestamp = r.int32();
                    break;
                case 3:
                    m.tiredTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("dieTimes"))
                throw $util.ProtocolError("missing required 'dieTimes'", { instance: m });
            if (!m.hasOwnProperty("dieTimestamp"))
                throw $util.ProtocolError("missing required 'dieTimestamp'", { instance: m });
            if (!m.hasOwnProperty("tiredTime"))
                throw $util.ProtocolError("missing required 'tiredTime'", { instance: m });
            return m;
        };
        return s2c_revive_tired_info;
    })();
    $root.c2s_query_revive_tired_info = (function() {
        function c2s_query_revive_tired_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_revive_tired_info.cmd = 290;
        c2s_query_revive_tired_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_revive_tired_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_revive_tired_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_revive_tired_info;
    })();
    $root.c2s_month_card_request = (function() {
        function c2s_month_card_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_month_card_request.prototype.type = 0;
        c2s_month_card_request.cmd = 291;
        c2s_month_card_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_month_card_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_month_card_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_month_card_request;
    })();
    $root.s2c_month_card_reply = (function() {
        function s2c_month_card_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_month_card_reply.prototype.active = 0;
        s2c_month_card_reply.prototype.day = 0;
        s2c_month_card_reply.prototype.flag = 0;
        s2c_month_card_reply.prototype.fetchActiveRw = 0;
        s2c_month_card_reply.prototype.type = 1;
        s2c_month_card_reply.cmd = 292;
        s2c_month_card_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.active);
            w.uint32(16).int32(m.day);
            w.uint32(24).int32(m.flag);
            w.uint32(32).int32(m.fetchActiveRw);
            w.uint32(40).int32(m.type);
            return w;
        };
        s2c_month_card_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_month_card_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.active = r.int32();
                    break;
                case 2:
                    m.day = r.int32();
                    break;
                case 3:
                    m.flag = r.int32();
                    break;
                case 4:
                    m.fetchActiveRw = r.int32();
                    break;
                case 5:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("active"))
                throw $util.ProtocolError("missing required 'active'", { instance: m });
            if (!m.hasOwnProperty("day"))
                throw $util.ProtocolError("missing required 'day'", { instance: m });
            if (!m.hasOwnProperty("flag"))
                throw $util.ProtocolError("missing required 'flag'", { instance: m });
            if (!m.hasOwnProperty("fetchActiveRw"))
                throw $util.ProtocolError("missing required 'fetchActiveRw'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_month_card_reply;
    })();
    $root.p_investment = (function() {
        function p_investment(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_investment.prototype.type = 0;
        p_investment.prototype.grade = 0;
        p_investment.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.grade);
            return w;
        };
        p_investment.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_investment();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.grade = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("grade"))
                throw $util.ProtocolError("missing required 'grade'", { instance: m });
            return m;
        };
        return p_investment;
    })();
    $root.p_investment_reward = (function() {
        function p_investment_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_investment_reward.prototype.type = 0;
        p_investment_reward.prototype.grade = 0;
        p_investment_reward.prototype.level = 0;
        p_investment_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.grade);
            w.uint32(24).int32(m.level);
            return w;
        };
        p_investment_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_investment_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.grade = r.int32();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("grade"))
                throw $util.ProtocolError("missing required 'grade'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            return m;
        };
        return p_investment_reward;
    })();
    $root.s2c_investment_info = (function() {
        function s2c_investment_info(p) {
            this.investmentList = [];
            this.fetchedRewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_investment_info.prototype.investmentList = $util.emptyArray;
        s2c_investment_info.prototype.fetchedRewards = $util.emptyArray;
        s2c_investment_info.cmd = 293;
        s2c_investment_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.investmentList != null && m.investmentList.length) {
                for (var i = 0; i < m.investmentList.length; ++i)
                    $root.p_investment.encode(m.investmentList[i], w.uint32(10).fork()).ldelim();
            }
            if (m.fetchedRewards != null && m.fetchedRewards.length) {
                for (var i = 0; i < m.fetchedRewards.length; ++i)
                    $root.p_investment_reward.encode(m.fetchedRewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_investment_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_investment_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.investmentList && m.investmentList.length))
                        m.investmentList = [];
                    m.investmentList.push($root.p_investment.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.fetchedRewards && m.fetchedRewards.length))
                        m.fetchedRewards = [];
                    m.fetchedRewards.push($root.p_investment_reward.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_investment_info;
    })();
    $root.c2s_buy_investment_request = (function() {
        function c2s_buy_investment_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_buy_investment_request.prototype.type = 0;
        c2s_buy_investment_request.prototype.grade = 0;
        c2s_buy_investment_request.cmd = 294;
        c2s_buy_investment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.grade);
            return w;
        };
        c2s_buy_investment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_buy_investment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.grade = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("grade"))
                throw $util.ProtocolError("missing required 'grade'", { instance: m });
            return m;
        };
        return c2s_buy_investment_request;
    })();
    $root.c2s_fetch_investment_reward_request = (function() {
        function c2s_fetch_investment_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_investment_reward_request.prototype.type = 0;
        c2s_fetch_investment_reward_request.prototype.level = 0;
        c2s_fetch_investment_reward_request.cmd = 295;
        c2s_fetch_investment_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.level);
            return w;
        };
        c2s_fetch_investment_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_investment_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            return m;
        };
        return c2s_fetch_investment_reward_request;
    })();
    $root.s2c_role_pray_info_notify = (function() {
        function s2c_role_pray_info_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_pray_info_notify.prototype.freeCoinPrayTime = 0;
        s2c_role_pray_info_notify.prototype.coinPrayTimes = 0;
        s2c_role_pray_info_notify.prototype.expPrayTimes = 0;
        s2c_role_pray_info_notify.prototype.freeExpPrayTime = 0;
        s2c_role_pray_info_notify.cmd = 296;
        s2c_role_pray_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.freeCoinPrayTime);
            w.uint32(16).int32(m.coinPrayTimes);
            w.uint32(24).int32(m.expPrayTimes);
            w.uint32(32).int32(m.freeExpPrayTime);
            return w;
        };
        s2c_role_pray_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_pray_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.freeCoinPrayTime = r.int32();
                    break;
                case 2:
                    m.coinPrayTimes = r.int32();
                    break;
                case 3:
                    m.expPrayTimes = r.int32();
                    break;
                case 4:
                    m.freeExpPrayTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("freeCoinPrayTime"))
                throw $util.ProtocolError("missing required 'freeCoinPrayTime'", { instance: m });
            if (!m.hasOwnProperty("coinPrayTimes"))
                throw $util.ProtocolError("missing required 'coinPrayTimes'", { instance: m });
            if (!m.hasOwnProperty("expPrayTimes"))
                throw $util.ProtocolError("missing required 'expPrayTimes'", { instance: m });
            if (!m.hasOwnProperty("freeExpPrayTime"))
                throw $util.ProtocolError("missing required 'freeExpPrayTime'", { instance: m });
            return m;
        };
        return s2c_role_pray_info_notify;
    })();
    $root.c2s_pray_request = (function() {
        function c2s_pray_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pray_request.prototype.type = 0;
        c2s_pray_request.prototype.adWatch = 0;
        c2s_pray_request.cmd = 297;
        c2s_pray_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.adWatch);
            return w;
        };
        c2s_pray_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pray_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.adWatch = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("adWatch"))
                throw $util.ProtocolError("missing required 'adWatch'", { instance: m });
            return m;
        };
        return c2s_pray_request;
    })();
    $root.s2c_pray_reply = (function() {
        function s2c_pray_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_pray_reply.prototype.type = 0;
        s2c_pray_reply.prototype.gainCoin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_pray_reply.prototype.gainExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_pray_reply.prototype.crit = 0;
        s2c_pray_reply.cmd = 298;
        s2c_pray_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int64(m.gainCoin);
            w.uint32(24).int64(m.gainExp);
            w.uint32(32).int32(m.crit);
            return w;
        };
        s2c_pray_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_pray_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.gainCoin = r.int64();
                    break;
                case 3:
                    m.gainExp = r.int64();
                    break;
                case 4:
                    m.crit = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("gainCoin"))
                throw $util.ProtocolError("missing required 'gainCoin'", { instance: m });
            if (!m.hasOwnProperty("gainExp"))
                throw $util.ProtocolError("missing required 'gainExp'", { instance: m });
            if (!m.hasOwnProperty("crit"))
                throw $util.ProtocolError("missing required 'crit'", { instance: m });
            return m;
        };
        return s2c_pray_reply;
    })();
    $root.c2s_get_offline_award_request = (function() {
        function c2s_get_offline_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_offline_award_request.prototype.type = 0;
        c2s_get_offline_award_request.prototype.sharePicture = 0;
        c2s_get_offline_award_request.cmd = 299;
        c2s_get_offline_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.sharePicture);
            return w;
        };
        c2s_get_offline_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_offline_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.sharePicture = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("sharePicture"))
                throw $util.ProtocolError("missing required 'sharePicture'", { instance: m });
            return m;
        };
        return c2s_get_offline_award_request;
    })();
    $root.p_role_score = (function() {
        function p_role_score(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_role_score.prototype.id = 0;
        p_role_score.prototype.fightScore = 0;
        p_role_score.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.fightScore != null && Object.hasOwnProperty.call(m, "fightScore"))
                w.uint32(16).int32(m.fightScore);
            return w;
        };
        p_role_score.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_role_score();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.fightScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_role_score;
    })();
    $root.c2s_role_fight_score_request = (function() {
        function c2s_role_fight_score_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_fight_score_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_role_fight_score_request.cmd = 300;
        c2s_role_fight_score_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_role_fight_score_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_fight_score_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_role_fight_score_request;
    })();
    $root.s2c_role_fight_score_reply = (function() {
        function s2c_role_fight_score_reply(p) {
            this.scoreList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_fight_score_reply.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_fight_score_reply.prototype.scoreList = $util.emptyArray;
        s2c_role_fight_score_reply.cmd = 301;
        s2c_role_fight_score_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            if (m.scoreList != null && m.scoreList.length) {
                for (var i = 0; i < m.scoreList.length; ++i)
                    $root.p_role_score.encode(m.scoreList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_role_fight_score_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_fight_score_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    if (!(m.scoreList && m.scoreList.length))
                        m.scoreList = [];
                    m.scoreList.push($root.p_role_score.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return s2c_role_fight_score_reply;
    })();
    $root.s2c_role_print_log_notify = (function() {
        function s2c_role_print_log_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_print_log_notify.prototype.text = "";
        s2c_role_print_log_notify.cmd = 302;
        s2c_role_print_log_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.text != null && Object.hasOwnProperty.call(m, "text"))
                w.uint32(10).string(m.text);
            return w;
        };
        s2c_role_print_log_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_print_log_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.text = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_print_log_notify;
    })();
    $root.s2c_role_anti_addicition_notify = (function() {
        function s2c_role_anti_addicition_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_anti_addicition_notify.prototype.onLineHour = 0;
        s2c_role_anti_addicition_notify.cmd = 303;
        s2c_role_anti_addicition_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.onLineHour);
            return w;
        };
        s2c_role_anti_addicition_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_anti_addicition_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.onLineHour = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("onLineHour"))
                throw $util.ProtocolError("missing required 'onLineHour'", { instance: m });
            return m;
        };
        return s2c_role_anti_addicition_notify;
    })();
    $root.p_kv_pair = (function() {
        function p_kv_pair(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_kv_pair.prototype.key = 0;
        p_kv_pair.prototype.val = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_kv_pair.prototype.strVal = "";
        p_kv_pair.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.key);
            if (m.val != null && Object.hasOwnProperty.call(m, "val"))
                w.uint32(16).int64(m.val);
            if (m.strVal != null && Object.hasOwnProperty.call(m, "strVal"))
                w.uint32(26).string(m.strVal);
            return w;
        };
        p_kv_pair.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_kv_pair();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.int32();
                    break;
                case 2:
                    m.val = r.int64();
                    break;
                case 3:
                    m.strVal = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("key"))
                throw $util.ProtocolError("missing required 'key'", { instance: m });
            return m;
        };
        return p_kv_pair;
    })();
    $root.item_simple = (function() {
        function item_simple(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        item_simple.prototype.baseId = 0;
        item_simple.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        item_simple.prototype.bound = 0;
        item_simple.prototype.count = 0;
        item_simple.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            w.uint32(16).int64(m.uniqId);
            w.uint32(24).int32(m.bound);
            w.uint32(32).int32(m.count);
            return w;
        };
        item_simple.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.item_simple();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                case 2:
                    m.uniqId = r.int64();
                    break;
                case 3:
                    m.bound = r.int32();
                    break;
                case 4:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return item_simple;
    })();
    $root.item_use = (function() {
        function item_use(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        item_use.prototype.baseId = 0;
        item_use.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        item_use.prototype.bound = 0;
        item_use.prototype.count = 0;
        item_use.prototype.targetId = 0;
        item_use.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            w.uint32(16).int64(m.uniqId);
            w.uint32(24).int32(m.bound);
            w.uint32(32).int32(m.count);
            if (m.targetId != null && Object.hasOwnProperty.call(m, "targetId"))
                w.uint32(40).int32(m.targetId);
            return w;
        };
        item_use.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.item_use();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                case 2:
                    m.uniqId = r.int64();
                    break;
                case 3:
                    m.bound = r.int32();
                    break;
                case 4:
                    m.count = r.int32();
                    break;
                case 5:
                    m.targetId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return item_use;
    })();
    $root.p_chat_section = (function() {
        function p_chat_section(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_chat_section.prototype.content = "";
        p_chat_section.prototype.type = 0;
        p_chat_section.prototype.arg1 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_chat_section.prototype.arg2 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_chat_section.prototype.arg3 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_chat_section.prototype.arg4 = "";
        p_chat_section.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.content);
            w.uint32(16).int32(m.type);
            if (m.arg1 != null && Object.hasOwnProperty.call(m, "arg1"))
                w.uint32(24).int64(m.arg1);
            if (m.arg2 != null && Object.hasOwnProperty.call(m, "arg2"))
                w.uint32(32).int64(m.arg2);
            if (m.arg3 != null && Object.hasOwnProperty.call(m, "arg3"))
                w.uint32(40).int64(m.arg3);
            if (m.arg4 != null && Object.hasOwnProperty.call(m, "arg4"))
                w.uint32(50).string(m.arg4);
            return w;
        };
        p_chat_section.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_chat_section();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.content = r.string();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.arg1 = r.int64();
                    break;
                case 4:
                    m.arg2 = r.int64();
                    break;
                case 5:
                    m.arg3 = r.int64();
                    break;
                case 6:
                    m.arg4 = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("content"))
                throw $util.ProtocolError("missing required 'content'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return p_chat_section;
    })();
    $root.c2s_chat_request = (function() {
        function c2s_chat_request(p) {
            this.contents = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_chat_request.prototype.channelId = 0;
        c2s_chat_request.prototype.contents = $util.emptyArray;
        c2s_chat_request.cmd = 513;
        c2s_chat_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.channelId);
            if (m.contents != null && m.contents.length) {
                for (var i = 0; i < m.contents.length; ++i)
                    $root.p_chat_section.encode(m.contents[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        c2s_chat_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_chat_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.channelId = r.int32();
                    break;
                case 2:
                    if (!(m.contents && m.contents.length))
                        m.contents = [];
                    m.contents.push($root.p_chat_section.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("channelId"))
                throw $util.ProtocolError("missing required 'channelId'", { instance: m });
            return m;
        };
        return c2s_chat_request;
    })();
    $root.s2c_chat_reply = (function() {
        function s2c_chat_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_chat_reply.cmd = 514;
        s2c_chat_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_chat_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_chat_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_chat_reply;
    })();
    $root.s2c_chat_notify = (function() {
        function s2c_chat_notify(p) {
            this.args = [];
            this.contents = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_chat_notify.prototype.id = 0;
        s2c_chat_notify.prototype.args = $util.emptyArray;
        s2c_chat_notify.prototype.channelId = 0;
        s2c_chat_notify.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_chat_notify.prototype.time = 0;
        s2c_chat_notify.prototype.name = "";
        s2c_chat_notify.prototype.sex = 0;
        s2c_chat_notify.prototype.trans = 0;
        s2c_chat_notify.prototype.vip = 0;
        s2c_chat_notify.prototype.image = 0;
        s2c_chat_notify.prototype.contents = $util.emptyArray;
        s2c_chat_notify.prototype.bubbleImage = 0;
        s2c_chat_notify.prototype.frameImage = 0;
        s2c_chat_notify.prototype.titleId = 0;
        s2c_chat_notify.prototype.stateId = 0;
        s2c_chat_notify.cmd = 515;
        s2c_chat_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            if (m.args != null && m.args.length) {
                for (var i = 0; i < m.args.length; ++i)
                    $root.p_anno_arg.encode(m.args[i], w.uint32(18).fork()).ldelim();
            }
            w.uint32(24).int32(m.channelId);
            w.uint32(32).int64(m.roleId);
            w.uint32(40).int32(m.time);
            w.uint32(50).string(m.name);
            w.uint32(56).int32(m.sex);
            w.uint32(64).int32(m.trans);
            w.uint32(72).int32(m.vip);
            w.uint32(80).int32(m.image);
            if (m.contents != null && m.contents.length) {
                for (var i = 0; i < m.contents.length; ++i)
                    $root.p_chat_section.encode(m.contents[i], w.uint32(90).fork()).ldelim();
            }
            w.uint32(96).int32(m.bubbleImage);
            w.uint32(104).int32(m.frameImage);
            w.uint32(112).int32(m.titleId);
            w.uint32(120).int32(m.stateId);
            return w;
        };
        s2c_chat_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_chat_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    if (!(m.args && m.args.length))
                        m.args = [];
                    m.args.push($root.p_anno_arg.decode(r, r.uint32()));
                    break;
                case 3:
                    m.channelId = r.int32();
                    break;
                case 4:
                    m.roleId = r.int64();
                    break;
                case 5:
                    m.time = r.int32();
                    break;
                case 6:
                    m.name = r.string();
                    break;
                case 7:
                    m.sex = r.int32();
                    break;
                case 8:
                    m.trans = r.int32();
                    break;
                case 9:
                    m.vip = r.int32();
                    break;
                case 10:
                    m.image = r.int32();
                    break;
                case 11:
                    if (!(m.contents && m.contents.length))
                        m.contents = [];
                    m.contents.push($root.p_chat_section.decode(r, r.uint32()));
                    break;
                case 12:
                    m.bubbleImage = r.int32();
                    break;
                case 13:
                    m.frameImage = r.int32();
                    break;
                case 14:
                    m.titleId = r.int32();
                    break;
                case 15:
                    m.stateId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("channelId"))
                throw $util.ProtocolError("missing required 'channelId'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("vip"))
                throw $util.ProtocolError("missing required 'vip'", { instance: m });
            if (!m.hasOwnProperty("image"))
                throw $util.ProtocolError("missing required 'image'", { instance: m });
            if (!m.hasOwnProperty("bubbleImage"))
                throw $util.ProtocolError("missing required 'bubbleImage'", { instance: m });
            if (!m.hasOwnProperty("frameImage"))
                throw $util.ProtocolError("missing required 'frameImage'", { instance: m });
            if (!m.hasOwnProperty("titleId"))
                throw $util.ProtocolError("missing required 'titleId'", { instance: m });
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            return m;
        };
        return s2c_chat_notify;
    })();
    $root.c2s_voice_request = (function() {
        function c2s_voice_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_voice_request.prototype.voiceId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_voice_request.cmd = 516;
        c2s_voice_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.voiceId);
            return w;
        };
        c2s_voice_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_voice_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.voiceId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("voiceId"))
                throw $util.ProtocolError("missing required 'voiceId'", { instance: m });
            return m;
        };
        return c2s_voice_request;
    })();
    $root.s2c_voice_reply = (function() {
        function s2c_voice_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_voice_reply.prototype.contents = "";
        s2c_voice_reply.cmd = 517;
        s2c_voice_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.contents);
            return w;
        };
        s2c_voice_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_voice_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.contents = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("contents"))
                throw $util.ProtocolError("missing required 'contents'", { instance: m });
            return m;
        };
        return s2c_voice_reply;
    })();
    $root.c2s_init_chat_request = (function() {
        function c2s_init_chat_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_init_chat_request.cmd = 518;
        c2s_init_chat_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_init_chat_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_init_chat_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_init_chat_request;
    })();
    $root.s2c_init_chat_reply = (function() {
        function s2c_init_chat_reply(p) {
            this.worldChat = [];
            this.gangChat = [];
            this.teamChat = [];
            this.annoChat = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_init_chat_reply.prototype.worldChat = $util.emptyArray;
        s2c_init_chat_reply.prototype.gangChat = $util.emptyArray;
        s2c_init_chat_reply.prototype.teamChat = $util.emptyArray;
        s2c_init_chat_reply.prototype.annoChat = $util.emptyArray;
        s2c_init_chat_reply.cmd = 519;
        s2c_init_chat_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.worldChat != null && m.worldChat.length) {
                for (var i = 0; i < m.worldChat.length; ++i)
                    $root.s2c_chat_notify.encode(m.worldChat[i], w.uint32(10).fork()).ldelim();
            }
            if (m.gangChat != null && m.gangChat.length) {
                for (var i = 0; i < m.gangChat.length; ++i)
                    $root.s2c_chat_notify.encode(m.gangChat[i], w.uint32(18).fork()).ldelim();
            }
            if (m.teamChat != null && m.teamChat.length) {
                for (var i = 0; i < m.teamChat.length; ++i)
                    $root.s2c_chat_notify.encode(m.teamChat[i], w.uint32(26).fork()).ldelim();
            }
            if (m.annoChat != null && m.annoChat.length) {
                for (var i = 0; i < m.annoChat.length; ++i)
                    $root.s2c_anno_notify.encode(m.annoChat[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        s2c_init_chat_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_init_chat_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.worldChat && m.worldChat.length))
                        m.worldChat = [];
                    m.worldChat.push($root.s2c_chat_notify.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.gangChat && m.gangChat.length))
                        m.gangChat = [];
                    m.gangChat.push($root.s2c_chat_notify.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.teamChat && m.teamChat.length))
                        m.teamChat = [];
                    m.teamChat.push($root.s2c_chat_notify.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.annoChat && m.annoChat.length))
                        m.annoChat = [];
                    m.annoChat.push($root.s2c_anno_notify.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_init_chat_reply;
    })();
    $root.s2c_role_remove_chat = (function() {
        function s2c_role_remove_chat(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_remove_chat.prototype.roleId = 0;
        s2c_role_remove_chat.cmd = 520;
        s2c_role_remove_chat.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.roleId);
            return w;
        };
        s2c_role_remove_chat.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_remove_chat();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return s2c_role_remove_chat;
    })();
    $root.c2s_is_in_block = (function() {
        function c2s_is_in_block(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_is_in_block.cmd = 521;
        c2s_is_in_block.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_is_in_block.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_is_in_block();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_is_in_block;
    })();
    $root.s2c_is_in_block = (function() {
        function s2c_is_in_block(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_is_in_block.prototype.status = 0;
        s2c_is_in_block.prototype.duration = 0;
        s2c_is_in_block.cmd = 522;
        s2c_is_in_block.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.status);
            if (m.duration != null && Object.hasOwnProperty.call(m, "duration"))
                w.uint32(16).int32(m.duration);
            return w;
        };
        s2c_is_in_block.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_is_in_block();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.status = r.int32();
                    break;
                case 2:
                    m.duration = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return s2c_is_in_block;
    })();
    $root.c2s_ai_chat_request = (function() {
        function c2s_ai_chat_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_ai_chat_request.prototype.info = null;
        c2s_ai_chat_request.cmd = 523;
        c2s_ai_chat_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.s2c_chat_notify.encode(m.info, w.uint32(10).fork()).ldelim();
            return w;
        };
        c2s_ai_chat_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_ai_chat_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.info = $root.s2c_chat_notify.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("info"))
                throw $util.ProtocolError("missing required 'info'", { instance: m });
            return m;
        };
        return c2s_ai_chat_request;
    })();
    $root.s2c_ai_chat_notify = (function() {
        function s2c_ai_chat_notify(p) {
            this.infoList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_ai_chat_notify.prototype.infoList = $util.emptyArray;
        s2c_ai_chat_notify.cmd = 524;
        s2c_ai_chat_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.infoList != null && m.infoList.length) {
                for (var i = 0; i < m.infoList.length; ++i)
                    $root.s2c_chat_notify.encode(m.infoList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_ai_chat_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_ai_chat_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.infoList && m.infoList.length))
                        m.infoList = [];
                    m.infoList.push($root.s2c_chat_notify.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_ai_chat_notify;
    })();
    $root.p_anno_arg = (function() {
        function p_anno_arg(p) {
            this.args = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_anno_arg.prototype.argType = 0;
        p_anno_arg.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_anno_arg.prototype.text = "";
        p_anno_arg.prototype.args = $util.emptyArray;
        p_anno_arg.prototype.extData = "";
        p_anno_arg.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.argType);
            w.uint32(16).int64(m.value);
            w.uint32(26).string(m.text);
            if (m.args != null && m.args.length) {
                for (var i = 0; i < m.args.length; ++i)
                    w.uint32(32).int64(m.args[i]);
            }
            if (m.extData != null && Object.hasOwnProperty.call(m, "extData"))
                w.uint32(42).string(m.extData);
            return w;
        };
        p_anno_arg.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_anno_arg();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.argType = r.int32();
                    break;
                case 2:
                    m.value = r.int64();
                    break;
                case 3:
                    m.text = r.string();
                    break;
                case 4:
                    if (!(m.args && m.args.length))
                        m.args = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.args.push(r.int64());
                    } else
                        m.args.push(r.int64());
                    break;
                case 5:
                    m.extData = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("argType"))
                throw $util.ProtocolError("missing required 'argType'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            if (!m.hasOwnProperty("text"))
                throw $util.ProtocolError("missing required 'text'", { instance: m });
            return m;
        };
        return p_anno_arg;
    })();
    $root.s2c_anno_notify = (function() {
        function s2c_anno_notify(p) {
            this.args = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_anno_notify.prototype.id = 0;
        s2c_anno_notify.prototype.time = 0;
        s2c_anno_notify.prototype.args = $util.emptyArray;
        s2c_anno_notify.cmd = 3073;
        s2c_anno_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.time);
            if (m.args != null && m.args.length) {
                for (var i = 0; i < m.args.length; ++i)
                    $root.p_anno_arg.encode(m.args[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_anno_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_anno_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.time = r.int32();
                    break;
                case 3:
                    if (!(m.args && m.args.length))
                        m.args = [];
                    m.args.push($root.p_anno_arg.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            return m;
        };
        return s2c_anno_notify;
    })();
    $root.p_scene_role = (function() {
        function p_scene_role(p) {
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_scene_role.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_scene_role.prototype.name = "";
        p_scene_role.prototype.posX = 0;
        p_scene_role.prototype.posY = 0;
        p_scene_role.prototype.level = 0;
        p_scene_role.prototype.sex = 0;
        p_scene_role.prototype.teamId = 0;
        p_scene_role.prototype.isLeader = 0;
        p_scene_role.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_scene_role.prototype.gangName = "";
        p_scene_role.prototype.gangPos = 0;
        p_scene_role.prototype.titleId = 0;
        p_scene_role.prototype.weaponId = 0;
        p_scene_role.prototype.spouseName = "";
        p_scene_role.prototype.pk = 0;
        p_scene_role.prototype.moveSpeed = 0;
        p_scene_role.prototype.hp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_scene_role.prototype.hpMax = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_scene_role.prototype.modelId = 0;
        p_scene_role.prototype.buffList = $util.emptyArray;
        p_scene_role.prototype.mode = 0;
        p_scene_role.prototype.horseType = 0;
        p_scene_role.prototype.wingType = 0;
        p_scene_role.prototype.talismanType = 0;
        p_scene_role.prototype.weaponType = 0;
        p_scene_role.prototype.cloakType = 0;
        p_scene_role.prototype.activityLv = 0;
        p_scene_role.prototype.dressUpClothesType = 0;
        p_scene_role.prototype.dressUpWeaponType = 0;
        p_scene_role.prototype.dressUpLightType = 0;
        p_scene_role.prototype.horsePositionStatus = 0;
        p_scene_role.prototype.escort = 0;
        p_scene_role.prototype.stateId = 0;
        p_scene_role.prototype.vipLevel = 0;
        p_scene_role.prototype.combat = 0;
        p_scene_role.prototype.serverId = 0;
        p_scene_role.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.posX);
            w.uint32(32).int32(m.posY);
            w.uint32(40).int32(m.level);
            w.uint32(48).int32(m.sex);
            w.uint32(56).int32(m.teamId);
            w.uint32(64).int32(m.isLeader);
            w.uint32(72).int64(m.gangId);
            w.uint32(82).string(m.gangName);
            w.uint32(88).int32(m.gangPos);
            w.uint32(96).int32(m.titleId);
            w.uint32(104).int32(m.weaponId);
            w.uint32(114).string(m.spouseName);
            w.uint32(120).int32(m.pk);
            w.uint32(144).int32(m.moveSpeed);
            w.uint32(152).int64(m.hp);
            w.uint32(160).int64(m.hpMax);
            w.uint32(168).int32(m.modelId);
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_battle_buff.encode(m.buffList[i], w.uint32(178).fork()).ldelim();
            }
            w.uint32(184).int32(m.mode);
            w.uint32(192).int32(m.horseType);
            w.uint32(200).int32(m.wingType);
            w.uint32(208).int32(m.talismanType);
            w.uint32(216).int32(m.weaponType);
            w.uint32(224).int32(m.cloakType);
            w.uint32(232).int32(m.activityLv);
            w.uint32(240).int32(m.dressUpClothesType);
            w.uint32(248).int32(m.dressUpWeaponType);
            w.uint32(256).int32(m.dressUpLightType);
            w.uint32(264).int32(m.horsePositionStatus);
            w.uint32(272).int32(m.escort);
            w.uint32(280).int32(m.stateId);
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(288).int32(m.vipLevel);
            if (m.combat != null && Object.hasOwnProperty.call(m, "combat"))
                w.uint32(296).int32(m.combat);
            if (m.serverId != null && Object.hasOwnProperty.call(m, "serverId"))
                w.uint32(304).int32(m.serverId);
            return w;
        };
        p_scene_role.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_scene_role();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.posX = r.int32();
                    break;
                case 4:
                    m.posY = r.int32();
                    break;
                case 5:
                    m.level = r.int32();
                    break;
                case 6:
                    m.sex = r.int32();
                    break;
                case 7:
                    m.teamId = r.int32();
                    break;
                case 8:
                    m.isLeader = r.int32();
                    break;
                case 9:
                    m.gangId = r.int64();
                    break;
                case 10:
                    m.gangName = r.string();
                    break;
                case 11:
                    m.gangPos = r.int32();
                    break;
                case 12:
                    m.titleId = r.int32();
                    break;
                case 13:
                    m.weaponId = r.int32();
                    break;
                case 14:
                    m.spouseName = r.string();
                    break;
                case 15:
                    m.pk = r.int32();
                    break;
                case 18:
                    m.moveSpeed = r.int32();
                    break;
                case 19:
                    m.hp = r.int64();
                    break;
                case 20:
                    m.hpMax = r.int64();
                    break;
                case 21:
                    m.modelId = r.int32();
                    break;
                case 22:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_battle_buff.decode(r, r.uint32()));
                    break;
                case 23:
                    m.mode = r.int32();
                    break;
                case 24:
                    m.horseType = r.int32();
                    break;
                case 25:
                    m.wingType = r.int32();
                    break;
                case 26:
                    m.talismanType = r.int32();
                    break;
                case 27:
                    m.weaponType = r.int32();
                    break;
                case 28:
                    m.cloakType = r.int32();
                    break;
                case 29:
                    m.activityLv = r.int32();
                    break;
                case 30:
                    m.dressUpClothesType = r.int32();
                    break;
                case 31:
                    m.dressUpWeaponType = r.int32();
                    break;
                case 32:
                    m.dressUpLightType = r.int32();
                    break;
                case 33:
                    m.horsePositionStatus = r.int32();
                    break;
                case 34:
                    m.escort = r.int32();
                    break;
                case 35:
                    m.stateId = r.int32();
                    break;
                case 36:
                    m.vipLevel = r.int32();
                    break;
                case 37:
                    m.combat = r.int32();
                    break;
                case 38:
                    m.serverId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("isLeader"))
                throw $util.ProtocolError("missing required 'isLeader'", { instance: m });
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("gangPos"))
                throw $util.ProtocolError("missing required 'gangPos'", { instance: m });
            if (!m.hasOwnProperty("titleId"))
                throw $util.ProtocolError("missing required 'titleId'", { instance: m });
            if (!m.hasOwnProperty("weaponId"))
                throw $util.ProtocolError("missing required 'weaponId'", { instance: m });
            if (!m.hasOwnProperty("spouseName"))
                throw $util.ProtocolError("missing required 'spouseName'", { instance: m });
            if (!m.hasOwnProperty("pk"))
                throw $util.ProtocolError("missing required 'pk'", { instance: m });
            if (!m.hasOwnProperty("moveSpeed"))
                throw $util.ProtocolError("missing required 'moveSpeed'", { instance: m });
            if (!m.hasOwnProperty("hp"))
                throw $util.ProtocolError("missing required 'hp'", { instance: m });
            if (!m.hasOwnProperty("hpMax"))
                throw $util.ProtocolError("missing required 'hpMax'", { instance: m });
            if (!m.hasOwnProperty("modelId"))
                throw $util.ProtocolError("missing required 'modelId'", { instance: m });
            if (!m.hasOwnProperty("mode"))
                throw $util.ProtocolError("missing required 'mode'", { instance: m });
            if (!m.hasOwnProperty("horseType"))
                throw $util.ProtocolError("missing required 'horseType'", { instance: m });
            if (!m.hasOwnProperty("wingType"))
                throw $util.ProtocolError("missing required 'wingType'", { instance: m });
            if (!m.hasOwnProperty("talismanType"))
                throw $util.ProtocolError("missing required 'talismanType'", { instance: m });
            if (!m.hasOwnProperty("weaponType"))
                throw $util.ProtocolError("missing required 'weaponType'", { instance: m });
            if (!m.hasOwnProperty("cloakType"))
                throw $util.ProtocolError("missing required 'cloakType'", { instance: m });
            if (!m.hasOwnProperty("activityLv"))
                throw $util.ProtocolError("missing required 'activityLv'", { instance: m });
            if (!m.hasOwnProperty("dressUpClothesType"))
                throw $util.ProtocolError("missing required 'dressUpClothesType'", { instance: m });
            if (!m.hasOwnProperty("dressUpWeaponType"))
                throw $util.ProtocolError("missing required 'dressUpWeaponType'", { instance: m });
            if (!m.hasOwnProperty("dressUpLightType"))
                throw $util.ProtocolError("missing required 'dressUpLightType'", { instance: m });
            if (!m.hasOwnProperty("horsePositionStatus"))
                throw $util.ProtocolError("missing required 'horsePositionStatus'", { instance: m });
            if (!m.hasOwnProperty("escort"))
                throw $util.ProtocolError("missing required 'escort'", { instance: m });
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            return m;
        };
        return p_scene_role;
    })();
    $root.p_scene_role_general = (function() {
        function p_scene_role_general(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_scene_role_general.prototype.name = "";
        p_scene_role_general.prototype.sex = 0;
        p_scene_role_general.prototype.wingType = 0;
        p_scene_role_general.prototype.talismanType = 0;
        p_scene_role_general.prototype.weaponType = 0;
        p_scene_role_general.prototype.cloakType = 0;
        p_scene_role_general.prototype.dressUpClothesType = 0;
        p_scene_role_general.prototype.dressUpWeaponType = 0;
        p_scene_role_general.prototype.dressUpLightType = 0;
        p_scene_role_general.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.sex);
            w.uint32(24).int32(m.wingType);
            w.uint32(32).int32(m.talismanType);
            w.uint32(40).int32(m.weaponType);
            w.uint32(48).int32(m.cloakType);
            w.uint32(56).int32(m.dressUpClothesType);
            w.uint32(64).int32(m.dressUpWeaponType);
            w.uint32(72).int32(m.dressUpLightType);
            return w;
        };
        p_scene_role_general.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_scene_role_general();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.sex = r.int32();
                    break;
                case 3:
                    m.wingType = r.int32();
                    break;
                case 4:
                    m.talismanType = r.int32();
                    break;
                case 5:
                    m.weaponType = r.int32();
                    break;
                case 6:
                    m.cloakType = r.int32();
                    break;
                case 7:
                    m.dressUpClothesType = r.int32();
                    break;
                case 8:
                    m.dressUpWeaponType = r.int32();
                    break;
                case 9:
                    m.dressUpLightType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("wingType"))
                throw $util.ProtocolError("missing required 'wingType'", { instance: m });
            if (!m.hasOwnProperty("talismanType"))
                throw $util.ProtocolError("missing required 'talismanType'", { instance: m });
            if (!m.hasOwnProperty("weaponType"))
                throw $util.ProtocolError("missing required 'weaponType'", { instance: m });
            if (!m.hasOwnProperty("cloakType"))
                throw $util.ProtocolError("missing required 'cloakType'", { instance: m });
            if (!m.hasOwnProperty("dressUpClothesType"))
                throw $util.ProtocolError("missing required 'dressUpClothesType'", { instance: m });
            if (!m.hasOwnProperty("dressUpWeaponType"))
                throw $util.ProtocolError("missing required 'dressUpWeaponType'", { instance: m });
            if (!m.hasOwnProperty("dressUpLightType"))
                throw $util.ProtocolError("missing required 'dressUpLightType'", { instance: m });
            return m;
        };
        return p_scene_role_general;
    })();
    $root.p_monster = (function() {
        function p_monster(p) {
            this.dropOwnerId = [];
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_monster.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_monster.prototype.type = 0;
        p_monster.prototype.typeId = 0;
        p_monster.prototype.posX = 0;
        p_monster.prototype.posY = 0;
        p_monster.prototype.moveSpeed = 0;
        p_monster.prototype.hp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_monster.prototype.hpMax = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_monster.prototype.owner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_monster.prototype.dropOwnerId = $util.emptyArray;
        p_monster.prototype.itemId = 0;
        p_monster.prototype.monsterLevel = 0;
        p_monster.prototype.bornX = 0;
        p_monster.prototype.bornY = 0;
        p_monster.prototype.buffList = $util.emptyArray;
        p_monster.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.type);
            w.uint32(24).int32(m.typeId);
            w.uint32(32).int32(m.posX);
            w.uint32(40).int32(m.posY);
            if (m.moveSpeed != null && Object.hasOwnProperty.call(m, "moveSpeed"))
                w.uint32(48).int32(m.moveSpeed);
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                w.uint32(56).int64(m.hp);
            if (m.hpMax != null && Object.hasOwnProperty.call(m, "hpMax"))
                w.uint32(64).int64(m.hpMax);
            if (m.owner != null && Object.hasOwnProperty.call(m, "owner"))
                w.uint32(72).int64(m.owner);
            if (m.dropOwnerId != null && m.dropOwnerId.length) {
                for (var i = 0; i < m.dropOwnerId.length; ++i)
                    w.uint32(88).int64(m.dropOwnerId[i]);
            }
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(96).int32(m.itemId);
            if (m.monsterLevel != null && Object.hasOwnProperty.call(m, "monsterLevel"))
                w.uint32(104).int32(m.monsterLevel);
            if (m.bornX != null && Object.hasOwnProperty.call(m, "bornX"))
                w.uint32(112).int32(m.bornX);
            if (m.bornY != null && Object.hasOwnProperty.call(m, "bornY"))
                w.uint32(120).int32(m.bornY);
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_battle_buff.encode(m.buffList[i], w.uint32(162).fork()).ldelim();
            }
            return w;
        };
        p_monster.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_monster();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.typeId = r.int32();
                    break;
                case 4:
                    m.posX = r.int32();
                    break;
                case 5:
                    m.posY = r.int32();
                    break;
                case 6:
                    m.moveSpeed = r.int32();
                    break;
                case 7:
                    m.hp = r.int64();
                    break;
                case 8:
                    m.hpMax = r.int64();
                    break;
                case 9:
                    m.owner = r.int64();
                    break;
                case 11:
                    if (!(m.dropOwnerId && m.dropOwnerId.length))
                        m.dropOwnerId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.dropOwnerId.push(r.int64());
                    } else
                        m.dropOwnerId.push(r.int64());
                    break;
                case 12:
                    m.itemId = r.int32();
                    break;
                case 13:
                    m.monsterLevel = r.int32();
                    break;
                case 14:
                    m.bornX = r.int32();
                    break;
                case 15:
                    m.bornY = r.int32();
                    break;
                case 20:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_battle_buff.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return p_monster;
    })();
    $root.c2s_query_scene_role_request = (function() {
        function c2s_query_scene_role_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_scene_role_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_query_scene_role_request.cmd = 769;
        c2s_query_scene_role_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_query_scene_role_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_scene_role_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_query_scene_role_request;
    })();
    $root.s2c_query_scene_role_reply = (function() {
        function s2c_query_scene_role_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_scene_role_reply.prototype.role = null;
        s2c_query_scene_role_reply.cmd = 770;
        s2c_query_scene_role_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_scene_role_general.encode(m.role, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_query_scene_role_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_scene_role_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.role = $root.p_scene_role_general.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("role"))
                throw $util.ProtocolError("missing required 'role'", { instance: m });
            return m;
        };
        return s2c_query_scene_role_reply;
    })();
    $root.c2s_enter_scene_request = (function() {
        function c2s_enter_scene_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_scene_request.prototype.sceneId = 0;
        c2s_enter_scene_request.prototype.posX = 0;
        c2s_enter_scene_request.prototype.posY = 0;
        c2s_enter_scene_request.prototype.jumpPointId = 0;
        c2s_enter_scene_request.cmd = 771;
        c2s_enter_scene_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.sceneId);
            w.uint32(16).int32(m.posX);
            w.uint32(24).int32(m.posY);
            if (m.jumpPointId != null && Object.hasOwnProperty.call(m, "jumpPointId"))
                w.uint32(32).int32(m.jumpPointId);
            return w;
        };
        c2s_enter_scene_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_scene_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.sceneId = r.int32();
                    break;
                case 2:
                    m.posX = r.int32();
                    break;
                case 3:
                    m.posY = r.int32();
                    break;
                case 4:
                    m.jumpPointId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("sceneId"))
                throw $util.ProtocolError("missing required 'sceneId'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return c2s_enter_scene_request;
    })();
    $root.s2c_enter_scene_notify = (function() {
        function s2c_enter_scene_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_enter_scene_notify.prototype.sceneId = 0;
        s2c_enter_scene_notify.prototype.posX = 0;
        s2c_enter_scene_notify.prototype.posY = 0;
        s2c_enter_scene_notify.cmd = 772;
        s2c_enter_scene_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.sceneId);
            w.uint32(16).int32(m.posX);
            w.uint32(24).int32(m.posY);
            return w;
        };
        s2c_enter_scene_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_enter_scene_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.sceneId = r.int32();
                    break;
                case 2:
                    m.posX = r.int32();
                    break;
                case 3:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("sceneId"))
                throw $util.ProtocolError("missing required 'sceneId'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return s2c_enter_scene_notify;
    })();
    $root.p_best_role = (function() {
        function p_best_role(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_best_role.prototype.sex = 0;
        p_best_role.prototype.role = null;
        p_best_role.prototype.serverId = 0;
        p_best_role.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.sex);
            $root.p_scene_role.encode(m.role, w.uint32(18).fork()).ldelim();
            w.uint32(24).int32(m.serverId);
            return w;
        };
        p_best_role.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_best_role();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.sex = r.int32();
                    break;
                case 2:
                    m.role = $root.p_scene_role.decode(r, r.uint32());
                    break;
                case 3:
                    m.serverId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("role"))
                throw $util.ProtocolError("missing required 'role'", { instance: m });
            if (!m.hasOwnProperty("serverId"))
                throw $util.ProtocolError("missing required 'serverId'", { instance: m });
            return m;
        };
        return p_best_role;
    })();
    $root.s2c_init_scene_notify = (function() {
        function s2c_init_scene_notify(p) {
            this.monsterList = [];
            this.bestCombatList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_init_scene_notify.prototype.sceneId = 0;
        s2c_init_scene_notify.prototype.monsterList = $util.emptyArray;
        s2c_init_scene_notify.prototype.data = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_init_scene_notify.prototype.text = "";
        s2c_init_scene_notify.prototype.currentServerId = 0;
        s2c_init_scene_notify.prototype.bestCombatList = $util.emptyArray;
        s2c_init_scene_notify.cmd = 773;
        s2c_init_scene_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.sceneId);
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                w.uint32(16).int64(m.data);
            if (m.text != null && Object.hasOwnProperty.call(m, "text"))
                w.uint32(26).string(m.text);
            if (m.monsterList != null && m.monsterList.length) {
                for (var i = 0; i < m.monsterList.length; ++i)
                    $root.p_monster.encode(m.monsterList[i], w.uint32(34).fork()).ldelim();
            }
            if (m.currentServerId != null && Object.hasOwnProperty.call(m, "currentServerId"))
                w.uint32(40).int32(m.currentServerId);
            if (m.bestCombatList != null && m.bestCombatList.length) {
                for (var i = 0; i < m.bestCombatList.length; ++i)
                    $root.p_best_role.encode(m.bestCombatList[i], w.uint32(50).fork()).ldelim();
            }
            return w;
        };
        s2c_init_scene_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_init_scene_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.sceneId = r.int32();
                    break;
                case 4:
                    if (!(m.monsterList && m.monsterList.length))
                        m.monsterList = [];
                    m.monsterList.push($root.p_monster.decode(r, r.uint32()));
                    break;
                case 2:
                    m.data = r.int64();
                    break;
                case 3:
                    m.text = r.string();
                    break;
                case 5:
                    m.currentServerId = r.int32();
                    break;
                case 6:
                    if (!(m.bestCombatList && m.bestCombatList.length))
                        m.bestCombatList = [];
                    m.bestCombatList.push($root.p_best_role.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("sceneId"))
                throw $util.ProtocolError("missing required 'sceneId'", { instance: m });
            return m;
        };
        return s2c_init_scene_notify;
    })();
    $root.s2c_role_enter_aoi_notify = (function() {
        function s2c_role_enter_aoi_notify(p) {
            this.roleList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_enter_aoi_notify.prototype.roleList = $util.emptyArray;
        s2c_role_enter_aoi_notify.cmd = 774;
        s2c_role_enter_aoi_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleList != null && m.roleList.length) {
                for (var i = 0; i < m.roleList.length; ++i)
                    $root.p_scene_role.encode(m.roleList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_enter_aoi_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_enter_aoi_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleList && m.roleList.length))
                        m.roleList = [];
                    m.roleList.push($root.p_scene_role.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_enter_aoi_notify;
    })();
    $root.s2c_role_leave_aoi_notify = (function() {
        function s2c_role_leave_aoi_notify(p) {
            this.roleIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_leave_aoi_notify.prototype.roleIdList = $util.emptyArray;
        s2c_role_leave_aoi_notify.cmd = 775;
        s2c_role_leave_aoi_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleIdList != null && m.roleIdList.length) {
                for (var i = 0; i < m.roleIdList.length; ++i)
                    w.uint32(8).int64(m.roleIdList[i]);
            }
            return w;
        };
        s2c_role_leave_aoi_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_leave_aoi_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleIdList && m.roleIdList.length))
                        m.roleIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.roleIdList.push(r.int64());
                    } else
                        m.roleIdList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_leave_aoi_notify;
    })();
    $root.s2c_role_in_scene_changed_notify = (function() {
        function s2c_role_in_scene_changed_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_in_scene_changed_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_in_scene_changed_notify.prototype.list = $util.emptyArray;
        s2c_role_in_scene_changed_notify.cmd = 776;
        s2c_role_in_scene_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_kv_pair.encode(m.list[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_role_in_scene_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_in_scene_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return s2c_role_in_scene_changed_notify;
    })();
    $root.c2s_role_move_request = (function() {
        function c2s_role_move_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_move_request.prototype.posX = 0;
        c2s_role_move_request.prototype.posY = 0;
        c2s_role_move_request.cmd = 777;
        c2s_role_move_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.posX);
            w.uint32(16).int32(m.posY);
            return w;
        };
        c2s_role_move_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_move_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.posX = r.int32();
                    break;
                case 2:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return c2s_role_move_request;
    })();
    $root.s2c_role_moved_notify = (function() {
        function s2c_role_moved_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_moved_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_moved_notify.prototype.posX = 0;
        s2c_role_moved_notify.prototype.posY = 0;
        s2c_role_moved_notify.cmd = 778;
        s2c_role_moved_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.posX);
            w.uint32(24).int32(m.posY);
            return w;
        };
        s2c_role_moved_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_moved_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.posX = r.int32();
                    break;
                case 3:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return s2c_role_moved_notify;
    })();
    $root.s2c_add_monster_notify = (function() {
        function s2c_add_monster_notify(p) {
            this.monsterList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_monster_notify.prototype.monsterList = $util.emptyArray;
        s2c_add_monster_notify.cmd = 779;
        s2c_add_monster_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.monsterList != null && m.monsterList.length) {
                for (var i = 0; i < m.monsterList.length; ++i)
                    $root.p_monster.encode(m.monsterList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_add_monster_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_monster_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.monsterList && m.monsterList.length))
                        m.monsterList = [];
                    m.monsterList.push($root.p_monster.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_add_monster_notify;
    })();
    $root.s2c_remove_monster_notify = (function() {
        function s2c_remove_monster_notify(p) {
            this.idList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_remove_monster_notify.prototype.idList = $util.emptyArray;
        s2c_remove_monster_notify.cmd = 780;
        s2c_remove_monster_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.idList != null && m.idList.length) {
                for (var i = 0; i < m.idList.length; ++i)
                    w.uint32(8).int64(m.idList[i]);
            }
            return w;
        };
        s2c_remove_monster_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_remove_monster_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.idList && m.idList.length))
                        m.idList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.idList.push(r.int64());
                    } else
                        m.idList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_remove_monster_notify;
    })();
    $root.s2c_monster_changed_notify = (function() {
        function s2c_monster_changed_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_monster_changed_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_monster_changed_notify.prototype.list = $util.emptyArray;
        s2c_monster_changed_notify.cmd = 781;
        s2c_monster_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_kv_pair.encode(m.list[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_monster_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_monster_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return s2c_monster_changed_notify;
    })();
    $root.c2s_do_gather_request = (function() {
        function c2s_do_gather_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_do_gather_request.prototype.gatherId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_do_gather_request.prototype.typeId = 0;
        c2s_do_gather_request.cmd = 782;
        c2s_do_gather_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gatherId);
            w.uint32(16).int32(m.typeId);
            return w;
        };
        c2s_do_gather_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_do_gather_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gatherId = r.int64();
                    break;
                case 2:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gatherId"))
                throw $util.ProtocolError("missing required 'gatherId'", { instance: m });
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_do_gather_request;
    })();
    $root.s2c_do_gather_notify = (function() {
        function s2c_do_gather_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_do_gather_notify.prototype.gatherId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_do_gather_notify.cmd = 783;
        s2c_do_gather_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gatherId);
            return w;
        };
        s2c_do_gather_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_do_gather_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gatherId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gatherId"))
                throw $util.ProtocolError("missing required 'gatherId'", { instance: m });
            return m;
        };
        return s2c_do_gather_notify;
    })();
    $root.c2s_pick_drop_request = (function() {
        function c2s_pick_drop_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pick_drop_request.prototype.dropId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_pick_drop_request.cmd = 784;
        c2s_pick_drop_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.dropId);
            return w;
        };
        c2s_pick_drop_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pick_drop_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.dropId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("dropId"))
                throw $util.ProtocolError("missing required 'dropId'", { instance: m });
            return m;
        };
        return c2s_pick_drop_request;
    })();
    $root.s2c_monster_moved_notify = (function() {
        function s2c_monster_moved_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_monster_moved_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_monster_moved_notify.prototype.posX = 0;
        s2c_monster_moved_notify.prototype.posY = 0;
        s2c_monster_moved_notify.cmd = 785;
        s2c_monster_moved_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.posX);
            w.uint32(24).int32(m.posY);
            return w;
        };
        s2c_monster_moved_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_monster_moved_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.posX = r.int32();
                    break;
                case 3:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return s2c_monster_moved_notify;
    })();
    $root.c2s_pet_move_request = (function() {
        function c2s_pet_move_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pet_move_request.prototype.posX = 0;
        c2s_pet_move_request.prototype.posY = 0;
        c2s_pet_move_request.cmd = 786;
        c2s_pet_move_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.posX);
            w.uint32(16).int32(m.posY);
            return w;
        };
        c2s_pet_move_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pet_move_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.posX = r.int32();
                    break;
                case 2:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return c2s_pet_move_request;
    })();
    $root.c2s_role_fly_request = (function() {
        function c2s_role_fly_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_fly_request.prototype.posX = 0;
        c2s_role_fly_request.prototype.posY = 0;
        c2s_role_fly_request.cmd = 787;
        c2s_role_fly_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.posX);
            w.uint32(16).int32(m.posY);
            return w;
        };
        c2s_role_fly_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_fly_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.posX = r.int32();
                    break;
                case 2:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return c2s_role_fly_request;
    })();
    $root.s2c_role_fly_notify = (function() {
        function s2c_role_fly_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_fly_notify.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_fly_notify.prototype.posX = 0;
        s2c_role_fly_notify.prototype.posY = 0;
        s2c_role_fly_notify.cmd = 788;
        s2c_role_fly_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(16).int32(m.posX);
            w.uint32(24).int32(m.posY);
            return w;
        };
        s2c_role_fly_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_fly_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.posX = r.int32();
                    break;
                case 3:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return s2c_role_fly_notify;
    })();
    $root.s2c_monster_talk_notify = (function() {
        function s2c_monster_talk_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_monster_talk_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_monster_talk_notify.prototype.talkId = 0;
        s2c_monster_talk_notify.cmd = 789;
        s2c_monster_talk_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.talkId);
            return w;
        };
        s2c_monster_talk_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_monster_talk_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.talkId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("talkId"))
                throw $util.ProtocolError("missing required 'talkId'", { instance: m });
            return m;
        };
        return s2c_monster_talk_notify;
    })();
    $root.c2s_query_zone_server_request = (function() {
        function c2s_query_zone_server_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_zone_server_request.cmd = 790;
        c2s_query_zone_server_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_zone_server_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_zone_server_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_zone_server_request;
    })();
    $root.s2c_zone_server_reply = (function() {
        function s2c_zone_server_reply(p) {
            this.serverIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_zone_server_reply.prototype.currentServerId = 0;
        s2c_zone_server_reply.prototype.zoneId = 0;
        s2c_zone_server_reply.prototype.serverIdList = $util.emptyArray;
        s2c_zone_server_reply.cmd = 791;
        s2c_zone_server_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.currentServerId);
            w.uint32(16).int32(m.zoneId);
            if (m.serverIdList != null && m.serverIdList.length) {
                for (var i = 0; i < m.serverIdList.length; ++i)
                    w.uint32(24).int32(m.serverIdList[i]);
            }
            return w;
        };
        s2c_zone_server_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_zone_server_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.currentServerId = r.int32();
                    break;
                case 2:
                    m.zoneId = r.int32();
                    break;
                case 3:
                    if (!(m.serverIdList && m.serverIdList.length))
                        m.serverIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.serverIdList.push(r.int32());
                    } else
                        m.serverIdList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("currentServerId"))
                throw $util.ProtocolError("missing required 'currentServerId'", { instance: m });
            if (!m.hasOwnProperty("zoneId"))
                throw $util.ProtocolError("missing required 'zoneId'", { instance: m });
            return m;
        };
        return s2c_zone_server_reply;
    })();
    $root.c2s_enter_zone_inter_city_request = (function() {
        function c2s_enter_zone_inter_city_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_zone_inter_city_request.cmd = 792;
        c2s_enter_zone_inter_city_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_zone_inter_city_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_zone_inter_city_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_zone_inter_city_request;
    })();
    $root.c2s_enter_zone_server_city_request = (function() {
        function c2s_enter_zone_server_city_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_zone_server_city_request.prototype.targetServerId = 0;
        c2s_enter_zone_server_city_request.cmd = 793;
        c2s_enter_zone_server_city_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.targetServerId);
            return w;
        };
        c2s_enter_zone_server_city_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_zone_server_city_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetServerId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetServerId"))
                throw $util.ProtocolError("missing required 'targetServerId'", { instance: m });
            return m;
        };
        return c2s_enter_zone_server_city_request;
    })();
    $root.c2s_begin_do_gather_request = (function() {
        function c2s_begin_do_gather_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_begin_do_gather_request.prototype.gatherId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_begin_do_gather_request.prototype.typeId = 0;
        c2s_begin_do_gather_request.cmd = 794;
        c2s_begin_do_gather_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gatherId);
            w.uint32(16).int32(m.typeId);
            return w;
        };
        c2s_begin_do_gather_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_begin_do_gather_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gatherId = r.int64();
                    break;
                case 2:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gatherId"))
                throw $util.ProtocolError("missing required 'gatherId'", { instance: m });
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_begin_do_gather_request;
    })();
    $root.s2c_begin_alloc_zone_notify = (function() {
        function s2c_begin_alloc_zone_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_begin_alloc_zone_notify.cmd = 795;
        s2c_begin_alloc_zone_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_begin_alloc_zone_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_begin_alloc_zone_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_begin_alloc_zone_notify;
    })();
    $root.s2c_monster_owner_change_notify = (function() {
        function s2c_monster_owner_change_notify(p) {
            this.dropOwnerId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_monster_owner_change_notify.prototype.monsterId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_monster_owner_change_notify.prototype.dropOwnerId = $util.emptyArray;
        s2c_monster_owner_change_notify.cmd = 796;
        s2c_monster_owner_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.monsterId);
            if (m.dropOwnerId != null && m.dropOwnerId.length) {
                for (var i = 0; i < m.dropOwnerId.length; ++i)
                    w.uint32(16).int64(m.dropOwnerId[i]);
            }
            return w;
        };
        s2c_monster_owner_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_monster_owner_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.monsterId = r.int64();
                    break;
                case 2:
                    if (!(m.dropOwnerId && m.dropOwnerId.length))
                        m.dropOwnerId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.dropOwnerId.push(r.int64());
                    } else
                        m.dropOwnerId.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            return m;
        };
        return s2c_monster_owner_change_notify;
    })();
    $root.c2s_best_combat_request = (function() {
        function c2s_best_combat_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_best_combat_request.cmd = 797;
        c2s_best_combat_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_best_combat_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_best_combat_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_best_combat_request;
    })();
    $root.s2c_best_combat_reply = (function() {
        function s2c_best_combat_reply(p) {
            this.bestCombatList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_best_combat_reply.prototype.bestCombatList = $util.emptyArray;
        s2c_best_combat_reply.cmd = 798;
        s2c_best_combat_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bestCombatList != null && m.bestCombatList.length) {
                for (var i = 0; i < m.bestCombatList.length; ++i)
                    $root.p_best_role.encode(m.bestCombatList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_best_combat_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_best_combat_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.bestCombatList && m.bestCombatList.length))
                        m.bestCombatList = [];
                    m.bestCombatList.push($root.p_best_role.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_best_combat_reply;
    })();
    $root.p_battle_actor = (function() {
        function p_battle_actor(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_battle_actor.prototype.actorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_actor.prototype.actorType = 0;
        p_battle_actor.prototype.x = 0;
        p_battle_actor.prototype.y = 0;
        p_battle_actor.prototype.hp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_actor.prototype.effectHp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_actor.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.actorId);
            w.uint32(16).int32(m.actorType);
            if (m.x != null && Object.hasOwnProperty.call(m, "x"))
                w.uint32(24).int32(m.x);
            if (m.y != null && Object.hasOwnProperty.call(m, "y"))
                w.uint32(32).int32(m.y);
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                w.uint32(80).int64(m.hp);
            if (m.effectHp != null && Object.hasOwnProperty.call(m, "effectHp"))
                w.uint32(88).int64(m.effectHp);
            return w;
        };
        p_battle_actor.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_battle_actor();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.actorId = r.int64();
                    break;
                case 2:
                    m.actorType = r.int32();
                    break;
                case 3:
                    m.x = r.int32();
                    break;
                case 4:
                    m.y = r.int32();
                    break;
                case 10:
                    m.hp = r.int64();
                    break;
                case 11:
                    m.effectHp = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("actorId"))
                throw $util.ProtocolError("missing required 'actorId'", { instance: m });
            if (!m.hasOwnProperty("actorType"))
                throw $util.ProtocolError("missing required 'actorType'", { instance: m });
            return m;
        };
        return p_battle_actor;
    })();
    $root.p_battle_target = (function() {
        function p_battle_target(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_battle_target.prototype.targetId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_target.prototype.targetType = 0;
        p_battle_target.prototype.x = 0;
        p_battle_target.prototype.y = 0;
        p_battle_target.prototype.damageType = 0;
        p_battle_target.prototype.hp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_target.prototype.effectHp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_target.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.targetId);
            w.uint32(16).int32(m.targetType);
            if (m.x != null && Object.hasOwnProperty.call(m, "x"))
                w.uint32(24).int32(m.x);
            if (m.y != null && Object.hasOwnProperty.call(m, "y"))
                w.uint32(32).int32(m.y);
            if (m.damageType != null && Object.hasOwnProperty.call(m, "damageType"))
                w.uint32(40).int32(m.damageType);
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                w.uint32(80).int64(m.hp);
            if (m.effectHp != null && Object.hasOwnProperty.call(m, "effectHp"))
                w.uint32(88).int64(m.effectHp);
            return w;
        };
        p_battle_target.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_battle_target();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetId = r.int64();
                    break;
                case 2:
                    m.targetType = r.int32();
                    break;
                case 3:
                    m.x = r.int32();
                    break;
                case 4:
                    m.y = r.int32();
                    break;
                case 5:
                    m.damageType = r.int32();
                    break;
                case 10:
                    m.hp = r.int64();
                    break;
                case 11:
                    m.effectHp = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            if (!m.hasOwnProperty("targetType"))
                throw $util.ProtocolError("missing required 'targetType'", { instance: m });
            return m;
        };
        return p_battle_target;
    })();
    $root.c2s_use_skill_request = (function() {
        function c2s_use_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_use_skill_request.prototype.skillId = 0;
        c2s_use_skill_request.prototype.actorType = 0;
        c2s_use_skill_request.prototype.targetType = 0;
        c2s_use_skill_request.prototype.targetId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_use_skill_request.prototype.x = 0;
        c2s_use_skill_request.prototype.y = 0;
        c2s_use_skill_request.cmd = 4353;
        c2s_use_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillId);
            w.uint32(16).int32(m.actorType);
            w.uint32(24).int32(m.targetType);
            w.uint32(32).int64(m.targetId);
            w.uint32(40).int32(m.x);
            w.uint32(48).int32(m.y);
            return w;
        };
        c2s_use_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_use_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                case 2:
                    m.actorType = r.int32();
                    break;
                case 3:
                    m.targetType = r.int32();
                    break;
                case 4:
                    m.targetId = r.int64();
                    break;
                case 5:
                    m.x = r.int32();
                    break;
                case 6:
                    m.y = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            if (!m.hasOwnProperty("actorType"))
                throw $util.ProtocolError("missing required 'actorType'", { instance: m });
            if (!m.hasOwnProperty("targetType"))
                throw $util.ProtocolError("missing required 'targetType'", { instance: m });
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            if (!m.hasOwnProperty("x"))
                throw $util.ProtocolError("missing required 'x'", { instance: m });
            if (!m.hasOwnProperty("y"))
                throw $util.ProtocolError("missing required 'y'", { instance: m });
            return m;
        };
        return c2s_use_skill_request;
    })();
    $root.s2c_skill_result_notify = (function() {
        function s2c_skill_result_notify(p) {
            this.targets = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_skill_result_notify.prototype.skillId = 0;
        s2c_skill_result_notify.prototype.actor = null;
        s2c_skill_result_notify.prototype.targets = $util.emptyArray;
        s2c_skill_result_notify.prototype.x = 0;
        s2c_skill_result_notify.prototype.y = 0;
        s2c_skill_result_notify.cmd = 4354;
        s2c_skill_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillId);
            $root.p_battle_actor.encode(m.actor, w.uint32(18).fork()).ldelim();
            if (m.targets != null && m.targets.length) {
                for (var i = 0; i < m.targets.length; ++i)
                    $root.p_battle_target.encode(m.targets[i], w.uint32(26).fork()).ldelim();
            }
            w.uint32(32).int32(m.x);
            w.uint32(40).int32(m.y);
            return w;
        };
        s2c_skill_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_skill_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                case 2:
                    m.actor = $root.p_battle_actor.decode(r, r.uint32());
                    break;
                case 3:
                    if (!(m.targets && m.targets.length))
                        m.targets = [];
                    m.targets.push($root.p_battle_target.decode(r, r.uint32()));
                    break;
                case 4:
                    m.x = r.int32();
                    break;
                case 5:
                    m.y = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            if (!m.hasOwnProperty("actor"))
                throw $util.ProtocolError("missing required 'actor'", { instance: m });
            if (!m.hasOwnProperty("x"))
                throw $util.ProtocolError("missing required 'x'", { instance: m });
            if (!m.hasOwnProperty("y"))
                throw $util.ProtocolError("missing required 'y'", { instance: m });
            return m;
        };
        return s2c_skill_result_notify;
    })();
    $root.p_battle_buff = (function() {
        function p_battle_buff(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_battle_buff.prototype.id = 0;
        p_battle_buff.prototype.typeId = 0;
        p_battle_buff.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_buff.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_buff.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.typeId);
            w.uint32(24).int64(m.endTime);
            w.uint32(32).int64(m.value);
            return w;
        };
        p_battle_buff.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_battle_buff();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.typeId = r.int32();
                    break;
                case 3:
                    m.endTime = r.int64();
                    break;
                case 4:
                    m.value = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            return m;
        };
        return p_battle_buff;
    })();
    $root.s2c_add_battle_buff_notify = (function() {
        function s2c_add_battle_buff_notify(p) {
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_battle_buff_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_add_battle_buff_notify.prototype.type = 0;
        s2c_add_battle_buff_notify.prototype.buffList = $util.emptyArray;
        s2c_add_battle_buff_notify.cmd = 4355;
        s2c_add_battle_buff_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.type);
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_battle_buff.encode(m.buffList[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        s2c_add_battle_buff_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_battle_buff_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 4:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_battle_buff.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_add_battle_buff_notify;
    })();
    $root.s2c_remove_battle_buff_notify = (function() {
        function s2c_remove_battle_buff_notify(p) {
            this.buffIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_remove_battle_buff_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_remove_battle_buff_notify.prototype.type = 0;
        s2c_remove_battle_buff_notify.prototype.buffIdList = $util.emptyArray;
        s2c_remove_battle_buff_notify.cmd = 4356;
        s2c_remove_battle_buff_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.type);
            if (m.buffIdList != null && m.buffIdList.length) {
                for (var i = 0; i < m.buffIdList.length; ++i)
                    w.uint32(32).int32(m.buffIdList[i]);
            }
            return w;
        };
        s2c_remove_battle_buff_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_remove_battle_buff_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 4:
                    if (!(m.buffIdList && m.buffIdList.length))
                        m.buffIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.buffIdList.push(r.int32());
                    } else
                        m.buffIdList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_remove_battle_buff_notify;
    })();
    $root.s2c_change_battle_buff_notify = (function() {
        function s2c_change_battle_buff_notify(p) {
            this.buffList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_change_battle_buff_notify.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_change_battle_buff_notify.prototype.type = 0;
        s2c_change_battle_buff_notify.prototype.buffList = $util.emptyArray;
        s2c_change_battle_buff_notify.cmd = 4357;
        s2c_change_battle_buff_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.type);
            if (m.buffList != null && m.buffList.length) {
                for (var i = 0; i < m.buffList.length; ++i)
                    $root.p_battle_buff.encode(m.buffList[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        s2c_change_battle_buff_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_change_battle_buff_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 4:
                    if (!(m.buffList && m.buffList.length))
                        m.buffList = [];
                    m.buffList.push($root.p_battle_buff.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_change_battle_buff_notify;
    })();
    $root.s2c_skill_error_notify = (function() {
        function s2c_skill_error_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_skill_error_notify.prototype.actorType = 0;
        s2c_skill_error_notify.prototype.actorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_skill_error_notify.prototype.skillId = 0;
        s2c_skill_error_notify.prototype.errorCode = 0;
        s2c_skill_error_notify.cmd = 4358;
        s2c_skill_error_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.actorType);
            w.uint32(16).int64(m.actorId);
            w.uint32(24).int32(m.skillId);
            w.uint32(32).int32(m.errorCode);
            return w;
        };
        s2c_skill_error_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_skill_error_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.actorType = r.int32();
                    break;
                case 2:
                    m.actorId = r.int64();
                    break;
                case 3:
                    m.skillId = r.int32();
                    break;
                case 4:
                    m.errorCode = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("actorType"))
                throw $util.ProtocolError("missing required 'actorType'", { instance: m });
            if (!m.hasOwnProperty("actorId"))
                throw $util.ProtocolError("missing required 'actorId'", { instance: m });
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            if (!m.hasOwnProperty("errorCode"))
                throw $util.ProtocolError("missing required 'errorCode'", { instance: m });
            return m;
        };
        return s2c_skill_error_notify;
    })();
    $root.p_battle_rank_info = (function() {
        function p_battle_rank_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_battle_rank_info.prototype.rank = 0;
        p_battle_rank_info.prototype.roleId = 0;
        p_battle_rank_info.prototype.name = "";
        p_battle_rank_info.prototype.damage = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_battle_rank_info.prototype.serverId = 0;
        p_battle_rank_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rank != null && Object.hasOwnProperty.call(m, "rank"))
                w.uint32(8).int32(m.rank);
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(16).int32(m.roleId);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(26).string(m.name);
            if (m.damage != null && Object.hasOwnProperty.call(m, "damage"))
                w.uint32(32).int64(m.damage);
            if (m.serverId != null && Object.hasOwnProperty.call(m, "serverId"))
                w.uint32(40).int32(m.serverId);
            return w;
        };
        p_battle_rank_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_battle_rank_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.roleId = r.int32();
                    break;
                case 3:
                    m.name = r.string();
                    break;
                case 4:
                    m.damage = r.int64();
                    break;
                case 5:
                    m.serverId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_battle_rank_info;
    })();
    $root.c2s_battle_rank_list_query_request = (function() {
        function c2s_battle_rank_list_query_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_battle_rank_list_query_request.prototype.monsterId = 0;
        c2s_battle_rank_list_query_request.cmd = 4359;
        c2s_battle_rank_list_query_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.monsterId != null && Object.hasOwnProperty.call(m, "monsterId"))
                w.uint32(8).int32(m.monsterId);
            return w;
        };
        c2s_battle_rank_list_query_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_battle_rank_list_query_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.monsterId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_battle_rank_list_query_request;
    })();
    $root.s2c_battle_rank_list_query_respond = (function() {
        function s2c_battle_rank_list_query_respond(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_battle_rank_list_query_respond.prototype.isOpen = 0;
        s2c_battle_rank_list_query_respond.prototype.rankList = $util.emptyArray;
        s2c_battle_rank_list_query_respond.cmd = 4360;
        s2c_battle_rank_list_query_respond.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.isOpen != null && Object.hasOwnProperty.call(m, "isOpen"))
                w.uint32(8).int32(m.isOpen);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_battle_rank_info.encode(m.rankList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_battle_rank_list_query_respond.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_battle_rank_list_query_respond();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isOpen = r.int32();
                    break;
                case 2:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_battle_rank_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_battle_rank_list_query_respond;
    })();
    $root.p_pet = (function() {
        function p_pet(p) {
            this.skills = [];
            this.changePetList = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_pet.prototype.level = 0;
        p_pet.prototype.exp = 0;
        p_pet.prototype.starranklevel = 0;
        p_pet.prototype.starrankexp = 0;
        p_pet.prototype.skills = $util.emptyArray;
        p_pet.prototype.petImageInScene = 0;
        p_pet.prototype.changePetList = $util.emptyArray;
        p_pet.prototype.combat = 0;
        p_pet.prototype.effects = $util.emptyArray;
        p_pet.prototype.isActive = 0;
        p_pet.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.exp);
            w.uint32(24).int32(m.starranklevel);
            w.uint32(32).int32(m.starrankexp);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(40).int32(m.skills[i]);
            }
            w.uint32(48).int32(m.petImageInScene);
            if (m.changePetList != null && m.changePetList.length) {
                for (var i = 0; i < m.changePetList.length; ++i)
                    $root.p_change_pet.encode(m.changePetList[i], w.uint32(58).fork()).ldelim();
            }
            w.uint32(64).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_pet_attr.encode(m.effects[i], w.uint32(74).fork()).ldelim();
            }
            if (m.isActive != null && Object.hasOwnProperty.call(m, "isActive"))
                w.uint32(80).int32(m.isActive);
            return w;
        };
        p_pet.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_pet();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                case 3:
                    m.starranklevel = r.int32();
                    break;
                case 4:
                    m.starrankexp = r.int32();
                    break;
                case 5:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 6:
                    m.petImageInScene = r.int32();
                    break;
                case 7:
                    if (!(m.changePetList && m.changePetList.length))
                        m.changePetList = [];
                    m.changePetList.push($root.p_change_pet.decode(r, r.uint32()));
                    break;
                case 8:
                    m.combat = r.int32();
                    break;
                case 9:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_pet_attr.decode(r, r.uint32()));
                    break;
                case 10:
                    m.isActive = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("starranklevel"))
                throw $util.ProtocolError("missing required 'starranklevel'", { instance: m });
            if (!m.hasOwnProperty("starrankexp"))
                throw $util.ProtocolError("missing required 'starrankexp'", { instance: m });
            if (!m.hasOwnProperty("petImageInScene"))
                throw $util.ProtocolError("missing required 'petImageInScene'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_pet;
    })();
    $root.p_pet_attr = (function() {
        function p_pet_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_pet_attr.prototype.name = "";
        p_pet_attr.prototype.val = 0;
        p_pet_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_pet_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_pet_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_pet_attr;
    })();
    $root.p_change_pet = (function() {
        function p_change_pet(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_pet.prototype.typeId = 0;
        p_change_pet.prototype.rank = 0;
        p_change_pet.prototype.rankexp = 0;
        p_change_pet.prototype.combat = 0;
        p_change_pet.prototype.effects = $util.emptyArray;
        p_change_pet.prototype.validTime = 0;
        p_change_pet.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.rankexp);
            w.uint32(32).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_pet_attr.encode(m.effects[i], w.uint32(42).fork()).ldelim();
            }
            if (m.validTime != null && Object.hasOwnProperty.call(m, "validTime"))
                w.uint32(48).int32(m.validTime);
            return w;
        };
        p_change_pet.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_pet();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.rankexp = r.int32();
                    break;
                case 4:
                    m.combat = r.int32();
                    break;
                case 5:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_pet_attr.decode(r, r.uint32()));
                    break;
                case 6:
                    m.validTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("rankexp"))
                throw $util.ProtocolError("missing required 'rankexp'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_change_pet;
    })();
    $root.c2s_pet_info_request = (function() {
        function c2s_pet_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pet_info_request.cmd = 1025;
        c2s_pet_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_pet_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pet_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_pet_info_request;
    })();
    $root.s2c_pet_info_reply = (function() {
        function s2c_pet_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_pet_info_reply.prototype.pet = null;
        s2c_pet_info_reply.cmd = 1026;
        s2c_pet_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_pet.encode(m.pet, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_pet_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_pet_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pet = $root.p_pet.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pet"))
                throw $util.ProtocolError("missing required 'pet'", { instance: m });
            return m;
        };
        return s2c_pet_info_reply;
    })();
    $root.s2c_pet_info_change_notify = (function() {
        function s2c_pet_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_pet_info_change_notify.prototype.pet = null;
        s2c_pet_info_change_notify.cmd = 1027;
        s2c_pet_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_pet.encode(m.pet, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_pet_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_pet_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pet = $root.p_pet.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pet"))
                throw $util.ProtocolError("missing required 'pet'", { instance: m });
            return m;
        };
        return s2c_pet_info_change_notify;
    })();
    $root.c2s_pet_increase_starranklevel_request = (function() {
        function c2s_pet_increase_starranklevel_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pet_increase_starranklevel_request.prototype.itemId = 0;
        c2s_pet_increase_starranklevel_request.prototype.oneKey = 0;
        c2s_pet_increase_starranklevel_request.cmd = 1028;
        c2s_pet_increase_starranklevel_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.oneKey);
            return w;
        };
        c2s_pet_increase_starranklevel_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pet_increase_starranklevel_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_pet_increase_starranklevel_request;
    })();
    $root.c2s_change_pet_activate_request = (function() {
        function c2s_change_pet_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_pet_activate_request.prototype.typeId = 0;
        c2s_change_pet_activate_request.cmd = 1029;
        c2s_change_pet_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_pet_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_pet_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_pet_activate_request;
    })();
    $root.c2s_change_pet_increase_rank_request = (function() {
        function c2s_change_pet_increase_rank_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_pet_increase_rank_request.prototype.typeId = 0;
        c2s_change_pet_increase_rank_request.prototype.itemId = 0;
        c2s_change_pet_increase_rank_request.prototype.oneKey = 0;
        c2s_change_pet_increase_rank_request.cmd = 1030;
        c2s_change_pet_increase_rank_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.oneKey);
            return w;
        };
        c2s_change_pet_increase_rank_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_pet_increase_rank_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_change_pet_increase_rank_request;
    })();
    $root.c2s_pet_image_in_scene = (function() {
        function c2s_pet_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pet_image_in_scene.prototype.typeId = 0;
        c2s_pet_image_in_scene.cmd = 1031;
        c2s_pet_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_pet_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pet_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_pet_image_in_scene;
    })();
    $root.c2s_pet_active_request = (function() {
        function c2s_pet_active_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pet_active_request.cmd = 1032;
        c2s_pet_active_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_pet_active_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pet_active_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_pet_active_request;
    })();
    $root.c2s_active_pet_skill_request = (function() {
        function c2s_active_pet_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_pet_skill_request.prototype.skillid = 0;
        c2s_active_pet_skill_request.cmd = 1033;
        c2s_active_pet_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        c2s_active_pet_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_pet_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_pet_skill_request;
    })();
    $root.s2c_active_pet_skill_reply = (function() {
        function s2c_active_pet_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_pet_skill_reply.prototype.skillid = 0;
        s2c_active_pet_skill_reply.cmd = 1034;
        s2c_active_pet_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        s2c_active_pet_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_pet_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_pet_skill_reply;
    })();
    $root.c2s_show_bag_request = (function() {
        function c2s_show_bag_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_show_bag_request.prototype.bagType = 0;
        c2s_show_bag_request.cmd = 1281;
        c2s_show_bag_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.bagType);
            return w;
        };
        c2s_show_bag_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_show_bag_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bagType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("bagType"))
                throw $util.ProtocolError("missing required 'bagType'", { instance: m });
            return m;
        };
        return c2s_show_bag_request;
    })();
    $root.s2c_show_bag_reply = (function() {
        function s2c_show_bag_reply(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_show_bag_reply.prototype.bagType = 0;
        s2c_show_bag_reply.prototype.extraCellNum = 0;
        s2c_show_bag_reply.prototype.items = $util.emptyArray;
        s2c_show_bag_reply.cmd = 1282;
        s2c_show_bag_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.bagType);
            w.uint32(16).int32(m.extraCellNum);
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_item.encode(m.items[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_show_bag_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_show_bag_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bagType = r.int32();
                    break;
                case 2:
                    m.extraCellNum = r.int32();
                    break;
                case 3:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("bagType"))
                throw $util.ProtocolError("missing required 'bagType'", { instance: m });
            if (!m.hasOwnProperty("extraCellNum"))
                throw $util.ProtocolError("missing required 'extraCellNum'", { instance: m });
            return m;
        };
        return s2c_show_bag_reply;
    })();
    $root.c2s_use_bag_item_request = (function() {
        function c2s_use_bag_item_request(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_use_bag_item_request.prototype.items = $util.emptyArray;
        c2s_use_bag_item_request.cmd = 1283;
        c2s_use_bag_item_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_simple.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        c2s_use_bag_item_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_use_bag_item_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_simple.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_use_bag_item_request;
    })();
    $root.s2c_use_bag_item_reply = (function() {
        function s2c_use_bag_item_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_use_bag_item_reply.prototype.msgId = 0;
        s2c_use_bag_item_reply.cmd = 1284;
        s2c_use_bag_item_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.msgId);
            return w;
        };
        s2c_use_bag_item_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_use_bag_item_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.msgId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("msgId"))
                throw $util.ProtocolError("missing required 'msgId'", { instance: m });
            return m;
        };
        return s2c_use_bag_item_reply;
    })();
    $root.c2s_recycle_item_request = (function() {
        function c2s_recycle_item_request(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_recycle_item_request.prototype.items = $util.emptyArray;
        c2s_recycle_item_request.prototype.bagType = 0;
        c2s_recycle_item_request.cmd = 1285;
        c2s_recycle_item_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_simple.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.bagType);
            return w;
        };
        c2s_recycle_item_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_recycle_item_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_simple.decode(r, r.uint32()));
                    break;
                case 2:
                    m.bagType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("bagType"))
                throw $util.ProtocolError("missing required 'bagType'", { instance: m });
            return m;
        };
        return c2s_recycle_item_request;
    })();
    $root.s2c_recycle_item_reply = (function() {
        function s2c_recycle_item_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_recycle_item_reply.prototype.msgId = 0;
        s2c_recycle_item_reply.prototype.bagType = 0;
        s2c_recycle_item_reply.cmd = 1286;
        s2c_recycle_item_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.msgId);
            w.uint32(16).int32(m.bagType);
            return w;
        };
        s2c_recycle_item_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_recycle_item_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.msgId = r.int32();
                    break;
                case 2:
                    m.bagType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("msgId"))
                throw $util.ProtocolError("missing required 'msgId'", { instance: m });
            if (!m.hasOwnProperty("bagType"))
                throw $util.ProtocolError("missing required 'bagType'", { instance: m });
            return m;
        };
        return s2c_recycle_item_reply;
    })();
    $root.c2s_compose_item_request = (function() {
        function c2s_compose_item_request(p) {
            this.uniqIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_compose_item_request.prototype.baseId = 0;
        c2s_compose_item_request.prototype.uniqIds = $util.emptyArray;
        c2s_compose_item_request.cmd = 1287;
        c2s_compose_item_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            if (m.uniqIds != null && m.uniqIds.length) {
                for (var i = 0; i < m.uniqIds.length; ++i)
                    $root.p_uniq_id.encode(m.uniqIds[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        c2s_compose_item_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_compose_item_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                case 2:
                    if (!(m.uniqIds && m.uniqIds.length))
                        m.uniqIds = [];
                    m.uniqIds.push($root.p_uniq_id.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            return m;
        };
        return c2s_compose_item_request;
    })();
    $root.c2s_compose_wearing_equip_request = (function() {
        function c2s_compose_wearing_equip_request(p) {
            this.uniqIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_compose_wearing_equip_request.prototype.baseId = 0;
        c2s_compose_wearing_equip_request.prototype.uniqIds = $util.emptyArray;
        c2s_compose_wearing_equip_request.cmd = 1288;
        c2s_compose_wearing_equip_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            if (m.uniqIds != null && m.uniqIds.length) {
                for (var i = 0; i < m.uniqIds.length; ++i)
                    $root.p_uniq_id.encode(m.uniqIds[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        c2s_compose_wearing_equip_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_compose_wearing_equip_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                case 2:
                    if (!(m.uniqIds && m.uniqIds.length))
                        m.uniqIds = [];
                    m.uniqIds.push($root.p_uniq_id.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            return m;
        };
        return c2s_compose_wearing_equip_request;
    })();
    $root.s2c_compose_item_reply = (function() {
        function s2c_compose_item_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_compose_item_reply.prototype.baseId = 0;
        s2c_compose_item_reply.cmd = 1289;
        s2c_compose_item_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            return w;
        };
        s2c_compose_item_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_compose_item_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            return m;
        };
        return s2c_compose_item_reply;
    })();
    $root.p_uniq_id = (function() {
        function p_uniq_id(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_uniq_id.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_uniq_id.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        p_uniq_id.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_uniq_id();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return p_uniq_id;
    })();
    $root.c2s_discompose_item_request = (function() {
        function c2s_discompose_item_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_discompose_item_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_discompose_item_request.prototype.itemId = 0;
        c2s_discompose_item_request.cmd = 1290;
        c2s_discompose_item_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.itemId);
            return w;
        };
        c2s_discompose_item_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_discompose_item_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            return m;
        };
        return c2s_discompose_item_request;
    })();
    $root.s2c_bag_change_notify = (function() {
        function s2c_bag_change_notify(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_bag_change_notify.prototype.items = $util.emptyArray;
        s2c_bag_change_notify.cmd = 1291;
        s2c_bag_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_change_item.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_bag_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_bag_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_change_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_bag_change_notify;
    })();
    $root.p_change_item = (function() {
        function p_change_item(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_item.prototype.bagType = 0;
        p_change_item.prototype.item = null;
        p_change_item.prototype.reason = 0;
        p_change_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.bagType);
            $root.p_item.encode(m.item, w.uint32(18).fork()).ldelim();
            w.uint32(24).int32(m.reason);
            return w;
        };
        p_change_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bagType = r.int32();
                    break;
                case 2:
                    m.item = $root.p_item.decode(r, r.uint32());
                    break;
                case 3:
                    m.reason = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("bagType"))
                throw $util.ProtocolError("missing required 'bagType'", { instance: m });
            if (!m.hasOwnProperty("item"))
                throw $util.ProtocolError("missing required 'item'", { instance: m });
            if (!m.hasOwnProperty("reason"))
                throw $util.ProtocolError("missing required 'reason'", { instance: m });
            return m;
        };
        return p_change_item;
    })();
    $root.c2s_access_store_request = (function() {
        function c2s_access_store_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_access_store_request.prototype.type = 0;
        c2s_access_store_request.prototype.baseId = 0;
        c2s_access_store_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_access_store_request.prototype.bound = 0;
        c2s_access_store_request.prototype.count = 0;
        c2s_access_store_request.cmd = 1292;
        c2s_access_store_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.baseId);
            w.uint32(24).int64(m.uniqId);
            w.uint32(32).int32(m.bound);
            w.uint32(40).int32(m.count);
            return w;
        };
        c2s_access_store_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_access_store_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.baseId = r.int32();
                    break;
                case 3:
                    m.uniqId = r.int64();
                    break;
                case 4:
                    m.bound = r.int32();
                    break;
                case 5:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return c2s_access_store_request;
    })();
    $root.s2c_access_store_reply = (function() {
        function s2c_access_store_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_access_store_reply.cmd = 1293;
        s2c_access_store_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_access_store_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_access_store_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_access_store_reply;
    })();
    $root.c2s_access_xunbao_bag_request = (function() {
        function c2s_access_xunbao_bag_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_access_xunbao_bag_request.prototype.type = 0;
        c2s_access_xunbao_bag_request.prototype.baseId = 0;
        c2s_access_xunbao_bag_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_access_xunbao_bag_request.prototype.bound = 0;
        c2s_access_xunbao_bag_request.prototype.count = 0;
        c2s_access_xunbao_bag_request.cmd = 1294;
        c2s_access_xunbao_bag_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.baseId);
            w.uint32(24).int64(m.uniqId);
            w.uint32(32).int32(m.bound);
            w.uint32(40).int32(m.count);
            return w;
        };
        c2s_access_xunbao_bag_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_access_xunbao_bag_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.baseId = r.int32();
                    break;
                case 3:
                    m.uniqId = r.int64();
                    break;
                case 4:
                    m.bound = r.int32();
                    break;
                case 5:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return c2s_access_xunbao_bag_request;
    })();
    $root.s2c_cell_num_change = (function() {
        function s2c_cell_num_change(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_cell_num_change.prototype.type = 0;
        s2c_cell_num_change.prototype.extraCellNum = 0;
        s2c_cell_num_change.cmd = 1295;
        s2c_cell_num_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.extraCellNum);
            return w;
        };
        s2c_cell_num_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_cell_num_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.extraCellNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("extraCellNum"))
                throw $util.ProtocolError("missing required 'extraCellNum'", { instance: m });
            return m;
        };
        return s2c_cell_num_change;
    })();
    $root.p_item = (function() {
        function p_item(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_item.prototype.flag = 0;
        p_item.prototype.baseId = 0;
        p_item.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_item.prototype.bound = 0;
        p_item.prototype.count = 0;
        p_item.prototype.equip = null;
        p_item.prototype.fate = null;
        p_item.prototype.elfEquip = null;
        p_item.prototype.soulEquipGrid = null;
        p_item.prototype.squireEquip = null;
        p_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.flag);
            w.uint32(16).int32(m.baseId);
            w.uint32(24).int64(m.uniqId);
            w.uint32(32).int32(m.bound);
            w.uint32(40).int32(m.count);
            if (m.equip != null && Object.hasOwnProperty.call(m, "equip"))
                $root.p_equip_item.encode(m.equip, w.uint32(50).fork()).ldelim();
            if (m.fate != null && Object.hasOwnProperty.call(m, "fate"))
                $root.p_item_fate.encode(m.fate, w.uint32(58).fork()).ldelim();
            if (m.elfEquip != null && Object.hasOwnProperty.call(m, "elfEquip"))
                $root.p_elf_equip.encode(m.elfEquip, w.uint32(66).fork()).ldelim();
            if (m.soulEquipGrid != null && Object.hasOwnProperty.call(m, "soulEquipGrid"))
                $root.p_soul_equip_grid_info.encode(m.soulEquipGrid, w.uint32(74).fork()).ldelim();
            if (m.squireEquip != null && Object.hasOwnProperty.call(m, "squireEquip"))
                $root.p_squire_equip.encode(m.squireEquip, w.uint32(98).fork()).ldelim();
            return w;
        };
        p_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.flag = r.int32();
                    break;
                case 2:
                    m.baseId = r.int32();
                    break;
                case 3:
                    m.uniqId = r.int64();
                    break;
                case 4:
                    m.bound = r.int32();
                    break;
                case 5:
                    m.count = r.int32();
                    break;
                case 6:
                    m.equip = $root.p_equip_item.decode(r, r.uint32());
                    break;
                case 7:
                    m.fate = $root.p_item_fate.decode(r, r.uint32());
                    break;
                case 8:
                    m.elfEquip = $root.p_elf_equip.decode(r, r.uint32());
                    break;
                case 9:
                    m.soulEquipGrid = $root.p_soul_equip_grid_info.decode(r, r.uint32());
                    break;
                case 12:
                    m.squireEquip = $root.p_squire_equip.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("flag"))
                throw $util.ProtocolError("missing required 'flag'", { instance: m });
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return p_item;
    })();
    $root.p_equip_item = (function() {
        function p_equip_item(p) {
            this.equipBasicAttr = [];
            this.equipBlueAttr = [];
            this.equipPurpleAttr = [];
            this.equipPinkAttr = [];
            this.equipGem = [];
            this.suitList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_item.prototype.equipBasicAttr = $util.emptyArray;
        p_equip_item.prototype.equipBlueAttr = $util.emptyArray;
        p_equip_item.prototype.equipPurpleAttr = $util.emptyArray;
        p_equip_item.prototype.equipPinkAttr = $util.emptyArray;
        p_equip_item.prototype.equipScore = 0;
        p_equip_item.prototype.equipGem = $util.emptyArray;
        p_equip_item.prototype.equipActivity = 0;
        p_equip_item.prototype.suitList = $util.emptyArray;
        p_equip_item.prototype.equipGemScore = 0;
        p_equip_item.prototype.timeLeft = 0;
        p_equip_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipBasicAttr != null && m.equipBasicAttr.length) {
                for (var i = 0; i < m.equipBasicAttr.length; ++i)
                    $root.p_equip_attr.encode(m.equipBasicAttr[i], w.uint32(10).fork()).ldelim();
            }
            if (m.equipBlueAttr != null && m.equipBlueAttr.length) {
                for (var i = 0; i < m.equipBlueAttr.length; ++i)
                    $root.p_equip_attr.encode(m.equipBlueAttr[i], w.uint32(18).fork()).ldelim();
            }
            if (m.equipPurpleAttr != null && m.equipPurpleAttr.length) {
                for (var i = 0; i < m.equipPurpleAttr.length; ++i)
                    $root.p_equip_attr.encode(m.equipPurpleAttr[i], w.uint32(26).fork()).ldelim();
            }
            if (m.equipPinkAttr != null && m.equipPinkAttr.length) {
                for (var i = 0; i < m.equipPinkAttr.length; ++i)
                    $root.p_equip_attr.encode(m.equipPinkAttr[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.equipScore);
            if (m.equipGem != null && m.equipGem.length) {
                for (var i = 0; i < m.equipGem.length; ++i)
                    $root.p_equip_gem.encode(m.equipGem[i], w.uint32(50).fork()).ldelim();
            }
            w.uint32(56).int32(m.equipActivity);
            if (m.suitList != null && m.suitList.length) {
                for (var i = 0; i < m.suitList.length; ++i)
                    $root.p_kv_pair.encode(m.suitList[i], w.uint32(66).fork()).ldelim();
            }
            w.uint32(72).int32(m.equipGemScore);
            w.uint32(80).int32(m.timeLeft);
            return w;
        };
        p_equip_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.equipBasicAttr && m.equipBasicAttr.length))
                        m.equipBasicAttr = [];
                    m.equipBasicAttr.push($root.p_equip_attr.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.equipBlueAttr && m.equipBlueAttr.length))
                        m.equipBlueAttr = [];
                    m.equipBlueAttr.push($root.p_equip_attr.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.equipPurpleAttr && m.equipPurpleAttr.length))
                        m.equipPurpleAttr = [];
                    m.equipPurpleAttr.push($root.p_equip_attr.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.equipPinkAttr && m.equipPinkAttr.length))
                        m.equipPinkAttr = [];
                    m.equipPinkAttr.push($root.p_equip_attr.decode(r, r.uint32()));
                    break;
                case 5:
                    m.equipScore = r.int32();
                    break;
                case 6:
                    if (!(m.equipGem && m.equipGem.length))
                        m.equipGem = [];
                    m.equipGem.push($root.p_equip_gem.decode(r, r.uint32()));
                    break;
                case 7:
                    m.equipActivity = r.int32();
                    break;
                case 8:
                    if (!(m.suitList && m.suitList.length))
                        m.suitList = [];
                    m.suitList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 9:
                    m.equipGemScore = r.int32();
                    break;
                case 10:
                    m.timeLeft = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("equipScore"))
                throw $util.ProtocolError("missing required 'equipScore'", { instance: m });
            if (!m.hasOwnProperty("equipActivity"))
                throw $util.ProtocolError("missing required 'equipActivity'", { instance: m });
            if (!m.hasOwnProperty("equipGemScore"))
                throw $util.ProtocolError("missing required 'equipGemScore'", { instance: m });
            if (!m.hasOwnProperty("timeLeft"))
                throw $util.ProtocolError("missing required 'timeLeft'", { instance: m });
            return m;
        };
        return p_equip_item;
    })();
    $root.p_equip_attr = (function() {
        function p_equip_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_attr.prototype.name = "";
        p_equip_attr.prototype.val = 0;
        p_equip_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_equip_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_equip_attr;
    })();
    $root.p_equip_gem = (function() {
        function p_equip_gem(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_gem.prototype.baseId = 0;
        p_equip_gem.prototype.gemPos = 0;
        p_equip_gem.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            w.uint32(16).int32(m.gemPos);
            return w;
        };
        p_equip_gem.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_gem();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                case 2:
                    m.gemPos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("gemPos"))
                throw $util.ProtocolError("missing required 'gemPos'", { instance: m });
            return m;
        };
        return p_equip_gem;
    })();
    $root.p_elf_equip = (function() {
        function p_elf_equip(p) {
            this.blueAttr = [];
            this.purpleAttr = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_elf_equip.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_elf_equip.prototype.itemId = 0;
        p_elf_equip.prototype.pos = 0;
        p_elf_equip.prototype.strengthenLv = 0;
        p_elf_equip.prototype.strengthenExp = 0;
        p_elf_equip.prototype.blueAttr = $util.emptyArray;
        p_elf_equip.prototype.purpleAttr = $util.emptyArray;
        p_elf_equip.prototype.score = 0;
        p_elf_equip.prototype.baseScore = 0;
        p_elf_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.pos);
            w.uint32(32).int32(m.strengthenLv);
            w.uint32(40).int32(m.strengthenExp);
            if (m.blueAttr != null && m.blueAttr.length) {
                for (var i = 0; i < m.blueAttr.length; ++i)
                    $root.p_equip_attr.encode(m.blueAttr[i], w.uint32(50).fork()).ldelim();
            }
            if (m.purpleAttr != null && m.purpleAttr.length) {
                for (var i = 0; i < m.purpleAttr.length; ++i)
                    $root.p_equip_attr.encode(m.purpleAttr[i], w.uint32(58).fork()).ldelim();
            }
            w.uint32(64).int32(m.score);
            w.uint32(72).int32(m.baseScore);
            return w;
        };
        p_elf_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_elf_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.pos = r.int32();
                    break;
                case 4:
                    m.strengthenLv = r.int32();
                    break;
                case 5:
                    m.strengthenExp = r.int32();
                    break;
                case 6:
                    if (!(m.blueAttr && m.blueAttr.length))
                        m.blueAttr = [];
                    m.blueAttr.push($root.p_equip_attr.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.purpleAttr && m.purpleAttr.length))
                        m.purpleAttr = [];
                    m.purpleAttr.push($root.p_equip_attr.decode(r, r.uint32()));
                    break;
                case 8:
                    m.score = r.int32();
                    break;
                case 9:
                    m.baseScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("strengthenLv"))
                throw $util.ProtocolError("missing required 'strengthenLv'", { instance: m });
            if (!m.hasOwnProperty("strengthenExp"))
                throw $util.ProtocolError("missing required 'strengthenExp'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            if (!m.hasOwnProperty("baseScore"))
                throw $util.ProtocolError("missing required 'baseScore'", { instance: m });
            return m;
        };
        return p_elf_equip;
    })();
    $root.p_squire_equip = (function() {
        function p_squire_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_squire_equip.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_squire_equip.prototype.itemId = 0;
        p_squire_equip.prototype.pos = 0;
        p_squire_equip.prototype.score = 0;
        p_squire_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.pos);
            w.uint32(32).int32(m.score);
            return w;
        };
        p_squire_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_squire_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.pos = r.int32();
                    break;
                case 4:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return p_squire_equip;
    })();
    $root.p_soul_equip_grid_info = (function() {
        function p_soul_equip_grid_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_soul_equip_grid_info.prototype.grade = 0;
        p_soul_equip_grid_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.grade);
            return w;
        };
        p_soul_equip_grid_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_soul_equip_grid_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.grade = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("grade"))
                throw $util.ProtocolError("missing required 'grade'", { instance: m });
            return m;
        };
        return p_soul_equip_grid_info;
    })();
    $root.s2c_change_bound_notify = (function() {
        function s2c_change_bound_notify(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_change_bound_notify.prototype.items = $util.emptyArray;
        s2c_change_bound_notify.cmd = 1296;
        s2c_change_bound_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_item_unbound.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_change_bound_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_change_bound_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_item_unbound.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_change_bound_notify;
    })();
    $root.p_item_unbound = (function() {
        function p_item_unbound(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_item_unbound.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_item_unbound.prototype.baseId = 0;
        p_item_unbound.prototype.count = 0;
        p_item_unbound.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.baseId);
            w.uint32(24).int32(m.count);
            return w;
        };
        p_item_unbound.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_item_unbound();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.baseId = r.int32();
                    break;
                case 3:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return p_item_unbound;
    })();
    $root.s2c_role_item_use_num = (function() {
        function s2c_role_item_use_num(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_item_use_num.prototype.items = $util.emptyArray;
        s2c_role_item_use_num.cmd = 1297;
        s2c_role_item_use_num.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_use_num.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_item_use_num.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_item_use_num();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_use_num.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_item_use_num;
    })();
    $root.s2c_item_use_num_change = (function() {
        function s2c_item_use_num_change(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_item_use_num_change.prototype.items = $util.emptyArray;
        s2c_item_use_num_change.cmd = 1298;
        s2c_item_use_num_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_use_num.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_item_use_num_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_item_use_num_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_use_num.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_item_use_num_change;
    })();
    $root.item_use_num = (function() {
        function item_use_num(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        item_use_num.prototype.baseId = 0;
        item_use_num.prototype.count = 0;
        item_use_num.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.baseId);
            w.uint32(16).int32(m.count);
            return w;
        };
        item_use_num.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.item_use_num();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.baseId = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("baseId"))
                throw $util.ProtocolError("missing required 'baseId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return item_use_num;
    })();
    $root.c2s_equip_take_apart = (function() {
        function c2s_equip_take_apart(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_equip_take_apart.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_equip_take_apart.cmd = 1299;
        c2s_equip_take_apart.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_equip_take_apart.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_equip_take_apart();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_equip_take_apart;
    })();
    $root.compose_item_record_p = (function() {
        function compose_item_record_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        compose_item_record_p.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        compose_item_record_p.prototype.roleName = "";
        compose_item_record_p.prototype.itemId = 0;
        compose_item_record_p.prototype.count = 0;
        compose_item_record_p.prototype.time = 0;
        compose_item_record_p.prototype.extData = "";
        compose_item_record_p.prototype.result = 0;
        compose_item_record_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.itemId);
            w.uint32(32).int32(m.count);
            w.uint32(40).int32(m.time);
            w.uint32(50).string(m.extData);
            w.uint32(56).int32(m.result);
            return w;
        };
        compose_item_record_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.compose_item_record_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.itemId = r.int32();
                    break;
                case 4:
                    m.count = r.int32();
                    break;
                case 5:
                    m.time = r.int32();
                    break;
                case 6:
                    m.extData = r.string();
                    break;
                case 7:
                    m.result = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            if (!m.hasOwnProperty("extData"))
                throw $util.ProtocolError("missing required 'extData'", { instance: m });
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            return m;
        };
        return compose_item_record_p;
    })();
    $root.c2s_compose_item_records_request = (function() {
        function c2s_compose_item_records_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_compose_item_records_request.cmd = 1300;
        c2s_compose_item_records_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_compose_item_records_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_compose_item_records_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_compose_item_records_request;
    })();
    $root.s2c_compose_item_records_reply = (function() {
        function s2c_compose_item_records_reply(p) {
            this.records = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_compose_item_records_reply.prototype.records = $util.emptyArray;
        s2c_compose_item_records_reply.cmd = 1301;
        s2c_compose_item_records_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.records != null && m.records.length) {
                for (var i = 0; i < m.records.length; ++i)
                    $root.compose_item_record_p.encode(m.records[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_compose_item_records_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_compose_item_records_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.records && m.records.length))
                        m.records = [];
                    m.records.push($root.compose_item_record_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_compose_item_records_reply;
    })();
    $root.s2c_compose_item_record_notify = (function() {
        function s2c_compose_item_record_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_compose_item_record_notify.prototype.record = null;
        s2c_compose_item_record_notify.cmd = 1302;
        s2c_compose_item_record_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.compose_item_record_p.encode(m.record, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_compose_item_record_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_compose_item_record_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.record = $root.compose_item_record_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("record"))
                throw $util.ProtocolError("missing required 'record'", { instance: m });
            return m;
        };
        return s2c_compose_item_record_notify;
    })();
    $root.s2c_pick_item_notify = (function() {
        function s2c_pick_item_notify(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_pick_item_notify.prototype.items = $util.emptyArray;
        s2c_pick_item_notify.cmd = 1303;
        s2c_pick_item_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_kv_pair.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_pick_item_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_pick_item_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_pick_item_notify;
    })();
    $root.c2s_use_bag_item_use_request = (function() {
        function c2s_use_bag_item_use_request(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_use_bag_item_use_request.prototype.items = $util.emptyArray;
        c2s_use_bag_item_use_request.cmd = 1304;
        c2s_use_bag_item_use_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_use.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        c2s_use_bag_item_use_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_use_bag_item_use_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_use.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_use_bag_item_use_request;
    })();
    $root.s2c_use_bag_item_use_reply = (function() {
        function s2c_use_bag_item_use_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_use_bag_item_use_reply.prototype.msgId = 0;
        s2c_use_bag_item_use_reply.cmd = 1305;
        s2c_use_bag_item_use_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.msgId);
            return w;
        };
        s2c_use_bag_item_use_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_use_bag_item_use_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.msgId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("msgId"))
                throw $util.ProtocolError("missing required 'msgId'", { instance: m });
            return m;
        };
        return s2c_use_bag_item_use_reply;
    })();
    $root.c2s_change_item_sex_request = (function() {
        function c2s_change_item_sex_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_item_sex_request.prototype.type = 0;
        c2s_change_item_sex_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_change_item_sex_request.cmd = 1306;
        c2s_change_item_sex_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int64(m.uniqId);
            return w;
        };
        c2s_change_item_sex_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_item_sex_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_change_item_sex_request;
    })();
    $root.s2c_open_box_notify = (function() {
        function s2c_open_box_notify(p) {
            this.itemList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_box_notify.prototype.boxId = 0;
        s2c_open_box_notify.prototype.itemList = $util.emptyArray;
        s2c_open_box_notify.cmd = 1307;
        s2c_open_box_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.boxId);
            if (m.itemList != null && m.itemList.length) {
                for (var i = 0; i < m.itemList.length; ++i)
                    $root.p_item.encode(m.itemList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_open_box_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_box_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.boxId = r.int32();
                    break;
                case 2:
                    if (!(m.itemList && m.itemList.length))
                        m.itemList = [];
                    m.itemList.push($root.p_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("boxId"))
                throw $util.ProtocolError("missing required 'boxId'", { instance: m });
            return m;
        };
        return s2c_open_box_notify;
    })();
    $root.p_fate = (function() {
        function p_fate(p) {
            this.landGrids = [];
            this.skyGrids = [];
            this.lockedUniqidList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_fate.prototype.landStone = 0;
        p_fate.prototype.landDebris = 0;
        p_fate.prototype.landGrids = $util.emptyArray;
        p_fate.prototype.skyStone = 0;
        p_fate.prototype.skyDebris = 0;
        p_fate.prototype.skyGrids = $util.emptyArray;
        p_fate.prototype.lockedUniqidList = $util.emptyArray;
        p_fate.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.landStone);
            w.uint32(16).int32(m.landDebris);
            if (m.landGrids != null && m.landGrids.length) {
                for (var i = 0; i < m.landGrids.length; ++i)
                    $root.p_grid.encode(m.landGrids[i], w.uint32(26).fork()).ldelim();
            }
            w.uint32(32).int32(m.skyStone);
            w.uint32(40).int32(m.skyDebris);
            if (m.skyGrids != null && m.skyGrids.length) {
                for (var i = 0; i < m.skyGrids.length; ++i)
                    $root.p_grid.encode(m.skyGrids[i], w.uint32(50).fork()).ldelim();
            }
            if (m.lockedUniqidList != null && m.lockedUniqidList.length) {
                for (var i = 0; i < m.lockedUniqidList.length; ++i)
                    w.uint32(56).int64(m.lockedUniqidList[i]);
            }
            return w;
        };
        p_fate.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_fate();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.landStone = r.int32();
                    break;
                case 2:
                    m.landDebris = r.int32();
                    break;
                case 3:
                    if (!(m.landGrids && m.landGrids.length))
                        m.landGrids = [];
                    m.landGrids.push($root.p_grid.decode(r, r.uint32()));
                    break;
                case 4:
                    m.skyStone = r.int32();
                    break;
                case 5:
                    m.skyDebris = r.int32();
                    break;
                case 6:
                    if (!(m.skyGrids && m.skyGrids.length))
                        m.skyGrids = [];
                    m.skyGrids.push($root.p_grid.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.lockedUniqidList && m.lockedUniqidList.length))
                        m.lockedUniqidList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.lockedUniqidList.push(r.int64());
                    } else
                        m.lockedUniqidList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("landStone"))
                throw $util.ProtocolError("missing required 'landStone'", { instance: m });
            if (!m.hasOwnProperty("landDebris"))
                throw $util.ProtocolError("missing required 'landDebris'", { instance: m });
            if (!m.hasOwnProperty("skyStone"))
                throw $util.ProtocolError("missing required 'skyStone'", { instance: m });
            if (!m.hasOwnProperty("skyDebris"))
                throw $util.ProtocolError("missing required 'skyDebris'", { instance: m });
            return m;
        };
        return p_fate;
    })();
    $root.p_grid = (function() {
        function p_grid(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_grid.prototype.pos = 0;
        p_grid.prototype.itemId = 0;
        p_grid.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_grid.prototype.level = 0;
        p_grid.prototype.bound = 0;
        p_grid.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int64(m.uniqId);
            w.uint32(32).int32(m.level);
            w.uint32(40).int32(m.bound);
            return w;
        };
        p_grid.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_grid();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.uniqId = r.int64();
                    break;
                case 4:
                    m.level = r.int32();
                    break;
                case 5:
                    m.bound = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            return m;
        };
        return p_grid;
    })();
    $root.p_item_fate = (function() {
        function p_item_fate(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_item_fate.prototype.level = 0;
        p_item_fate.prototype.lock = 0;
        p_item_fate.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.lock);
            return w;
        };
        p_item_fate.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_item_fate();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.lock = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("lock"))
                throw $util.ProtocolError("missing required 'lock'", { instance: m });
            return m;
        };
        return p_item_fate;
    })();
    $root.c2s_fate_info_request = (function() {
        function c2s_fate_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fate_info_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_fate_info_request.cmd = 6145;
        c2s_fate_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_fate_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fate_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_fate_info_request;
    })();
    $root.s2c_fate_info_reply = (function() {
        function s2c_fate_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fate_info_reply.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_fate_info_reply.prototype.fate = null;
        s2c_fate_info_reply.cmd = 6146;
        s2c_fate_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            $root.p_fate.encode(m.fate, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_fate_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fate_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.fate = $root.p_fate.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("fate"))
                throw $util.ProtocolError("missing required 'fate'", { instance: m });
            return m;
        };
        return s2c_fate_info_reply;
    })();
    $root.s2c_fate_info_change_notify = (function() {
        function s2c_fate_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fate_info_change_notify.prototype.fate = null;
        s2c_fate_info_change_notify.cmd = 6147;
        s2c_fate_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_fate.encode(m.fate, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_fate_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fate_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fate = $root.p_fate.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fate"))
                throw $util.ProtocolError("missing required 'fate'", { instance: m });
            return m;
        };
        return s2c_fate_info_change_notify;
    })();
    $root.c2s_grid_increase_request = (function() {
        function c2s_grid_increase_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_grid_increase_request.prototype.type = 0;
        c2s_grid_increase_request.prototype.pos = 0;
        c2s_grid_increase_request.cmd = 6148;
        c2s_grid_increase_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.pos);
            return w;
        };
        c2s_grid_increase_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_grid_increase_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.pos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            return m;
        };
        return c2s_grid_increase_request;
    })();
    $root.c2s_grid_replace_request = (function() {
        function c2s_grid_replace_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_grid_replace_request.prototype.type = 0;
        c2s_grid_replace_request.prototype.pos = 0;
        c2s_grid_replace_request.prototype.itemId = 0;
        c2s_grid_replace_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_grid_replace_request.prototype.bound = 0;
        c2s_grid_replace_request.cmd = 6149;
        c2s_grid_replace_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.pos);
            w.uint32(24).int32(m.itemId);
            w.uint32(32).int64(m.uniqId);
            w.uint32(40).int32(m.bound);
            return w;
        };
        c2s_grid_replace_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_grid_replace_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.pos = r.int32();
                    break;
                case 3:
                    m.itemId = r.int32();
                    break;
                case 4:
                    m.uniqId = r.int64();
                    break;
                case 5:
                    m.bound = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            return m;
        };
        return c2s_grid_replace_request;
    })();
    $root.c2s_fate_lock_unlock_request = (function() {
        function c2s_fate_lock_unlock_request(p) {
            this.uniqIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fate_lock_unlock_request.prototype.type = 0;
        c2s_fate_lock_unlock_request.prototype.uniqIdList = $util.emptyArray;
        c2s_fate_lock_unlock_request.cmd = 6150;
        c2s_fate_lock_unlock_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            if (m.uniqIdList != null && m.uniqIdList.length) {
                for (var i = 0; i < m.uniqIdList.length; ++i)
                    w.uint32(16).int64(m.uniqIdList[i]);
            }
            return w;
        };
        c2s_fate_lock_unlock_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fate_lock_unlock_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    if (!(m.uniqIdList && m.uniqIdList.length))
                        m.uniqIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.uniqIdList.push(r.int64());
                    } else
                        m.uniqIdList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_fate_lock_unlock_request;
    })();
    $root.s2c_fate_lock_unlock_reply = (function() {
        function s2c_fate_lock_unlock_reply(p) {
            this.lockedUniqidList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fate_lock_unlock_reply.prototype.lockedUniqidList = $util.emptyArray;
        s2c_fate_lock_unlock_reply.cmd = 6151;
        s2c_fate_lock_unlock_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.lockedUniqidList != null && m.lockedUniqidList.length) {
                for (var i = 0; i < m.lockedUniqidList.length; ++i)
                    w.uint32(8).int64(m.lockedUniqidList[i]);
            }
            return w;
        };
        s2c_fate_lock_unlock_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fate_lock_unlock_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.lockedUniqidList && m.lockedUniqidList.length))
                        m.lockedUniqidList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.lockedUniqidList.push(r.int64());
                    } else
                        m.lockedUniqidList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_fate_lock_unlock_reply;
    })();
    $root.c2s_fate_decompose_request = (function() {
        function c2s_fate_decompose_request(p) {
            this.uniqIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fate_decompose_request.prototype.uniqIdList = $util.emptyArray;
        c2s_fate_decompose_request.cmd = 6152;
        c2s_fate_decompose_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.uniqIdList != null && m.uniqIdList.length) {
                for (var i = 0; i < m.uniqIdList.length; ++i)
                    w.uint32(8).int64(m.uniqIdList[i]);
            }
            return w;
        };
        c2s_fate_decompose_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fate_decompose_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.uniqIdList && m.uniqIdList.length))
                        m.uniqIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.uniqIdList.push(r.int64());
                    } else
                        m.uniqIdList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_fate_decompose_request;
    })();
    $root.p_count = (function() {
        function p_count(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_count.prototype.key = 0;
        p_count.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_count.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.key);
            w.uint32(16).int64(m.value);
            return w;
        };
        p_count.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_count();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.int32();
                    break;
                case 2:
                    m.value = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("key"))
                throw $util.ProtocolError("missing required 'key'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            return m;
        };
        return p_count;
    })();
    $root.s2c_counter_changed = (function() {
        function s2c_counter_changed(p) {
            this.counters = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_counter_changed.prototype.counters = $util.emptyArray;
        s2c_counter_changed.cmd = 1537;
        s2c_counter_changed.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.counters != null && m.counters.length) {
                for (var i = 0; i < m.counters.length; ++i)
                    $root.p_count.encode(m.counters[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_counter_changed.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_counter_changed();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.counters && m.counters.length))
                        m.counters = [];
                    m.counters.push($root.p_count.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_counter_changed;
    })();
    $root.p_skill = (function() {
        function p_skill(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_skill.prototype.groupId = 0;
        p_skill.prototype.skillId = 0;
        p_skill.prototype.autoUse = 0;
        p_skill.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.groupId);
            w.uint32(16).int32(m.skillId);
            w.uint32(24).int32(m.autoUse);
            return w;
        };
        p_skill.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_skill();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.groupId = r.int32();
                    break;
                case 2:
                    m.skillId = r.int32();
                    break;
                case 3:
                    m.autoUse = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("groupId"))
                throw $util.ProtocolError("missing required 'groupId'", { instance: m });
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            if (!m.hasOwnProperty("autoUse"))
                throw $util.ProtocolError("missing required 'autoUse'", { instance: m });
            return m;
        };
        return p_skill;
    })();
    $root.c2s_show_skill_request = (function() {
        function c2s_show_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_show_skill_request.cmd = 1793;
        c2s_show_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_show_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_show_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_show_skill_request;
    })();
    $root.s2c_show_skill_reply = (function() {
        function s2c_show_skill_reply(p) {
            this.skillList = [];
            this.autoUseList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_show_skill_reply.prototype.skillList = $util.emptyArray;
        s2c_show_skill_reply.prototype.autoUseList = $util.emptyArray;
        s2c_show_skill_reply.cmd = 1794;
        s2c_show_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.skillList != null && m.skillList.length) {
                for (var i = 0; i < m.skillList.length; ++i)
                    $root.p_skill.encode(m.skillList[i], w.uint32(10).fork()).ldelim();
            }
            if (m.autoUseList != null && m.autoUseList.length) {
                for (var i = 0; i < m.autoUseList.length; ++i)
                    w.uint32(16).int32(m.autoUseList[i]);
            }
            return w;
        };
        s2c_show_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_show_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.skillList && m.skillList.length))
                        m.skillList = [];
                    m.skillList.push($root.p_skill.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.autoUseList && m.autoUseList.length))
                        m.autoUseList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.autoUseList.push(r.int32());
                    } else
                        m.autoUseList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_show_skill_reply;
    })();
    $root.s2c_skill_changed_notify = (function() {
        function s2c_skill_changed_notify(p) {
            this.items = [];
            this.autoUseList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_skill_changed_notify.prototype.items = $util.emptyArray;
        s2c_skill_changed_notify.prototype.autoUseList = $util.emptyArray;
        s2c_skill_changed_notify.cmd = 1795;
        s2c_skill_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_skill.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            if (m.autoUseList != null && m.autoUseList.length) {
                for (var i = 0; i < m.autoUseList.length; ++i)
                    w.uint32(16).int32(m.autoUseList[i]);
            }
            return w;
        };
        s2c_skill_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_skill_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_skill.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.autoUseList && m.autoUseList.length))
                        m.autoUseList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.autoUseList.push(r.int32());
                    } else
                        m.autoUseList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_skill_changed_notify;
    })();
    $root.c2s_set_auto_use_skill_request = (function() {
        function c2s_set_auto_use_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_set_auto_use_skill_request.prototype.groupId = 0;
        c2s_set_auto_use_skill_request.prototype.isAutoUse = 0;
        c2s_set_auto_use_skill_request.cmd = 1796;
        c2s_set_auto_use_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.groupId);
            w.uint32(16).int32(m.isAutoUse);
            return w;
        };
        c2s_set_auto_use_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_set_auto_use_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.groupId = r.int32();
                    break;
                case 2:
                    m.isAutoUse = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("groupId"))
                throw $util.ProtocolError("missing required 'groupId'", { instance: m });
            if (!m.hasOwnProperty("isAutoUse"))
                throw $util.ProtocolError("missing required 'isAutoUse'", { instance: m });
            return m;
        };
        return c2s_set_auto_use_skill_request;
    })();
    $root.c2s_change_auto_use_order_request = (function() {
        function c2s_change_auto_use_order_request(p) {
            this.autoUseList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_auto_use_order_request.prototype.autoUseList = $util.emptyArray;
        c2s_change_auto_use_order_request.cmd = 1797;
        c2s_change_auto_use_order_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.autoUseList != null && m.autoUseList.length) {
                for (var i = 0; i < m.autoUseList.length; ++i)
                    w.uint32(8).int32(m.autoUseList[i]);
            }
            return w;
        };
        c2s_change_auto_use_order_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_auto_use_order_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.autoUseList && m.autoUseList.length))
                        m.autoUseList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.autoUseList.push(r.int32());
                    } else
                        m.autoUseList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_change_auto_use_order_request;
    })();
    $root.c2s_mall_buy_log_request = (function() {
        function c2s_mall_buy_log_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_mall_buy_log_request.cmd = 2049;
        c2s_mall_buy_log_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_mall_buy_log_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_mall_buy_log_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_mall_buy_log_request;
    })();
    $root.s2c_mall_buy_log_reply = (function() {
        function s2c_mall_buy_log_reply(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_mall_buy_log_reply.prototype.items = $util.emptyArray;
        s2c_mall_buy_log_reply.cmd = 2050;
        s2c_mall_buy_log_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_mall_item.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_mall_buy_log_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_mall_buy_log_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_mall_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_mall_buy_log_reply;
    })();
    $root.c2s_mall_buy_request = (function() {
        function c2s_mall_buy_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_mall_buy_request.prototype.id = 0;
        c2s_mall_buy_request.prototype.count = 0;
        c2s_mall_buy_request.cmd = 2051;
        c2s_mall_buy_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.count);
            return w;
        };
        c2s_mall_buy_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_mall_buy_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return c2s_mall_buy_request;
    })();
    $root.s2c_mall_buy_reply = (function() {
        function s2c_mall_buy_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_mall_buy_reply.prototype.items = null;
        s2c_mall_buy_reply.cmd = 2052;
        s2c_mall_buy_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_mall_item.encode(m.items, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_mall_buy_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_mall_buy_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.items = $root.p_mall_item.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("items"))
                throw $util.ProtocolError("missing required 'items'", { instance: m });
            return m;
        };
        return s2c_mall_buy_reply;
    })();
    $root.c2s_mall_use_request = (function() {
        function c2s_mall_use_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_mall_use_request.prototype.id = 0;
        c2s_mall_use_request.cmd = 2053;
        c2s_mall_use_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_mall_use_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_mall_use_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_mall_use_request;
    })();
    $root.s2c_mall_use_reply = (function() {
        function s2c_mall_use_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_mall_use_reply.prototype.items = null;
        s2c_mall_use_reply.cmd = 2054;
        s2c_mall_use_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_mall_item.encode(m.items, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_mall_use_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_mall_use_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.items = $root.p_mall_item.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("items"))
                throw $util.ProtocolError("missing required 'items'", { instance: m });
            return m;
        };
        return s2c_mall_use_reply;
    })();
    $root.p_mall_item = (function() {
        function p_mall_item(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_mall_item.prototype.id = 0;
        p_mall_item.prototype.count = 0;
        p_mall_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.count);
            return w;
        };
        p_mall_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_mall_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return p_mall_item;
    })();
    $root.c2s_mall_xbuy_limit_info = (function() {
        function c2s_mall_xbuy_limit_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_mall_xbuy_limit_info.prototype.type = 0;
        c2s_mall_xbuy_limit_info.cmd = 2055;
        c2s_mall_xbuy_limit_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_mall_xbuy_limit_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_mall_xbuy_limit_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_mall_xbuy_limit_info;
    })();
    $root.s2c_mall_xbuy_limit_info_reply = (function() {
        function s2c_mall_xbuy_limit_info_reply(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_mall_xbuy_limit_info_reply.prototype.type = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.items = $util.emptyArray;
        s2c_mall_xbuy_limit_info_reply.prototype.oriPrice = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.sellPrice = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.priceType = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.startTime = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.endTime = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.cont = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.limitCont = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.day = 0;
        s2c_mall_xbuy_limit_info_reply.prototype.isReward = 0;
        s2c_mall_xbuy_limit_info_reply.cmd = 2056;
        s2c_mall_xbuy_limit_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_mall_item.encode(m.items[i], w.uint32(18).fork()).ldelim();
            }
            w.uint32(24).int32(m.oriPrice);
            w.uint32(32).int32(m.sellPrice);
            w.uint32(40).int32(m.priceType);
            w.uint32(48).int32(m.startTime);
            w.uint32(56).int32(m.endTime);
            w.uint32(64).int32(m.cont);
            w.uint32(72).int32(m.limitCont);
            w.uint32(80).int32(m.day);
            w.uint32(88).int32(m.isReward);
            return w;
        };
        s2c_mall_xbuy_limit_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_mall_xbuy_limit_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_mall_item.decode(r, r.uint32()));
                    break;
                case 3:
                    m.oriPrice = r.int32();
                    break;
                case 4:
                    m.sellPrice = r.int32();
                    break;
                case 5:
                    m.priceType = r.int32();
                    break;
                case 6:
                    m.startTime = r.int32();
                    break;
                case 7:
                    m.endTime = r.int32();
                    break;
                case 8:
                    m.cont = r.int32();
                    break;
                case 9:
                    m.limitCont = r.int32();
                    break;
                case 10:
                    m.day = r.int32();
                    break;
                case 11:
                    m.isReward = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("oriPrice"))
                throw $util.ProtocolError("missing required 'oriPrice'", { instance: m });
            if (!m.hasOwnProperty("sellPrice"))
                throw $util.ProtocolError("missing required 'sellPrice'", { instance: m });
            if (!m.hasOwnProperty("priceType"))
                throw $util.ProtocolError("missing required 'priceType'", { instance: m });
            if (!m.hasOwnProperty("startTime"))
                throw $util.ProtocolError("missing required 'startTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("cont"))
                throw $util.ProtocolError("missing required 'cont'", { instance: m });
            if (!m.hasOwnProperty("limitCont"))
                throw $util.ProtocolError("missing required 'limitCont'", { instance: m });
            if (!m.hasOwnProperty("day"))
                throw $util.ProtocolError("missing required 'day'", { instance: m });
            if (!m.hasOwnProperty("isReward"))
                throw $util.ProtocolError("missing required 'isReward'", { instance: m });
            return m;
        };
        return s2c_mall_xbuy_limit_info_reply;
    })();
    $root.c2s_mall_get_reward = (function() {
        function c2s_mall_get_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_mall_get_reward.prototype.type = 0;
        c2s_mall_get_reward.cmd = 2057;
        c2s_mall_get_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_mall_get_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_mall_get_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_mall_get_reward;
    })();
    $root.p_mail_attachment = (function() {
        function p_mail_attachment(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_mail_attachment.prototype.type = 0;
        p_mail_attachment.prototype.id = 0;
        p_mail_attachment.prototype.num = 0;
        p_mail_attachment.prototype.bound = 0;
        p_mail_attachment.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_mail_attachment.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.id);
            w.uint32(24).int32(m.num);
            if (m.bound != null && Object.hasOwnProperty.call(m, "bound"))
                w.uint32(32).int32(m.bound);
            if (m.uniqId != null && Object.hasOwnProperty.call(m, "uniqId"))
                w.uint32(40).int64(m.uniqId);
            return w;
        };
        p_mail_attachment.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_mail_attachment();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.id = r.int32();
                    break;
                case 3:
                    m.num = r.int32();
                    break;
                case 4:
                    m.bound = r.int32();
                    break;
                case 5:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return p_mail_attachment;
    })();
    $root.p_mail = (function() {
        function p_mail(p) {
            this.attachment = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_mail.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_mail.prototype.textId = 0;
        p_mail.prototype.from = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_mail.prototype.to = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_mail.prototype.title = "";
        p_mail.prototype.author = "";
        p_mail.prototype.content = "";
        p_mail.prototype.attachment = $util.emptyArray;
        p_mail.prototype.sendTime = 0;
        p_mail.prototype.expireTime = 0;
        p_mail.prototype.status = 0;
        p_mail.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.textId);
            w.uint32(24).int64(m.from);
            w.uint32(32).int64(m.to);
            w.uint32(42).string(m.title);
            w.uint32(50).string(m.author);
            w.uint32(58).string(m.content);
            if (m.attachment != null && m.attachment.length) {
                for (var i = 0; i < m.attachment.length; ++i)
                    $root.p_mail_attachment.encode(m.attachment[i], w.uint32(66).fork()).ldelim();
            }
            w.uint32(72).int32(m.sendTime);
            w.uint32(80).int32(m.expireTime);
            w.uint32(88).int32(m.status);
            return w;
        };
        p_mail.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_mail();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.textId = r.int32();
                    break;
                case 3:
                    m.from = r.int64();
                    break;
                case 4:
                    m.to = r.int64();
                    break;
                case 5:
                    m.title = r.string();
                    break;
                case 6:
                    m.author = r.string();
                    break;
                case 7:
                    m.content = r.string();
                    break;
                case 8:
                    if (!(m.attachment && m.attachment.length))
                        m.attachment = [];
                    m.attachment.push($root.p_mail_attachment.decode(r, r.uint32()));
                    break;
                case 9:
                    m.sendTime = r.int32();
                    break;
                case 10:
                    m.expireTime = r.int32();
                    break;
                case 11:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("textId"))
                throw $util.ProtocolError("missing required 'textId'", { instance: m });
            if (!m.hasOwnProperty("from"))
                throw $util.ProtocolError("missing required 'from'", { instance: m });
            if (!m.hasOwnProperty("to"))
                throw $util.ProtocolError("missing required 'to'", { instance: m });
            if (!m.hasOwnProperty("title"))
                throw $util.ProtocolError("missing required 'title'", { instance: m });
            if (!m.hasOwnProperty("author"))
                throw $util.ProtocolError("missing required 'author'", { instance: m });
            if (!m.hasOwnProperty("content"))
                throw $util.ProtocolError("missing required 'content'", { instance: m });
            if (!m.hasOwnProperty("sendTime"))
                throw $util.ProtocolError("missing required 'sendTime'", { instance: m });
            if (!m.hasOwnProperty("expireTime"))
                throw $util.ProtocolError("missing required 'expireTime'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return p_mail;
    })();
    $root.p_mail_brief = (function() {
        function p_mail_brief(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_mail_brief.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_mail_brief.prototype.textId = 0;
        p_mail_brief.prototype.attachment = 0;
        p_mail_brief.prototype.sendTime = 0;
        p_mail_brief.prototype.status = 0;
        p_mail_brief.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.textId);
            w.uint32(24).int32(m.attachment);
            w.uint32(32).int32(m.sendTime);
            w.uint32(40).int32(m.status);
            return w;
        };
        p_mail_brief.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_mail_brief();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.textId = r.int32();
                    break;
                case 3:
                    m.attachment = r.int32();
                    break;
                case 4:
                    m.sendTime = r.int32();
                    break;
                case 5:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("textId"))
                throw $util.ProtocolError("missing required 'textId'", { instance: m });
            if (!m.hasOwnProperty("attachment"))
                throw $util.ProtocolError("missing required 'attachment'", { instance: m });
            if (!m.hasOwnProperty("sendTime"))
                throw $util.ProtocolError("missing required 'sendTime'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return p_mail_brief;
    })();
    $root.p_mail_status = (function() {
        function p_mail_status(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_mail_status.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_mail_status.prototype.status = 0;
        p_mail_status.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.status);
            return w;
        };
        p_mail_status.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_mail_status();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return p_mail_status;
    })();
    $root.c2s_query_mail_list_request = (function() {
        function c2s_query_mail_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_mail_list_request.cmd = 2305;
        c2s_query_mail_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_mail_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_mail_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_mail_list_request;
    })();
    $root.s2c_query_mail_list_reply = (function() {
        function s2c_query_mail_list_reply(p) {
            this.mailList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_mail_list_reply.prototype.mailList = $util.emptyArray;
        s2c_query_mail_list_reply.cmd = 2306;
        s2c_query_mail_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mailList != null && m.mailList.length) {
                for (var i = 0; i < m.mailList.length; ++i)
                    $root.p_mail.encode(m.mailList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_mail_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_mail_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mailList && m.mailList.length))
                        m.mailList = [];
                    m.mailList.push($root.p_mail.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_mail_list_reply;
    })();
    $root.s2c_receive_mail_notify = (function() {
        function s2c_receive_mail_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_receive_mail_notify.prototype.mail = null;
        s2c_receive_mail_notify.cmd = 2307;
        s2c_receive_mail_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_mail.encode(m.mail, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_receive_mail_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_receive_mail_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.mail = $root.p_mail.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("mail"))
                throw $util.ProtocolError("missing required 'mail'", { instance: m });
            return m;
        };
        return s2c_receive_mail_notify;
    })();
    $root.c2s_read_mail_request = (function() {
        function c2s_read_mail_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_read_mail_request.prototype.mailId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_read_mail_request.cmd = 2308;
        c2s_read_mail_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.mailId);
            return w;
        };
        c2s_read_mail_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_read_mail_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.mailId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("mailId"))
                throw $util.ProtocolError("missing required 'mailId'", { instance: m });
            return m;
        };
        return c2s_read_mail_request;
    })();
    $root.c2s_extract_attachment_request = (function() {
        function c2s_extract_attachment_request(p) {
            this.mailIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_extract_attachment_request.prototype.mailIdList = $util.emptyArray;
        c2s_extract_attachment_request.cmd = 2309;
        c2s_extract_attachment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mailIdList != null && m.mailIdList.length) {
                for (var i = 0; i < m.mailIdList.length; ++i)
                    w.uint32(8).int64(m.mailIdList[i]);
            }
            return w;
        };
        c2s_extract_attachment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_extract_attachment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mailIdList && m.mailIdList.length))
                        m.mailIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.mailIdList.push(r.int64());
                    } else
                        m.mailIdList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_extract_attachment_request;
    })();
    $root.s2c_extract_attachment_reply = (function() {
        function s2c_extract_attachment_reply(p) {
            this.mailIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_extract_attachment_reply.prototype.mailIdList = $util.emptyArray;
        s2c_extract_attachment_reply.cmd = 2310;
        s2c_extract_attachment_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mailIdList != null && m.mailIdList.length) {
                for (var i = 0; i < m.mailIdList.length; ++i)
                    w.uint32(8).int64(m.mailIdList[i]);
            }
            return w;
        };
        s2c_extract_attachment_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_extract_attachment_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mailIdList && m.mailIdList.length))
                        m.mailIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.mailIdList.push(r.int64());
                    } else
                        m.mailIdList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_extract_attachment_reply;
    })();
    $root.s2c_mail_changed_notify = (function() {
        function s2c_mail_changed_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_mail_changed_notify.prototype.list = $util.emptyArray;
        s2c_mail_changed_notify.cmd = 2311;
        s2c_mail_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_mail_status.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_mail_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_mail_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_mail_status.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_mail_changed_notify;
    })();
    $root.c2s_remove_mail_request = (function() {
        function c2s_remove_mail_request(p) {
            this.mailIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_remove_mail_request.prototype.mailIdList = $util.emptyArray;
        c2s_remove_mail_request.cmd = 2312;
        c2s_remove_mail_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mailIdList != null && m.mailIdList.length) {
                for (var i = 0; i < m.mailIdList.length; ++i)
                    w.uint32(8).int64(m.mailIdList[i]);
            }
            return w;
        };
        c2s_remove_mail_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_remove_mail_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mailIdList && m.mailIdList.length))
                        m.mailIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.mailIdList.push(r.int64());
                    } else
                        m.mailIdList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_remove_mail_request;
    })();
    $root.s2c_remove_mail_reply = (function() {
        function s2c_remove_mail_reply(p) {
            this.idList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_remove_mail_reply.prototype.idList = $util.emptyArray;
        s2c_remove_mail_reply.cmd = 2313;
        s2c_remove_mail_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.idList != null && m.idList.length) {
                for (var i = 0; i < m.idList.length; ++i)
                    w.uint32(8).int64(m.idList[i]);
            }
            return w;
        };
        s2c_remove_mail_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_remove_mail_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.idList && m.idList.length))
                        m.idList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.idList.push(r.int64());
                    } else
                        m.idList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_remove_mail_reply;
    })();
    $root.c2s_query_mail_brief_list = (function() {
        function c2s_query_mail_brief_list(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_mail_brief_list.cmd = 2314;
        c2s_query_mail_brief_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_mail_brief_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_mail_brief_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_mail_brief_list;
    })();
    $root.s2c_query_mail_brief_list = (function() {
        function s2c_query_mail_brief_list(p) {
            this.mailList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_mail_brief_list.prototype.mailList = $util.emptyArray;
        s2c_query_mail_brief_list.cmd = 2315;
        s2c_query_mail_brief_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mailList != null && m.mailList.length) {
                for (var i = 0; i < m.mailList.length; ++i)
                    $root.p_mail_brief.encode(m.mailList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_mail_brief_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_mail_brief_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mailList && m.mailList.length))
                        m.mailList = [];
                    m.mailList.push($root.p_mail_brief.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_mail_brief_list;
    })();
    $root.c2s_query_mail_detail = (function() {
        function c2s_query_mail_detail(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_mail_detail.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_query_mail_detail.cmd = 2316;
        c2s_query_mail_detail.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            return w;
        };
        c2s_query_mail_detail.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_mail_detail();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_query_mail_detail;
    })();
    $root.s2c_query_mail_detail = (function() {
        function s2c_query_mail_detail(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_mail_detail.prototype.mail = null;
        s2c_query_mail_detail.cmd = 2317;
        s2c_query_mail_detail.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_mail.encode(m.mail, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_query_mail_detail.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_mail_detail();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.mail = $root.p_mail.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("mail"))
                throw $util.ProtocolError("missing required 'mail'", { instance: m });
            return m;
        };
        return s2c_query_mail_detail;
    })();
    $root.c2s_wear_equipment_request = (function() {
        function c2s_wear_equipment_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wear_equipment_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_wear_equipment_request.cmd = 2561;
        c2s_wear_equipment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_wear_equipment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wear_equipment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_wear_equipment_request;
    })();
    $root.c2s_takeoff_equipment_request = (function() {
        function c2s_takeoff_equipment_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_takeoff_equipment_request.prototype.pos = 0;
        c2s_takeoff_equipment_request.cmd = 2562;
        c2s_takeoff_equipment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            return w;
        };
        c2s_takeoff_equipment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_takeoff_equipment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            return m;
        };
        return c2s_takeoff_equipment_request;
    })();
    $root.c2s_inlay_equipment_gem_request = (function() {
        function c2s_inlay_equipment_gem_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_inlay_equipment_gem_request.prototype.pos = 0;
        c2s_inlay_equipment_gem_request.prototype.gemPos = 0;
        c2s_inlay_equipment_gem_request.prototype.gemItemId = 0;
        c2s_inlay_equipment_gem_request.prototype.gemBound = 0;
        c2s_inlay_equipment_gem_request.cmd = 2563;
        c2s_inlay_equipment_gem_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.gemPos);
            w.uint32(24).int32(m.gemItemId);
            w.uint32(32).int32(m.gemBound);
            return w;
        };
        c2s_inlay_equipment_gem_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_inlay_equipment_gem_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.gemPos = r.int32();
                    break;
                case 3:
                    m.gemItemId = r.int32();
                    break;
                case 4:
                    m.gemBound = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("gemPos"))
                throw $util.ProtocolError("missing required 'gemPos'", { instance: m });
            if (!m.hasOwnProperty("gemItemId"))
                throw $util.ProtocolError("missing required 'gemItemId'", { instance: m });
            if (!m.hasOwnProperty("gemBound"))
                throw $util.ProtocolError("missing required 'gemBound'", { instance: m });
            return m;
        };
        return c2s_inlay_equipment_gem_request;
    })();
    $root.c2s_unload_equipment_gem_request = (function() {
        function c2s_unload_equipment_gem_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_unload_equipment_gem_request.prototype.pos = 0;
        c2s_unload_equipment_gem_request.prototype.gemPos = 0;
        c2s_unload_equipment_gem_request.cmd = 2564;
        c2s_unload_equipment_gem_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.gemPos);
            return w;
        };
        c2s_unload_equipment_gem_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_unload_equipment_gem_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.gemPos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("gemPos"))
                throw $util.ProtocolError("missing required 'gemPos'", { instance: m });
            return m;
        };
        return c2s_unload_equipment_gem_request;
    })();
    $root.c2s_strength_equip_request = (function() {
        function c2s_strength_equip_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_strength_equip_request.prototype.pos = 0;
        c2s_strength_equip_request.cmd = 2565;
        c2s_strength_equip_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            return w;
        };
        c2s_strength_equip_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_strength_equip_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            return m;
        };
        return c2s_strength_equip_request;
    })();
    $root.c2s_suit_equip_request = (function() {
        function c2s_suit_equip_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_suit_equip_request.prototype.pos = 0;
        c2s_suit_equip_request.prototype.suitId = 0;
        c2s_suit_equip_request.cmd = 2566;
        c2s_suit_equip_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.suitId);
            return w;
        };
        c2s_suit_equip_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_suit_equip_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.suitId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("suitId"))
                throw $util.ProtocolError("missing required 'suitId'", { instance: m });
            return m;
        };
        return c2s_suit_equip_request;
    })();
    $root.c2s_suit_score_request = (function() {
        function c2s_suit_score_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_suit_score_request.prototype.key = 0;
        c2s_suit_score_request.cmd = 2567;
        c2s_suit_score_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.key);
            return w;
        };
        c2s_suit_score_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_suit_score_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("key"))
                throw $util.ProtocolError("missing required 'key'", { instance: m });
            return m;
        };
        return c2s_suit_score_request;
    })();
    $root.c2s_wash_equip_request = (function() {
        function c2s_wash_equip_request(p) {
            this.lockPos = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wash_equip_request.prototype.pos = 0;
        c2s_wash_equip_request.prototype.washPos = 0;
        c2s_wash_equip_request.prototype.washType = 0;
        c2s_wash_equip_request.prototype.lockPos = $util.emptyArray;
        c2s_wash_equip_request.cmd = 2568;
        c2s_wash_equip_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.washPos);
            w.uint32(24).int32(m.washType);
            if (m.lockPos != null && m.lockPos.length) {
                for (var i = 0; i < m.lockPos.length; ++i)
                    $root.p_lock_wash_pos.encode(m.lockPos[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        c2s_wash_equip_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wash_equip_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.washPos = r.int32();
                    break;
                case 3:
                    m.washType = r.int32();
                    break;
                case 4:
                    if (!(m.lockPos && m.lockPos.length))
                        m.lockPos = [];
                    m.lockPos.push($root.p_lock_wash_pos.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("washPos"))
                throw $util.ProtocolError("missing required 'washPos'", { instance: m });
            if (!m.hasOwnProperty("washType"))
                throw $util.ProtocolError("missing required 'washType'", { instance: m });
            return m;
        };
        return c2s_wash_equip_request;
    })();
    $root.c2s_wash_carve_request = (function() {
        function c2s_wash_carve_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wash_carve_request.prototype.pos = 0;
        c2s_wash_carve_request.prototype.type = 0;
        c2s_wash_carve_request.cmd = 2569;
        c2s_wash_carve_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_wash_carve_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wash_carve_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_wash_carve_request;
    })();
    $root.s2c_wash_carve_reply = (function() {
        function s2c_wash_carve_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wash_carve_reply.prototype.pos = 0;
        s2c_wash_carve_reply.prototype.wash = null;
        s2c_wash_carve_reply.prototype.res = 0;
        s2c_wash_carve_reply.cmd = 2570;
        s2c_wash_carve_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            if (m.wash != null && Object.hasOwnProperty.call(m, "wash"))
                $root.p_equip_wash.encode(m.wash, w.uint32(18).fork()).ldelim();
            w.uint32(32).int32(m.res);
            return w;
        };
        s2c_wash_carve_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wash_carve_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.wash = $root.p_equip_wash.decode(r, r.uint32());
                    break;
                case 4:
                    m.res = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("res"))
                throw $util.ProtocolError("missing required 'res'", { instance: m });
            return m;
        };
        return s2c_wash_carve_reply;
    })();
    $root.s2c_equipment_change_reply = (function() {
        function s2c_equipment_change_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equipment_change_reply.prototype.type = 0;
        s2c_equipment_change_reply.prototype.equip = null;
        s2c_equipment_change_reply.cmd = 2571;
        s2c_equipment_change_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            $root.p_equip_pos.encode(m.equip, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_equipment_change_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equipment_change_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.equip = $root.p_equip_pos.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("equip"))
                throw $util.ProtocolError("missing required 'equip'", { instance: m });
            return m;
        };
        return s2c_equipment_change_reply;
    })();
    $root.s2c_suit_score_reply = (function() {
        function s2c_suit_score_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_suit_score_reply.prototype.key = 0;
        s2c_suit_score_reply.prototype.val = 0;
        s2c_suit_score_reply.cmd = 2572;
        s2c_suit_score_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.key);
            w.uint32(16).int32(m.val);
            return w;
        };
        s2c_suit_score_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_suit_score_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.int32();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("key"))
                throw $util.ProtocolError("missing required 'key'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return s2c_suit_score_reply;
    })();
    $root.s2c_role_equip = (function() {
        function s2c_role_equip(p) {
            this.items = [];
            this.achievement = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_equip.prototype.items = $util.emptyArray;
        s2c_role_equip.prototype.washFreeNum = 0;
        s2c_role_equip.prototype.achievement = $util.emptyArray;
        s2c_role_equip.cmd = 2573;
        s2c_role_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_equip_pos.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.washFreeNum);
            if (m.achievement != null && m.achievement.length) {
                for (var i = 0; i < m.achievement.length; ++i)
                    $root.p_equip_achievement.encode(m.achievement[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_role_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_equip_pos.decode(r, r.uint32()));
                    break;
                case 2:
                    m.washFreeNum = r.int32();
                    break;
                case 3:
                    if (!(m.achievement && m.achievement.length))
                        m.achievement = [];
                    m.achievement.push($root.p_equip_achievement.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("washFreeNum"))
                throw $util.ProtocolError("missing required 'washFreeNum'", { instance: m });
            return m;
        };
        return s2c_role_equip;
    })();
    $root.c2s_query_role_equip_request = (function() {
        function c2s_query_role_equip_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_role_equip_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_query_role_equip_request.cmd = 2574;
        c2s_query_role_equip_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_query_role_equip_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_role_equip_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_query_role_equip_request;
    })();
    $root.s2c_query_role_equip_reply = (function() {
        function s2c_query_role_equip_reply(p) {
            this.roleEquip = [];
            this.achievement = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_role_equip_reply.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_role_equip_reply.prototype.roleEquip = $util.emptyArray;
        s2c_query_role_equip_reply.prototype.achievement = $util.emptyArray;
        s2c_query_role_equip_reply.cmd = 2575;
        s2c_query_role_equip_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            if (m.roleEquip != null && m.roleEquip.length) {
                for (var i = 0; i < m.roleEquip.length; ++i)
                    $root.p_equip_pos.encode(m.roleEquip[i], w.uint32(18).fork()).ldelim();
            }
            if (m.achievement != null && m.achievement.length) {
                for (var i = 0; i < m.achievement.length; ++i)
                    $root.p_equip_achievement.encode(m.achievement[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_query_role_equip_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_role_equip_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    if (!(m.roleEquip && m.roleEquip.length))
                        m.roleEquip = [];
                    m.roleEquip.push($root.p_equip_pos.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.achievement && m.achievement.length))
                        m.achievement = [];
                    m.achievement.push($root.p_equip_achievement.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return s2c_query_role_equip_reply;
    })();
    $root.s2c_equip_wash_free_num_change = (function() {
        function s2c_equip_wash_free_num_change(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_wash_free_num_change.prototype.freenum = 0;
        s2c_equip_wash_free_num_change.cmd = 2576;
        s2c_equip_wash_free_num_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.freenum);
            return w;
        };
        s2c_equip_wash_free_num_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_wash_free_num_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.freenum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("freenum"))
                throw $util.ProtocolError("missing required 'freenum'", { instance: m });
            return m;
        };
        return s2c_equip_wash_free_num_change;
    })();
    $root.s2c_equip_achievement_change = (function() {
        function s2c_equip_achievement_change(p) {
            this.achievement = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_achievement_change.prototype.achievement = $util.emptyArray;
        s2c_equip_achievement_change.cmd = 2577;
        s2c_equip_achievement_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.achievement != null && m.achievement.length) {
                for (var i = 0; i < m.achievement.length; ++i)
                    $root.p_equip_achievement.encode(m.achievement[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_equip_achievement_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_achievement_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.achievement && m.achievement.length))
                        m.achievement = [];
                    m.achievement.push($root.p_equip_achievement.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_equip_achievement_change;
    })();
    $root.s2c_equip_add_strengthen_exp = (function() {
        function s2c_equip_add_strengthen_exp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_add_strengthen_exp.prototype.type = 0;
        s2c_equip_add_strengthen_exp.prototype.addExp = 0;
        s2c_equip_add_strengthen_exp.prototype.lvUp = 0;
        s2c_equip_add_strengthen_exp.cmd = 2578;
        s2c_equip_add_strengthen_exp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.addExp);
            w.uint32(24).int32(m.lvUp);
            return w;
        };
        s2c_equip_add_strengthen_exp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_add_strengthen_exp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.addExp = r.int32();
                    break;
                case 3:
                    m.lvUp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("addExp"))
                throw $util.ProtocolError("missing required 'addExp'", { instance: m });
            if (!m.hasOwnProperty("lvUp"))
                throw $util.ProtocolError("missing required 'lvUp'", { instance: m });
            return m;
        };
        return s2c_equip_add_strengthen_exp;
    })();
    $root.s2c_equip_suit_change = (function() {
        function s2c_equip_suit_change(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_suit_change.prototype.type = 0;
        s2c_equip_suit_change.cmd = 2579;
        s2c_equip_suit_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        s2c_equip_suit_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_suit_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_equip_suit_change;
    })();
    $root.p_equip_pos = (function() {
        function p_equip_pos(p) {
            this.wash = [];
            this.suitList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_pos.prototype.pos = 0;
        p_equip_pos.prototype.item = null;
        p_equip_pos.prototype.strengthenLv = 0;
        p_equip_pos.prototype.strengthenExp = 0;
        p_equip_pos.prototype.strengthenScore = 0;
        p_equip_pos.prototype.wash = $util.emptyArray;
        p_equip_pos.prototype.washScore = 0;
        p_equip_pos.prototype.refineLev = 0;
        p_equip_pos.prototype.refineExp = 0;
        p_equip_pos.prototype.washProgressScore = 0;
        p_equip_pos.prototype.suitList = $util.emptyArray;
        p_equip_pos.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            $root.p_item.encode(m.item, w.uint32(18).fork()).ldelim();
            w.uint32(24).int32(m.strengthenLv);
            w.uint32(32).int32(m.strengthenExp);
            w.uint32(40).int32(m.strengthenScore);
            if (m.wash != null && m.wash.length) {
                for (var i = 0; i < m.wash.length; ++i)
                    $root.p_equip_wash.encode(m.wash[i], w.uint32(50).fork()).ldelim();
            }
            w.uint32(56).int32(m.washScore);
            w.uint32(64).int32(m.refineLev);
            w.uint32(72).int32(m.refineExp);
            if (m.washProgressScore != null && Object.hasOwnProperty.call(m, "washProgressScore"))
                w.uint32(80).int32(m.washProgressScore);
            if (m.suitList != null && m.suitList.length) {
                for (var i = 0; i < m.suitList.length; ++i)
                    $root.p_kv_pair.encode(m.suitList[i], w.uint32(90).fork()).ldelim();
            }
            return w;
        };
        p_equip_pos.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_pos();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.item = $root.p_item.decode(r, r.uint32());
                    break;
                case 3:
                    m.strengthenLv = r.int32();
                    break;
                case 4:
                    m.strengthenExp = r.int32();
                    break;
                case 5:
                    m.strengthenScore = r.int32();
                    break;
                case 6:
                    if (!(m.wash && m.wash.length))
                        m.wash = [];
                    m.wash.push($root.p_equip_wash.decode(r, r.uint32()));
                    break;
                case 7:
                    m.washScore = r.int32();
                    break;
                case 8:
                    m.refineLev = r.int32();
                    break;
                case 9:
                    m.refineExp = r.int32();
                    break;
                case 10:
                    m.washProgressScore = r.int32();
                    break;
                case 11:
                    if (!(m.suitList && m.suitList.length))
                        m.suitList = [];
                    m.suitList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("item"))
                throw $util.ProtocolError("missing required 'item'", { instance: m });
            if (!m.hasOwnProperty("strengthenLv"))
                throw $util.ProtocolError("missing required 'strengthenLv'", { instance: m });
            if (!m.hasOwnProperty("strengthenExp"))
                throw $util.ProtocolError("missing required 'strengthenExp'", { instance: m });
            if (!m.hasOwnProperty("strengthenScore"))
                throw $util.ProtocolError("missing required 'strengthenScore'", { instance: m });
            if (!m.hasOwnProperty("washScore"))
                throw $util.ProtocolError("missing required 'washScore'", { instance: m });
            if (!m.hasOwnProperty("refineLev"))
                throw $util.ProtocolError("missing required 'refineLev'", { instance: m });
            if (!m.hasOwnProperty("refineExp"))
                throw $util.ProtocolError("missing required 'refineExp'", { instance: m });
            return m;
        };
        return p_equip_pos;
    })();
    $root.p_lock_wash_pos = (function() {
        function p_lock_wash_pos(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_lock_wash_pos.prototype.washPos = 0;
        p_lock_wash_pos.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.washPos);
            return w;
        };
        p_lock_wash_pos.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_lock_wash_pos();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.washPos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("washPos"))
                throw $util.ProtocolError("missing required 'washPos'", { instance: m });
            return m;
        };
        return p_lock_wash_pos;
    })();
    $root.p_equip_wash = (function() {
        function p_equip_wash(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_wash.prototype.washPos = 0;
        p_equip_wash.prototype.name = "";
        p_equip_wash.prototype.val = 0;
        p_equip_wash.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.washPos);
            w.uint32(18).string(m.name);
            w.uint32(25).double(m.val);
            return w;
        };
        p_equip_wash.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_wash();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.washPos = r.int32();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.val = r.double();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("washPos"))
                throw $util.ProtocolError("missing required 'washPos'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_equip_wash;
    })();
    $root.p_equip_achievement = (function() {
        function p_equip_achievement(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_achievement.prototype.type = 0;
        p_equip_achievement.prototype.val = 0;
        p_equip_achievement.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_equip_achievement.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_achievement();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_equip_achievement;
    })();
    $root.s2c_equip_timeout = (function() {
        function s2c_equip_timeout(p) {
            this.itemId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_timeout.prototype.itemId = $util.emptyArray;
        s2c_equip_timeout.cmd = 2580;
        s2c_equip_timeout.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.itemId != null && m.itemId.length) {
                for (var i = 0; i < m.itemId.length; ++i)
                    w.uint32(8).int32(m.itemId[i]);
            }
            return w;
        };
        s2c_equip_timeout.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_timeout();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.itemId && m.itemId.length))
                        m.itemId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.itemId.push(r.int32());
                    } else
                        m.itemId.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_equip_timeout;
    })();
    $root.c2s_get_equip_score = (function() {
        function c2s_get_equip_score(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_equip_score.prototype.itemId = 0;
        c2s_get_equip_score.cmd = 2581;
        c2s_get_equip_score.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            return w;
        };
        c2s_get_equip_score.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_equip_score();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            return m;
        };
        return c2s_get_equip_score;
    })();
    $root.s2c_get_equip_score = (function() {
        function s2c_get_equip_score(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_equip_score.prototype.itemId = 0;
        s2c_get_equip_score.prototype.score = 0;
        s2c_get_equip_score.cmd = 2582;
        s2c_get_equip_score.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.score);
            return w;
        };
        s2c_get_equip_score.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_equip_score();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return s2c_get_equip_score;
    })();
    $root.c2s_refine_equipment_request = (function() {
        function c2s_refine_equipment_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_refine_equipment_request.prototype.pos = 0;
        c2s_refine_equipment_request.prototype.itemId = 0;
        c2s_refine_equipment_request.prototype.itemCount = 0;
        c2s_refine_equipment_request.cmd = 2583;
        c2s_refine_equipment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.pos);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.itemCount);
            return w;
        };
        c2s_refine_equipment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_refine_equipment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pos = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.itemCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("pos"))
                throw $util.ProtocolError("missing required 'pos'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("itemCount"))
                throw $util.ProtocolError("missing required 'itemCount'", { instance: m });
            return m;
        };
        return c2s_refine_equipment_request;
    })();
    $root.c2s_up_gem_lv_request = (function() {
        function c2s_up_gem_lv_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_up_gem_lv_request.prototype.equipPos = 0;
        c2s_up_gem_lv_request.prototype.gemPos = 0;
        c2s_up_gem_lv_request.prototype.isCostGold = 0;
        c2s_up_gem_lv_request.cmd = 2584;
        c2s_up_gem_lv_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.equipPos);
            w.uint32(16).int32(m.gemPos);
            w.uint32(24).int32(m.isCostGold);
            return w;
        };
        c2s_up_gem_lv_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_up_gem_lv_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipPos = r.int32();
                    break;
                case 2:
                    m.gemPos = r.int32();
                    break;
                case 3:
                    m.isCostGold = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("equipPos"))
                throw $util.ProtocolError("missing required 'equipPos'", { instance: m });
            if (!m.hasOwnProperty("gemPos"))
                throw $util.ProtocolError("missing required 'gemPos'", { instance: m });
            if (!m.hasOwnProperty("isCostGold"))
                throw $util.ProtocolError("missing required 'isCostGold'", { instance: m });
            return m;
        };
        return c2s_up_gem_lv_request;
    })();
    $root.c2s_destory_wear_equip = (function() {
        function c2s_destory_wear_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_destory_wear_equip.prototype.equipPos = 0;
        c2s_destory_wear_equip.cmd = 2585;
        c2s_destory_wear_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.equipPos);
            return w;
        };
        c2s_destory_wear_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_destory_wear_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipPos = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("equipPos"))
                throw $util.ProtocolError("missing required 'equipPos'", { instance: m });
            return m;
        };
        return c2s_destory_wear_equip;
    })();
    $root.c2s_timeout_item_ad_request = (function() {
        function c2s_timeout_item_ad_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_timeout_item_ad_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_timeout_item_ad_request.cmd = 2586;
        c2s_timeout_item_ad_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_timeout_item_ad_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_timeout_item_ad_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_timeout_item_ad_request;
    })();
    $root.s2c_timeout_item_ad_reply = (function() {
        function s2c_timeout_item_ad_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_timeout_item_ad_reply.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_timeout_item_ad_reply.prototype.usedTimes = 0;
        s2c_timeout_item_ad_reply.cmd = 2587;
        s2c_timeout_item_ad_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.usedTimes);
            return w;
        };
        s2c_timeout_item_ad_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_timeout_item_ad_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.usedTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("usedTimes"))
                throw $util.ProtocolError("missing required 'usedTimes'", { instance: m });
            return m;
        };
        return s2c_timeout_item_ad_reply;
    })();
    $root.c2s_timeout_item_ad_complete = (function() {
        function c2s_timeout_item_ad_complete(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_timeout_item_ad_complete.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_timeout_item_ad_complete.cmd = 2588;
        c2s_timeout_item_ad_complete.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_timeout_item_ad_complete.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_timeout_item_ad_complete();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_timeout_item_ad_complete;
    })();
    $root.friend_brief_info = (function() {
        function friend_brief_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        friend_brief_info.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        friend_brief_info.prototype.name = "";
        friend_brief_info.prototype.sex = 0;
        friend_brief_info.prototype.level = 0;
        friend_brief_info.prototype.combat = 0;
        friend_brief_info.prototype.online = 0;
        friend_brief_info.prototype.trans = 0;
        friend_brief_info.prototype.office = 0;
        friend_brief_info.prototype.image = 0;
        friend_brief_info.prototype.vip = 0;
        friend_brief_info.prototype.frame = 0;
        friend_brief_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.sex);
            w.uint32(32).int32(m.level);
            w.uint32(40).int32(m.combat);
            w.uint32(48).int32(m.online);
            w.uint32(56).int32(m.trans);
            w.uint32(64).int32(m.office);
            w.uint32(72).int32(m.image);
            w.uint32(80).int32(m.vip);
            w.uint32(88).int32(m.frame);
            return w;
        };
        friend_brief_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.friend_brief_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.sex = r.int32();
                    break;
                case 4:
                    m.level = r.int32();
                    break;
                case 5:
                    m.combat = r.int32();
                    break;
                case 6:
                    m.online = r.int32();
                    break;
                case 7:
                    m.trans = r.int32();
                    break;
                case 8:
                    m.office = r.int32();
                    break;
                case 9:
                    m.image = r.int32();
                    break;
                case 10:
                    m.vip = r.int32();
                    break;
                case 11:
                    m.frame = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("online"))
                throw $util.ProtocolError("missing required 'online'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("office"))
                throw $util.ProtocolError("missing required 'office'", { instance: m });
            if (!m.hasOwnProperty("image"))
                throw $util.ProtocolError("missing required 'image'", { instance: m });
            if (!m.hasOwnProperty("vip"))
                throw $util.ProtocolError("missing required 'vip'", { instance: m });
            if (!m.hasOwnProperty("frame"))
                throw $util.ProtocolError("missing required 'frame'", { instance: m });
            return m;
        };
        return friend_brief_info;
    })();
    $root.friend_p = (function() {
        function friend_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        friend_p.prototype.briefInfo = null;
        friend_p.prototype.isSameCity = 0;
        friend_p.prototype.friendType = 0;
        friend_p.prototype.intimacy = 0;
        friend_p.prototype.isInviteRelationship = 0;
        friend_p.prototype.group = 0;
        friend_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.friend_brief_info.encode(m.briefInfo, w.uint32(10).fork()).ldelim();
            w.uint32(16).int32(m.isSameCity);
            w.uint32(24).int32(m.friendType);
            w.uint32(32).int32(m.intimacy);
            w.uint32(40).int32(m.isInviteRelationship);
            w.uint32(48).int32(m.group);
            return w;
        };
        friend_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.friend_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.briefInfo = $root.friend_brief_info.decode(r, r.uint32());
                    break;
                case 2:
                    m.isSameCity = r.int32();
                    break;
                case 3:
                    m.friendType = r.int32();
                    break;
                case 4:
                    m.intimacy = r.int32();
                    break;
                case 5:
                    m.isInviteRelationship = r.int32();
                    break;
                case 6:
                    m.group = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("briefInfo"))
                throw $util.ProtocolError("missing required 'briefInfo'", { instance: m });
            if (!m.hasOwnProperty("isSameCity"))
                throw $util.ProtocolError("missing required 'isSameCity'", { instance: m });
            if (!m.hasOwnProperty("friendType"))
                throw $util.ProtocolError("missing required 'friendType'", { instance: m });
            if (!m.hasOwnProperty("intimacy"))
                throw $util.ProtocolError("missing required 'intimacy'", { instance: m });
            if (!m.hasOwnProperty("isInviteRelationship"))
                throw $util.ProtocolError("missing required 'isInviteRelationship'", { instance: m });
            if (!m.hasOwnProperty("group"))
                throw $util.ProtocolError("missing required 'group'", { instance: m });
            return m;
        };
        return friend_p;
    })();
    $root.c2s_list_friend_request = (function() {
        function c2s_list_friend_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_list_friend_request.cmd = 2817;
        c2s_list_friend_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_list_friend_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_list_friend_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_list_friend_request;
    })();
    $root.s2c_list_friend_reply = (function() {
        function s2c_list_friend_reply(p) {
            this.friends = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_list_friend_reply.prototype.friends = $util.emptyArray;
        s2c_list_friend_reply.cmd = 2818;
        s2c_list_friend_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.friends != null && m.friends.length) {
                for (var i = 0; i < m.friends.length; ++i)
                    $root.friend_p.encode(m.friends[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_list_friend_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_list_friend_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.friends && m.friends.length))
                        m.friends = [];
                    m.friends.push($root.friend_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_list_friend_reply;
    })();
    $root.c2s_list_request_request = (function() {
        function c2s_list_request_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_list_request_request.cmd = 2819;
        c2s_list_request_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_list_request_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_list_request_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_list_request_request;
    })();
    $root.s2c_list_request_reply = (function() {
        function s2c_list_request_reply(p) {
            this.briefInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_list_request_reply.prototype.briefInfo = $util.emptyArray;
        s2c_list_request_reply.cmd = 2820;
        s2c_list_request_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.briefInfo != null && m.briefInfo.length) {
                for (var i = 0; i < m.briefInfo.length; ++i)
                    $root.friend_brief_info.encode(m.briefInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_list_request_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_list_request_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.briefInfo && m.briefInfo.length))
                        m.briefInfo = [];
                    m.briefInfo.push($root.friend_brief_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_list_request_reply;
    })();
    $root.c2s_list_search_request = (function() {
        function c2s_list_search_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_list_search_request.prototype.idOrName = "";
        c2s_list_search_request.cmd = 2821;
        c2s_list_search_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.idOrName);
            return w;
        };
        c2s_list_search_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_list_search_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.idOrName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("idOrName"))
                throw $util.ProtocolError("missing required 'idOrName'", { instance: m });
            return m;
        };
        return c2s_list_search_request;
    })();
    $root.s2c_list_search_reply = (function() {
        function s2c_list_search_reply(p) {
            this.briefInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_list_search_reply.prototype.briefInfo = $util.emptyArray;
        s2c_list_search_reply.cmd = 2822;
        s2c_list_search_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.briefInfo != null && m.briefInfo.length) {
                for (var i = 0; i < m.briefInfo.length; ++i)
                    $root.friend_brief_info.encode(m.briefInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_list_search_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_list_search_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.briefInfo && m.briefInfo.length))
                        m.briefInfo = [];
                    m.briefInfo.push($root.friend_brief_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_list_search_reply;
    })();
    $root.c2s_apply_friend_request = (function() {
        function c2s_apply_friend_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_apply_friend_request.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_apply_friend_request.prototype.verifyMessage = "";
        c2s_apply_friend_request.cmd = 2823;
        c2s_apply_friend_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            w.uint32(18).string(m.verifyMessage);
            return w;
        };
        c2s_apply_friend_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_apply_friend_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                case 2:
                    m.verifyMessage = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            if (!m.hasOwnProperty("verifyMessage"))
                throw $util.ProtocolError("missing required 'verifyMessage'", { instance: m });
            return m;
        };
        return c2s_apply_friend_request;
    })();
    $root.s2c_apply_friend_reply = (function() {
        function s2c_apply_friend_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_apply_friend_reply.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_apply_friend_reply.cmd = 2824;
        s2c_apply_friend_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            return w;
        };
        s2c_apply_friend_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_apply_friend_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            return m;
        };
        return s2c_apply_friend_reply;
    })();
    $root.s2c_apply_friend_notify = (function() {
        function s2c_apply_friend_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_apply_friend_notify.prototype.briefInfo = null;
        s2c_apply_friend_notify.cmd = 2825;
        s2c_apply_friend_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.friend_brief_info.encode(m.briefInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_apply_friend_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_apply_friend_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.briefInfo = $root.friend_brief_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("briefInfo"))
                throw $util.ProtocolError("missing required 'briefInfo'", { instance: m });
            return m;
        };
        return s2c_apply_friend_notify;
    })();
    $root.c2s_add_friend_request = (function() {
        function c2s_add_friend_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_add_friend_request.prototype.result = 0;
        c2s_add_friend_request.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_add_friend_request.cmd = 2826;
        c2s_add_friend_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.result);
            w.uint32(16).int64(m.friendId);
            return w;
        };
        c2s_add_friend_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_add_friend_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.result = r.int32();
                    break;
                case 2:
                    m.friendId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            return m;
        };
        return c2s_add_friend_request;
    })();
    $root.s2c_add_friend_reply = (function() {
        function s2c_add_friend_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_friend_reply.prototype.result = 0;
        s2c_add_friend_reply.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_add_friend_reply.cmd = 2827;
        s2c_add_friend_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.result);
            w.uint32(16).int64(m.friendId);
            return w;
        };
        s2c_add_friend_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_friend_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.result = r.int32();
                    break;
                case 2:
                    m.friendId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            return m;
        };
        return s2c_add_friend_reply;
    })();
    $root.s2c_add_friend_notify = (function() {
        function s2c_add_friend_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_friend_notify.prototype.friend = null;
        s2c_add_friend_notify.cmd = 2828;
        s2c_add_friend_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.friend_p.encode(m.friend, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_add_friend_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_friend_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friend = $root.friend_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friend"))
                throw $util.ProtocolError("missing required 'friend'", { instance: m });
            return m;
        };
        return s2c_add_friend_notify;
    })();
    $root.c2s_clear_reply_request = (function() {
        function c2s_clear_reply_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_clear_reply_request.cmd = 2829;
        c2s_clear_reply_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_clear_reply_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_clear_reply_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_clear_reply_request;
    })();
    $root.c2s_delete_friend_request = (function() {
        function c2s_delete_friend_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_delete_friend_request.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_delete_friend_request.cmd = 2830;
        c2s_delete_friend_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            return w;
        };
        c2s_delete_friend_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_delete_friend_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            return m;
        };
        return c2s_delete_friend_request;
    })();
    $root.s2c_delete_friend_reply = (function() {
        function s2c_delete_friend_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_delete_friend_reply.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_delete_friend_reply.cmd = 2831;
        s2c_delete_friend_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            return w;
        };
        s2c_delete_friend_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_delete_friend_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            return m;
        };
        return s2c_delete_friend_reply;
    })();
    $root.s2c_delete_friend_notify = (function() {
        function s2c_delete_friend_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_delete_friend_notify.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_delete_friend_notify.cmd = 2832;
        s2c_delete_friend_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            return w;
        };
        s2c_delete_friend_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_delete_friend_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            return m;
        };
        return s2c_delete_friend_notify;
    })();
    $root.c2s_add_black_request = (function() {
        function c2s_add_black_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_add_black_request.prototype.blackId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_add_black_request.cmd = 2833;
        c2s_add_black_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.blackId);
            return w;
        };
        c2s_add_black_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_add_black_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.blackId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("blackId"))
                throw $util.ProtocolError("missing required 'blackId'", { instance: m });
            return m;
        };
        return c2s_add_black_request;
    })();
    $root.s2c_add_black_reply = (function() {
        function s2c_add_black_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_black_reply.prototype.black = null;
        s2c_add_black_reply.cmd = 2834;
        s2c_add_black_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.friend_p.encode(m.black, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_add_black_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_black_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.black = $root.friend_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("black"))
                throw $util.ProtocolError("missing required 'black'", { instance: m });
            return m;
        };
        return s2c_add_black_reply;
    })();
    $root.c2s_delete_black_request = (function() {
        function c2s_delete_black_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_delete_black_request.prototype.blackId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_delete_black_request.cmd = 2835;
        c2s_delete_black_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.blackId);
            return w;
        };
        c2s_delete_black_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_delete_black_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.blackId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("blackId"))
                throw $util.ProtocolError("missing required 'blackId'", { instance: m });
            return m;
        };
        return c2s_delete_black_request;
    })();
    $root.s2c_delete_black_reply = (function() {
        function s2c_delete_black_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_delete_black_reply.prototype.blackId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_delete_black_reply.cmd = 2836;
        s2c_delete_black_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.blackId);
            return w;
        };
        s2c_delete_black_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_delete_black_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.blackId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("blackId"))
                throw $util.ProtocolError("missing required 'blackId'", { instance: m });
            return m;
        };
        return s2c_delete_black_reply;
    })();
    $root.c2s_list_recent_request = (function() {
        function c2s_list_recent_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_list_recent_request.cmd = 2837;
        c2s_list_recent_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_list_recent_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_list_recent_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_list_recent_request;
    })();
    $root.s2c_list_recent_reply = (function() {
        function s2c_list_recent_reply(p) {
            this.briefInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_list_recent_reply.prototype.briefInfo = $util.emptyArray;
        s2c_list_recent_reply.cmd = 2838;
        s2c_list_recent_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.briefInfo != null && m.briefInfo.length) {
                for (var i = 0; i < m.briefInfo.length; ++i)
                    $root.friend_brief_info.encode(m.briefInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_list_recent_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_list_recent_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.briefInfo && m.briefInfo.length))
                        m.briefInfo = [];
                    m.briefInfo.push($root.friend_brief_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_list_recent_reply;
    })();
    $root.c2s_delete_recent_request = (function() {
        function c2s_delete_recent_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_delete_recent_request.prototype.opposite = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_delete_recent_request.cmd = 2839;
        c2s_delete_recent_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.opposite);
            return w;
        };
        c2s_delete_recent_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_delete_recent_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opposite = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("opposite"))
                throw $util.ProtocolError("missing required 'opposite'", { instance: m });
            return m;
        };
        return c2s_delete_recent_request;
    })();
    $root.c2s_friend_chat_request = (function() {
        function c2s_friend_chat_request(p) {
            this.contents = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_friend_chat_request.prototype.opposite = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_friend_chat_request.prototype.contents = $util.emptyArray;
        c2s_friend_chat_request.cmd = 2840;
        c2s_friend_chat_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.opposite);
            if (m.contents != null && m.contents.length) {
                for (var i = 0; i < m.contents.length; ++i)
                    $root.p_chat_section.encode(m.contents[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        c2s_friend_chat_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_friend_chat_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opposite = r.int64();
                    break;
                case 2:
                    if (!(m.contents && m.contents.length))
                        m.contents = [];
                    m.contents.push($root.p_chat_section.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("opposite"))
                throw $util.ProtocolError("missing required 'opposite'", { instance: m });
            return m;
        };
        return c2s_friend_chat_request;
    })();
    $root.s2c_friend_chat_notify = (function() {
        function s2c_friend_chat_notify(p) {
            this.contents = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_friend_chat_notify.prototype.opposite = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_friend_chat_notify.prototype.self = 0;
        s2c_friend_chat_notify.prototype.sendTime = 0;
        s2c_friend_chat_notify.prototype.briefInfo = null;
        s2c_friend_chat_notify.prototype.contents = $util.emptyArray;
        s2c_friend_chat_notify.prototype.bubbleImage = 0;
        s2c_friend_chat_notify.prototype.frameImage = 0;
        s2c_friend_chat_notify.prototype.headImage = 0;
        s2c_friend_chat_notify.cmd = 2841;
        s2c_friend_chat_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.opposite);
            w.uint32(16).int32(m.self);
            w.uint32(24).int32(m.sendTime);
            $root.friend_brief_info.encode(m.briefInfo, w.uint32(34).fork()).ldelim();
            if (m.contents != null && m.contents.length) {
                for (var i = 0; i < m.contents.length; ++i)
                    $root.p_chat_section.encode(m.contents[i], w.uint32(42).fork()).ldelim();
            }
            w.uint32(48).int32(m.bubbleImage);
            w.uint32(56).int32(m.frameImage);
            if (m.headImage != null && Object.hasOwnProperty.call(m, "headImage"))
                w.uint32(64).int32(m.headImage);
            return w;
        };
        s2c_friend_chat_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_friend_chat_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opposite = r.int64();
                    break;
                case 2:
                    m.self = r.int32();
                    break;
                case 3:
                    m.sendTime = r.int32();
                    break;
                case 4:
                    m.briefInfo = $root.friend_brief_info.decode(r, r.uint32());
                    break;
                case 5:
                    if (!(m.contents && m.contents.length))
                        m.contents = [];
                    m.contents.push($root.p_chat_section.decode(r, r.uint32()));
                    break;
                case 6:
                    m.bubbleImage = r.int32();
                    break;
                case 7:
                    m.frameImage = r.int32();
                    break;
                case 8:
                    m.headImage = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("opposite"))
                throw $util.ProtocolError("missing required 'opposite'", { instance: m });
            if (!m.hasOwnProperty("self"))
                throw $util.ProtocolError("missing required 'self'", { instance: m });
            if (!m.hasOwnProperty("sendTime"))
                throw $util.ProtocolError("missing required 'sendTime'", { instance: m });
            if (!m.hasOwnProperty("briefInfo"))
                throw $util.ProtocolError("missing required 'briefInfo'", { instance: m });
            if (!m.hasOwnProperty("bubbleImage"))
                throw $util.ProtocolError("missing required 'bubbleImage'", { instance: m });
            if (!m.hasOwnProperty("frameImage"))
                throw $util.ProtocolError("missing required 'frameImage'", { instance: m });
            return m;
        };
        return s2c_friend_chat_notify;
    })();
    $root.s2c_intimacy_added_notify = (function() {
        function s2c_intimacy_added_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_intimacy_added_notify.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_intimacy_added_notify.prototype.intimacy = 0;
        s2c_intimacy_added_notify.prototype.anonymity = 0;
        s2c_intimacy_added_notify.cmd = 2842;
        s2c_intimacy_added_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            w.uint32(16).int32(m.intimacy);
            w.uint32(24).int32(m.anonymity);
            return w;
        };
        s2c_intimacy_added_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_intimacy_added_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                case 2:
                    m.intimacy = r.int32();
                    break;
                case 3:
                    m.anonymity = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            if (!m.hasOwnProperty("intimacy"))
                throw $util.ProtocolError("missing required 'intimacy'", { instance: m });
            if (!m.hasOwnProperty("anonymity"))
                throw $util.ProtocolError("missing required 'anonymity'", { instance: m });
            return m;
        };
        return s2c_intimacy_added_notify;
    })();
    $root.c2s_present_flower = (function() {
        function c2s_present_flower(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_present_flower.prototype.targetId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_present_flower.prototype.itemId = 0;
        c2s_present_flower.prototype.count = 0;
        c2s_present_flower.prototype.anonymity = 0;
        c2s_present_flower.prototype.targetName = "";
        c2s_present_flower.cmd = 2843;
        c2s_present_flower.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.targetId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.count);
            w.uint32(32).int32(m.anonymity);
            if (m.targetName != null && Object.hasOwnProperty.call(m, "targetName"))
                w.uint32(42).string(m.targetName);
            return w;
        };
        c2s_present_flower.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_present_flower();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetId = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.count = r.int32();
                    break;
                case 4:
                    m.anonymity = r.int32();
                    break;
                case 5:
                    m.targetName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("anonymity"))
                throw $util.ProtocolError("missing required 'anonymity'", { instance: m });
            return m;
        };
        return c2s_present_flower;
    })();
    $root.s2c_present_flower_notify = (function() {
        function s2c_present_flower_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_present_flower_notify.prototype.presentId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_present_flower_notify.prototype.targetId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_present_flower_notify.prototype.itemId = 0;
        s2c_present_flower_notify.prototype.count = 0;
        s2c_present_flower_notify.prototype.anonymity = 0;
        s2c_present_flower_notify.prototype.presentName = "";
        s2c_present_flower_notify.prototype.targetName = "";
        s2c_present_flower_notify.cmd = 2844;
        s2c_present_flower_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.presentId);
            w.uint32(16).int64(m.targetId);
            w.uint32(24).int32(m.itemId);
            w.uint32(32).int32(m.count);
            w.uint32(40).int32(m.anonymity);
            w.uint32(50).string(m.presentName);
            w.uint32(58).string(m.targetName);
            return w;
        };
        s2c_present_flower_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_present_flower_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.presentId = r.int64();
                    break;
                case 2:
                    m.targetId = r.int64();
                    break;
                case 3:
                    m.itemId = r.int32();
                    break;
                case 4:
                    m.count = r.int32();
                    break;
                case 5:
                    m.anonymity = r.int32();
                    break;
                case 6:
                    m.presentName = r.string();
                    break;
                case 7:
                    m.targetName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("presentId"))
                throw $util.ProtocolError("missing required 'presentId'", { instance: m });
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("anonymity"))
                throw $util.ProtocolError("missing required 'anonymity'", { instance: m });
            if (!m.hasOwnProperty("presentName"))
                throw $util.ProtocolError("missing required 'presentName'", { instance: m });
            if (!m.hasOwnProperty("targetName"))
                throw $util.ProtocolError("missing required 'targetName'", { instance: m });
            return m;
        };
        return s2c_present_flower_notify;
    })();
    $root.s2c_friend_online_notify = (function() {
        function s2c_friend_online_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_friend_online_notify.prototype.friendId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_friend_online_notify.prototype.online = 0;
        s2c_friend_online_notify.cmd = 2845;
        s2c_friend_online_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.friendId);
            w.uint32(16).int32(m.online);
            return w;
        };
        s2c_friend_online_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_friend_online_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.friendId = r.int64();
                    break;
                case 2:
                    m.online = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("friendId"))
                throw $util.ProtocolError("missing required 'friendId'", { instance: m });
            if (!m.hasOwnProperty("online"))
                throw $util.ProtocolError("missing required 'online'", { instance: m });
            return m;
        };
        return s2c_friend_online_notify;
    })();
    $root.s2c_friend_up_data = (function() {
        function s2c_friend_up_data(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_friend_up_data.prototype.briefInfo = null;
        s2c_friend_up_data.cmd = 2846;
        s2c_friend_up_data.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.friend_brief_info.encode(m.briefInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_friend_up_data.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_friend_up_data();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.briefInfo = $root.friend_brief_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("briefInfo"))
                throw $util.ProtocolError("missing required 'briefInfo'", { instance: m });
            return m;
        };
        return s2c_friend_up_data;
    })();
    $root.p_team_member = (function() {
        function p_team_member(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_team_member.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_team_member.prototype.trans = 0;
        p_team_member.prototype.level = 0;
        p_team_member.prototype.name = "";
        p_team_member.prototype.sex = 0;
        p_team_member.prototype.vip = 0;
        p_team_member.prototype.sceneId = 0;
        p_team_member.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(32).int32(m.trans);
            w.uint32(40).int32(m.level);
            w.uint32(50).string(m.name);
            w.uint32(56).int32(m.sex);
            w.uint32(64).int32(m.vip);
            w.uint32(72).int32(m.sceneId);
            return w;
        };
        p_team_member.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_team_member();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 4:
                    m.trans = r.int32();
                    break;
                case 5:
                    m.level = r.int32();
                    break;
                case 6:
                    m.name = r.string();
                    break;
                case 7:
                    m.sex = r.int32();
                    break;
                case 8:
                    m.vip = r.int32();
                    break;
                case 9:
                    m.sceneId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("vip"))
                throw $util.ProtocolError("missing required 'vip'", { instance: m });
            if (!m.hasOwnProperty("sceneId"))
                throw $util.ProtocolError("missing required 'sceneId'", { instance: m });
            return m;
        };
        return p_team_member;
    })();
    $root.p_team = (function() {
        function p_team(p) {
            this.members = [];
            this.instanceAgreeList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_team.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_team.prototype.leader = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_team.prototype.target = 0;
        p_team.prototype.members = $util.emptyArray;
        p_team.prototype.isAutomMatch = 0;
        p_team.prototype.instanceAgreeList = $util.emptyArray;
        p_team.prototype.minLev = 0;
        p_team.prototype.maxLev = 0;
        p_team.prototype.autoRecv = 0;
        p_team.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int64(m.leader);
            w.uint32(24).int32(m.target);
            if (m.members != null && m.members.length) {
                for (var i = 0; i < m.members.length; ++i)
                    $root.p_team_member.encode(m.members[i], w.uint32(42).fork()).ldelim();
            }
            if (m.isAutomMatch != null && Object.hasOwnProperty.call(m, "isAutomMatch"))
                w.uint32(48).int32(m.isAutomMatch);
            if (m.instanceAgreeList != null && m.instanceAgreeList.length) {
                for (var i = 0; i < m.instanceAgreeList.length; ++i)
                    w.uint32(56).int64(m.instanceAgreeList[i]);
            }
            w.uint32(64).int32(m.minLev);
            w.uint32(72).int32(m.maxLev);
            w.uint32(80).int32(m.autoRecv);
            return w;
        };
        p_team.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_team();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.leader = r.int64();
                    break;
                case 3:
                    m.target = r.int32();
                    break;
                case 5:
                    if (!(m.members && m.members.length))
                        m.members = [];
                    m.members.push($root.p_team_member.decode(r, r.uint32()));
                    break;
                case 6:
                    m.isAutomMatch = r.int32();
                    break;
                case 7:
                    if (!(m.instanceAgreeList && m.instanceAgreeList.length))
                        m.instanceAgreeList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.instanceAgreeList.push(r.int64());
                    } else
                        m.instanceAgreeList.push(r.int64());
                    break;
                case 8:
                    m.minLev = r.int32();
                    break;
                case 9:
                    m.maxLev = r.int32();
                    break;
                case 10:
                    m.autoRecv = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("leader"))
                throw $util.ProtocolError("missing required 'leader'", { instance: m });
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            if (!m.hasOwnProperty("minLev"))
                throw $util.ProtocolError("missing required 'minLev'", { instance: m });
            if (!m.hasOwnProperty("maxLev"))
                throw $util.ProtocolError("missing required 'maxLev'", { instance: m });
            if (!m.hasOwnProperty("autoRecv"))
                throw $util.ProtocolError("missing required 'autoRecv'", { instance: m });
            return m;
        };
        return p_team;
    })();
    $root.p_team_applicant = (function() {
        function p_team_applicant(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_team_applicant.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_team_applicant.prototype.name = "";
        p_team_applicant.prototype.trans = 0;
        p_team_applicant.prototype.level = 0;
        p_team_applicant.prototype.sex = 0;
        p_team_applicant.prototype.vip = 0;
        p_team_applicant.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.trans);
            w.uint32(32).int32(m.level);
            w.uint32(40).int32(m.sex);
            w.uint32(48).int32(m.vip);
            return w;
        };
        p_team_applicant.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_team_applicant();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.trans = r.int32();
                    break;
                case 4:
                    m.level = r.int32();
                    break;
                case 5:
                    m.sex = r.int32();
                    break;
                case 6:
                    m.vip = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("vip"))
                throw $util.ProtocolError("missing required 'vip'", { instance: m });
            return m;
        };
        return p_team_applicant;
    })();
    $root.s2c_team_info_notify = (function() {
        function s2c_team_info_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_team_info_notify.prototype.team = null;
        s2c_team_info_notify.cmd = 3329;
        s2c_team_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_team.encode(m.team, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_team_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_team_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.team = $root.p_team.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("team"))
                throw $util.ProtocolError("missing required 'team'", { instance: m });
            return m;
        };
        return s2c_team_info_notify;
    })();
    $root.c2s_query_team_info_request = (function() {
        function c2s_query_team_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_team_info_request.cmd = 3330;
        c2s_query_team_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_team_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_team_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_team_info_request;
    })();
    $root.c2s_select_team_request = (function() {
        function c2s_select_team_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_select_team_request.prototype.target = 0;
        c2s_select_team_request.cmd = 3331;
        c2s_select_team_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.target);
            return w;
        };
        c2s_select_team_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_select_team_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.target = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            return m;
        };
        return c2s_select_team_request;
    })();
    $root.s2c_select_team_reply = (function() {
        function s2c_select_team_reply(p) {
            this.list = [];
            this.appliedTeams = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_select_team_reply.prototype.target = 0;
        s2c_select_team_reply.prototype.list = $util.emptyArray;
        s2c_select_team_reply.prototype.appliedTeams = $util.emptyArray;
        s2c_select_team_reply.cmd = 3332;
        s2c_select_team_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.target);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_team.encode(m.list[i], w.uint32(18).fork()).ldelim();
            }
            if (m.appliedTeams != null && m.appliedTeams.length) {
                for (var i = 0; i < m.appliedTeams.length; ++i)
                    w.uint32(24).int64(m.appliedTeams[i]);
            }
            return w;
        };
        s2c_select_team_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_select_team_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.target = r.int32();
                    break;
                case 2:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_team.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.appliedTeams && m.appliedTeams.length))
                        m.appliedTeams = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.appliedTeams.push(r.int64());
                    } else
                        m.appliedTeams.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            return m;
        };
        return s2c_select_team_reply;
    })();
    $root.c2s_apply_team_request = (function() {
        function c2s_apply_team_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_apply_team_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_apply_team_request.cmd = 3333;
        c2s_apply_team_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            return w;
        };
        c2s_apply_team_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_apply_team_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return c2s_apply_team_request;
    })();
    $root.s2c_add_applicant_notify = (function() {
        function s2c_add_applicant_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_applicant_notify.prototype.applicant = null;
        s2c_add_applicant_notify.cmd = 3334;
        s2c_add_applicant_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_team_applicant.encode(m.applicant, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_add_applicant_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_applicant_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.applicant = $root.p_team_applicant.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("applicant"))
                throw $util.ProtocolError("missing required 'applicant'", { instance: m });
            return m;
        };
        return s2c_add_applicant_notify;
    })();
    $root.c2s_auto_join_team_request = (function() {
        function c2s_auto_join_team_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_auto_join_team_request.prototype.target = 0;
        c2s_auto_join_team_request.cmd = 3335;
        c2s_auto_join_team_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.target);
            return w;
        };
        c2s_auto_join_team_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_auto_join_team_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.target = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            return m;
        };
        return c2s_auto_join_team_request;
    })();
    $root.c2s_team_apply_list_request = (function() {
        function c2s_team_apply_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_team_apply_list_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_team_apply_list_request.cmd = 3336;
        c2s_team_apply_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            return w;
        };
        c2s_team_apply_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_team_apply_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return c2s_team_apply_list_request;
    })();
    $root.s2c_team_apply_list_reply = (function() {
        function s2c_team_apply_list_reply(p) {
            this.applicants = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_team_apply_list_reply.prototype.applicants = $util.emptyArray;
        s2c_team_apply_list_reply.cmd = 3337;
        s2c_team_apply_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.applicants != null && m.applicants.length) {
                for (var i = 0; i < m.applicants.length; ++i)
                    $root.p_team_applicant.encode(m.applicants[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_team_apply_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_team_apply_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.applicants && m.applicants.length))
                        m.applicants = [];
                    m.applicants.push($root.p_team_applicant.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_team_apply_list_reply;
    })();
    $root.c2s_clean_team_apply_list_request = (function() {
        function c2s_clean_team_apply_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_clean_team_apply_list_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_clean_team_apply_list_request.cmd = 3338;
        c2s_clean_team_apply_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            return w;
        };
        c2s_clean_team_apply_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_clean_team_apply_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return c2s_clean_team_apply_list_request;
    })();
    $root.c2s_audit_team_apply_request = (function() {
        function c2s_audit_team_apply_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_audit_team_apply_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_audit_team_apply_request.prototype.applicantId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_audit_team_apply_request.prototype.accept = 0;
        c2s_audit_team_apply_request.cmd = 3339;
        c2s_audit_team_apply_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            w.uint32(16).int64(m.applicantId);
            w.uint32(24).int32(m.accept);
            return w;
        };
        c2s_audit_team_apply_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_audit_team_apply_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                case 2:
                    m.applicantId = r.int64();
                    break;
                case 3:
                    m.accept = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("applicantId"))
                throw $util.ProtocolError("missing required 'applicantId'", { instance: m });
            if (!m.hasOwnProperty("accept"))
                throw $util.ProtocolError("missing required 'accept'", { instance: m });
            return m;
        };
        return c2s_audit_team_apply_request;
    })();
    $root.s2c_add_team_member_notify = (function() {
        function s2c_add_team_member_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_team_member_notify.prototype.memberId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_add_team_member_notify.prototype.name = "";
        s2c_add_team_member_notify.cmd = 3340;
        s2c_add_team_member_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.memberId);
            w.uint32(18).string(m.name);
            return w;
        };
        s2c_add_team_member_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_team_member_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.memberId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            return m;
        };
        return s2c_add_team_member_notify;
    })();
    $root.c2s_fire_team_member_request = (function() {
        function c2s_fire_team_member_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fire_team_member_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_fire_team_member_request.prototype.memberId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_fire_team_member_request.cmd = 3341;
        c2s_fire_team_member_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            w.uint32(16).int64(m.memberId);
            return w;
        };
        c2s_fire_team_member_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fire_team_member_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                case 2:
                    m.memberId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            return m;
        };
        return c2s_fire_team_member_request;
    })();
    $root.c2s_leave_team_request = (function() {
        function c2s_leave_team_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_team_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_leave_team_request.cmd = 3342;
        c2s_leave_team_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            return w;
        };
        c2s_leave_team_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_team_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return c2s_leave_team_request;
    })();
    $root.s2c_leave_team_notify = (function() {
        function s2c_leave_team_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_leave_team_notify.cmd = 3343;
        s2c_leave_team_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_leave_team_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_leave_team_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_leave_team_notify;
    })();
    $root.c2s_transfer_leader_request = (function() {
        function c2s_transfer_leader_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_transfer_leader_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_transfer_leader_request.prototype.memberId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_transfer_leader_request.cmd = 3344;
        c2s_transfer_leader_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            w.uint32(16).int64(m.memberId);
            return w;
        };
        c2s_transfer_leader_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_transfer_leader_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                case 2:
                    m.memberId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            return m;
        };
        return c2s_transfer_leader_request;
    })();
    $root.c2s_invite_team_member_request = (function() {
        function c2s_invite_team_member_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_invite_team_member_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_invite_team_member_request.prototype.targetInfo = null;
        c2s_invite_team_member_request.cmd = 3345;
        c2s_invite_team_member_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            $root.team_match_info.encode(m.targetInfo, w.uint32(18).fork()).ldelim();
            return w;
        };
        c2s_invite_team_member_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_invite_team_member_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.targetInfo = $root.team_match_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("targetInfo"))
                throw $util.ProtocolError("missing required 'targetInfo'", { instance: m });
            return m;
        };
        return c2s_invite_team_member_request;
    })();
    $root.s2c_be_invited_notify = (function() {
        function s2c_be_invited_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_be_invited_notify.prototype.leaderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_be_invited_notify.prototype.leaderName = "";
        s2c_be_invited_notify.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_be_invited_notify.prototype.level = 0;
        s2c_be_invited_notify.prototype.trans = 0;
        s2c_be_invited_notify.prototype.vip = 0;
        s2c_be_invited_notify.prototype.target = 0;
        s2c_be_invited_notify.cmd = 3346;
        s2c_be_invited_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.leaderId);
            w.uint32(18).string(m.leaderName);
            w.uint32(24).int64(m.teamId);
            w.uint32(32).int32(m.level);
            w.uint32(40).int32(m.trans);
            w.uint32(48).int32(m.vip);
            w.uint32(56).int32(m.target);
            return w;
        };
        s2c_be_invited_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_be_invited_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.leaderId = r.int64();
                    break;
                case 2:
                    m.leaderName = r.string();
                    break;
                case 3:
                    m.teamId = r.int64();
                    break;
                case 4:
                    m.level = r.int32();
                    break;
                case 5:
                    m.trans = r.int32();
                    break;
                case 6:
                    m.vip = r.int32();
                    break;
                case 7:
                    m.target = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("leaderId"))
                throw $util.ProtocolError("missing required 'leaderId'", { instance: m });
            if (!m.hasOwnProperty("leaderName"))
                throw $util.ProtocolError("missing required 'leaderName'", { instance: m });
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            if (!m.hasOwnProperty("vip"))
                throw $util.ProtocolError("missing required 'vip'", { instance: m });
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            return m;
        };
        return s2c_be_invited_notify;
    })();
    $root.c2s_answer_team_invitation_request = (function() {
        function c2s_answer_team_invitation_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_answer_team_invitation_request.prototype.leaderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_answer_team_invitation_request.prototype.accept = 0;
        c2s_answer_team_invitation_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_answer_team_invitation_request.cmd = 3347;
        c2s_answer_team_invitation_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.leaderId);
            w.uint32(16).int32(m.accept);
            w.uint32(24).int64(m.teamId);
            return w;
        };
        c2s_answer_team_invitation_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_answer_team_invitation_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.leaderId = r.int64();
                    break;
                case 2:
                    m.accept = r.int32();
                    break;
                case 3:
                    m.teamId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("leaderId"))
                throw $util.ProtocolError("missing required 'leaderId'", { instance: m });
            if (!m.hasOwnProperty("accept"))
                throw $util.ProtocolError("missing required 'accept'", { instance: m });
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return c2s_answer_team_invitation_request;
    })();
    $root.c2s_team_enlist_request = (function() {
        function c2s_team_enlist_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_team_enlist_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_team_enlist_request.prototype.content = "";
        c2s_team_enlist_request.cmd = 3348;
        c2s_team_enlist_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            w.uint32(18).string(m.content);
            return w;
        };
        c2s_team_enlist_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_team_enlist_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                case 2:
                    m.content = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("content"))
                throw $util.ProtocolError("missing required 'content'", { instance: m });
            return m;
        };
        return c2s_team_enlist_request;
    })();
    $root.c2s_query_auto_match_status = (function() {
        function c2s_query_auto_match_status(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_auto_match_status.cmd = 3349;
        c2s_query_auto_match_status.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_auto_match_status.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_auto_match_status();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_auto_match_status;
    })();
    $root.s2c_auto_match_status_notify = (function() {
        function s2c_auto_match_status_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_auto_match_status_notify.prototype.matchStatus = 0;
        s2c_auto_match_status_notify.cmd = 3350;
        s2c_auto_match_status_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.matchStatus);
            return w;
        };
        s2c_auto_match_status_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_auto_match_status_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.matchStatus = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("matchStatus"))
                throw $util.ProtocolError("missing required 'matchStatus'", { instance: m });
            return m;
        };
        return s2c_auto_match_status_notify;
    })();
    $root.s2c_team_leader_changed_notify = (function() {
        function s2c_team_leader_changed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_team_leader_changed_notify.prototype.leaderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_team_leader_changed_notify.prototype.name = "";
        s2c_team_leader_changed_notify.cmd = 3351;
        s2c_team_leader_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.leaderId);
            w.uint32(18).string(m.name);
            return w;
        };
        s2c_team_leader_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_team_leader_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.leaderId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("leaderId"))
                throw $util.ProtocolError("missing required 'leaderId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            return m;
        };
        return s2c_team_leader_changed_notify;
    })();
    $root.s2c_team_member_leaved_notify = (function() {
        function s2c_team_member_leaved_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_team_member_leaved_notify.prototype.memberId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_team_member_leaved_notify.prototype.name = "";
        s2c_team_member_leaved_notify.cmd = 3352;
        s2c_team_member_leaved_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.memberId);
            w.uint32(18).string(m.name);
            return w;
        };
        s2c_team_member_leaved_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_team_member_leaved_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.memberId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            return m;
        };
        return s2c_team_member_leaved_notify;
    })();
    $root.p_combine_times = (function() {
        function p_combine_times(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_combine_times.prototype.memberId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_combine_times.prototype.combineTimes = 0;
        p_combine_times.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.memberId);
            w.uint32(16).int32(m.combineTimes);
            return w;
        };
        p_combine_times.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_combine_times();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.memberId = r.int64();
                    break;
                case 2:
                    m.combineTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            if (!m.hasOwnProperty("combineTimes"))
                throw $util.ProtocolError("missing required 'combineTimes'", { instance: m });
            return m;
        };
        return p_combine_times;
    })();
    $root.s2c_leader_invite_to_instance_notify = (function() {
        function s2c_leader_invite_to_instance_notify(p) {
            this.combineTimesList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_leader_invite_to_instance_notify.prototype.teamInfo = null;
        s2c_leader_invite_to_instance_notify.prototype.combineTimesList = $util.emptyArray;
        s2c_leader_invite_to_instance_notify.cmd = 3353;
        s2c_leader_invite_to_instance_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_team.encode(m.teamInfo, w.uint32(10).fork()).ldelim();
            if (m.combineTimesList != null && m.combineTimesList.length) {
                for (var i = 0; i < m.combineTimesList.length; ++i)
                    $root.p_combine_times.encode(m.combineTimesList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_leader_invite_to_instance_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_leader_invite_to_instance_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamInfo = $root.p_team.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.combineTimesList && m.combineTimesList.length))
                        m.combineTimesList = [];
                    m.combineTimesList.push($root.p_combine_times.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamInfo"))
                throw $util.ProtocolError("missing required 'teamInfo'", { instance: m });
            return m;
        };
        return s2c_leader_invite_to_instance_notify;
    })();
    $root.c2s_answer_instance_invite_request = (function() {
        function c2s_answer_instance_invite_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_answer_instance_invite_request.prototype.flag = 0;
        c2s_answer_instance_invite_request.cmd = 3354;
        c2s_answer_instance_invite_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.flag);
            return w;
        };
        c2s_answer_instance_invite_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_answer_instance_invite_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.flag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("flag"))
                throw $util.ProtocolError("missing required 'flag'", { instance: m });
            return m;
        };
        return c2s_answer_instance_invite_request;
    })();
    $root.s2c_answer_instance_invite_notify = (function() {
        function s2c_answer_instance_invite_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_answer_instance_invite_notify.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_answer_instance_invite_notify.prototype.flag = 0;
        s2c_answer_instance_invite_notify.cmd = 3355;
        s2c_answer_instance_invite_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(16).int32(m.flag);
            return w;
        };
        s2c_answer_instance_invite_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_answer_instance_invite_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.flag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("flag"))
                throw $util.ProtocolError("missing required 'flag'", { instance: m });
            return m;
        };
        return s2c_answer_instance_invite_notify;
    })();
    $root.team_match_info = (function() {
        function team_match_info(p) {
            this.otherInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        team_match_info.prototype.target = 0;
        team_match_info.prototype.minLev = 0;
        team_match_info.prototype.maxLev = 0;
        team_match_info.prototype.otherInfo = $util.emptyArray;
        team_match_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.target);
            w.uint32(16).int32(m.minLev);
            w.uint32(24).int32(m.maxLev);
            if (m.otherInfo != null && m.otherInfo.length) {
                for (var i = 0; i < m.otherInfo.length; ++i)
                    w.uint32(32).int32(m.otherInfo[i]);
            }
            return w;
        };
        team_match_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.team_match_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.target = r.int32();
                    break;
                case 2:
                    m.minLev = r.int32();
                    break;
                case 3:
                    m.maxLev = r.int32();
                    break;
                case 4:
                    if (!(m.otherInfo && m.otherInfo.length))
                        m.otherInfo = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.otherInfo.push(r.int32());
                    } else
                        m.otherInfo.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            if (!m.hasOwnProperty("minLev"))
                throw $util.ProtocolError("missing required 'minLev'", { instance: m });
            if (!m.hasOwnProperty("maxLev"))
                throw $util.ProtocolError("missing required 'maxLev'", { instance: m });
            return m;
        };
        return team_match_info;
    })();
    $root.c2s_auto_match_request = (function() {
        function c2s_auto_match_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_auto_match_request.prototype.status = 0;
        c2s_auto_match_request.prototype.targetInfo = null;
        c2s_auto_match_request.cmd = 3356;
        c2s_auto_match_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.status);
            $root.team_match_info.encode(m.targetInfo, w.uint32(18).fork()).ldelim();
            return w;
        };
        c2s_auto_match_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_auto_match_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.status = r.int32();
                    break;
                case 2:
                    m.targetInfo = $root.team_match_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            if (!m.hasOwnProperty("targetInfo"))
                throw $util.ProtocolError("missing required 'targetInfo'", { instance: m });
            return m;
        };
        return c2s_auto_match_request;
    })();
    $root.c2s_create_team_request = (function() {
        function c2s_create_team_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_create_team_request.prototype.targetInfo = null;
        c2s_create_team_request.cmd = 3357;
        c2s_create_team_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.team_match_info.encode(m.targetInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        c2s_create_team_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_create_team_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetInfo = $root.team_match_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetInfo"))
                throw $util.ProtocolError("missing required 'targetInfo'", { instance: m });
            return m;
        };
        return c2s_create_team_request;
    })();
    $root.c2s_change_team_target_request = (function() {
        function c2s_change_team_target_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_team_target_request.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_change_team_target_request.prototype.targetInfo = null;
        c2s_change_team_target_request.cmd = 3358;
        c2s_change_team_target_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            $root.team_match_info.encode(m.targetInfo, w.uint32(18).fork()).ldelim();
            return w;
        };
        c2s_change_team_target_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_team_target_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                case 2:
                    m.targetInfo = $root.team_match_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("targetInfo"))
                throw $util.ProtocolError("missing required 'targetInfo'", { instance: m });
            return m;
        };
        return c2s_change_team_target_request;
    })();
    $root.c2s_set_auto_recv_member = (function() {
        function c2s_set_auto_recv_member(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_set_auto_recv_member.prototype.sign = 0;
        c2s_set_auto_recv_member.cmd = 3359;
        c2s_set_auto_recv_member.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.sign);
            return w;
        };
        c2s_set_auto_recv_member.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_set_auto_recv_member();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.sign = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("sign"))
                throw $util.ProtocolError("missing required 'sign'", { instance: m });
            return m;
        };
        return c2s_set_auto_recv_member;
    })();
    $root.c2s_query_invite_list = (function() {
        function c2s_query_invite_list(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_invite_list.cmd = 3360;
        c2s_query_invite_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_invite_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_invite_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_invite_list;
    })();
    $root.s2c_query_invite_list = (function() {
        function s2c_query_invite_list(p) {
            this.inviteList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_invite_list.prototype.inviteList = $util.emptyArray;
        s2c_query_invite_list.cmd = 3361;
        s2c_query_invite_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.inviteList != null && m.inviteList.length) {
                for (var i = 0; i < m.inviteList.length; ++i)
                    $root.s2c_be_invited_notify.encode(m.inviteList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_invite_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_invite_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.inviteList && m.inviteList.length))
                        m.inviteList = [];
                    m.inviteList.push($root.s2c_be_invited_notify.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_invite_list;
    })();
    $root.c2s_ignore_all_team_invitation = (function() {
        function c2s_ignore_all_team_invitation(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_ignore_all_team_invitation.cmd = 3362;
        c2s_ignore_all_team_invitation.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_ignore_all_team_invitation.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_ignore_all_team_invitation();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_ignore_all_team_invitation;
    })();
    $root.role_team_info = (function() {
        function role_team_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        role_team_info.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        role_team_info.prototype.roleName = "";
        role_team_info.prototype.roleGrade = 0;
        role_team_info.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        role_team_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.roleGrade);
            w.uint32(32).int64(m.teamId);
            return w;
        };
        role_team_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.role_team_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.roleGrade = r.int32();
                    break;
                case 4:
                    m.teamId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("roleGrade"))
                throw $util.ProtocolError("missing required 'roleGrade'", { instance: m });
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            return m;
        };
        return role_team_info;
    })();
    $root.c2s_open_invite_team_pane = (function() {
        function c2s_open_invite_team_pane(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_open_invite_team_pane.prototype.type = 0;
        c2s_open_invite_team_pane.cmd = 3363;
        c2s_open_invite_team_pane.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_open_invite_team_pane.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_open_invite_team_pane();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_open_invite_team_pane;
    })();
    $root.s2c_open_invite_team_pane = (function() {
        function s2c_open_invite_team_pane(p) {
            this.info = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_invite_team_pane.prototype.info = $util.emptyArray;
        s2c_open_invite_team_pane.cmd = 3364;
        s2c_open_invite_team_pane.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.info != null && m.info.length) {
                for (var i = 0; i < m.info.length; ++i)
                    $root.role_team_info.encode(m.info[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_open_invite_team_pane.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_invite_team_pane();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.info && m.info.length))
                        m.info = [];
                    m.info.push($root.role_team_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_invite_team_pane;
    })();
    $root.s2c_team_invitation_leader_notify = (function() {
        function s2c_team_invitation_leader_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_team_invitation_leader_notify.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_team_invitation_leader_notify.prototype.name = "";
        s2c_team_invitation_leader_notify.prototype.accept = 0;
        s2c_team_invitation_leader_notify.cmd = 3365;
        s2c_team_invitation_leader_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.accept);
            return w;
        };
        s2c_team_invitation_leader_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_team_invitation_leader_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.accept = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("accept"))
                throw $util.ProtocolError("missing required 'accept'", { instance: m });
            return m;
        };
        return s2c_team_invitation_leader_notify;
    })();
    $root.s2c_team_audit_member_notify = (function() {
        function s2c_team_audit_member_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_team_audit_member_notify.prototype.teamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_team_audit_member_notify.prototype.name = "";
        s2c_team_audit_member_notify.prototype.accept = 0;
        s2c_team_audit_member_notify.cmd = 3366;
        s2c_team_audit_member_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.teamId);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.accept);
            return w;
        };
        s2c_team_audit_member_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_team_audit_member_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.teamId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.accept = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("teamId"))
                throw $util.ProtocolError("missing required 'teamId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("accept"))
                throw $util.ProtocolError("missing required 'accept'", { instance: m });
            return m;
        };
        return s2c_team_audit_member_notify;
    })();
    $root.s2c_task_reply = (function() {
        function s2c_task_reply(p) {
            this.mainTask = [];
            this.branchTask = [];
            this.bountyTask = [];
            this.gangTask = [];
            this.transTask = [];
            this.noviceTask = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_task_reply.prototype.mainTask = $util.emptyArray;
        s2c_task_reply.prototype.branchTask = $util.emptyArray;
        s2c_task_reply.prototype.bountyTask = $util.emptyArray;
        s2c_task_reply.prototype.bountyTaskStatus = null;
        s2c_task_reply.prototype.gangTask = $util.emptyArray;
        s2c_task_reply.prototype.gangTaskStatus = null;
        s2c_task_reply.prototype.transTask = $util.emptyArray;
        s2c_task_reply.prototype.noviceTask = $util.emptyArray;
        s2c_task_reply.cmd = 3585;
        s2c_task_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mainTask != null && m.mainTask.length) {
                for (var i = 0; i < m.mainTask.length; ++i)
                    $root.p_task.encode(m.mainTask[i], w.uint32(10).fork()).ldelim();
            }
            if (m.branchTask != null && m.branchTask.length) {
                for (var i = 0; i < m.branchTask.length; ++i)
                    $root.p_task.encode(m.branchTask[i], w.uint32(18).fork()).ldelim();
            }
            if (m.bountyTask != null && m.bountyTask.length) {
                for (var i = 0; i < m.bountyTask.length; ++i)
                    $root.p_task.encode(m.bountyTask[i], w.uint32(26).fork()).ldelim();
            }
            $root.p_loop_task.encode(m.bountyTaskStatus, w.uint32(34).fork()).ldelim();
            if (m.gangTask != null && m.gangTask.length) {
                for (var i = 0; i < m.gangTask.length; ++i)
                    $root.p_task.encode(m.gangTask[i], w.uint32(42).fork()).ldelim();
            }
            $root.p_loop_task.encode(m.gangTaskStatus, w.uint32(50).fork()).ldelim();
            if (m.transTask != null && m.transTask.length) {
                for (var i = 0; i < m.transTask.length; ++i)
                    $root.p_task.encode(m.transTask[i], w.uint32(58).fork()).ldelim();
            }
            if (m.noviceTask != null && m.noviceTask.length) {
                for (var i = 0; i < m.noviceTask.length; ++i)
                    $root.p_task.encode(m.noviceTask[i], w.uint32(66).fork()).ldelim();
            }
            return w;
        };
        s2c_task_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_task_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mainTask && m.mainTask.length))
                        m.mainTask = [];
                    m.mainTask.push($root.p_task.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.branchTask && m.branchTask.length))
                        m.branchTask = [];
                    m.branchTask.push($root.p_task.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.bountyTask && m.bountyTask.length))
                        m.bountyTask = [];
                    m.bountyTask.push($root.p_task.decode(r, r.uint32()));
                    break;
                case 4:
                    m.bountyTaskStatus = $root.p_loop_task.decode(r, r.uint32());
                    break;
                case 5:
                    if (!(m.gangTask && m.gangTask.length))
                        m.gangTask = [];
                    m.gangTask.push($root.p_task.decode(r, r.uint32()));
                    break;
                case 6:
                    m.gangTaskStatus = $root.p_loop_task.decode(r, r.uint32());
                    break;
                case 7:
                    if (!(m.transTask && m.transTask.length))
                        m.transTask = [];
                    m.transTask.push($root.p_task.decode(r, r.uint32()));
                    break;
                case 8:
                    if (!(m.noviceTask && m.noviceTask.length))
                        m.noviceTask = [];
                    m.noviceTask.push($root.p_task.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("bountyTaskStatus"))
                throw $util.ProtocolError("missing required 'bountyTaskStatus'", { instance: m });
            if (!m.hasOwnProperty("gangTaskStatus"))
                throw $util.ProtocolError("missing required 'gangTaskStatus'", { instance: m });
            return m;
        };
        return s2c_task_reply;
    })();
    $root.c2s_operate_task_request = (function() {
        function c2s_operate_task_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_operate_task_request.prototype.type = 0;
        c2s_operate_task_request.prototype.taskId = 0;
        c2s_operate_task_request.cmd = 3586;
        c2s_operate_task_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.taskId);
            return w;
        };
        c2s_operate_task_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_operate_task_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.taskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("taskId"))
                throw $util.ProtocolError("missing required 'taskId'", { instance: m });
            return m;
        };
        return c2s_operate_task_request;
    })();
    $root.s2c_task_notify = (function() {
        function s2c_task_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_task_notify.prototype.type = 0;
        s2c_task_notify.prototype.task = null;
        s2c_task_notify.cmd = 3587;
        s2c_task_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            $root.p_task.encode(m.task, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_task_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_task_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.task = $root.p_task.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("task"))
                throw $util.ProtocolError("missing required 'task'", { instance: m });
            return m;
        };
        return s2c_task_notify;
    })();
    $root.s2c_task_finished_notify = (function() {
        function s2c_task_finished_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_task_finished_notify.prototype.taskId = 0;
        s2c_task_finished_notify.cmd = 3588;
        s2c_task_finished_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.taskId);
            return w;
        };
        s2c_task_finished_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_task_finished_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("taskId"))
                throw $util.ProtocolError("missing required 'taskId'", { instance: m });
            return m;
        };
        return s2c_task_finished_notify;
    })();
    $root.s2c_finish_group_task = (function() {
        function s2c_finish_group_task(p) {
            this.task = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_finish_group_task.prototype.task = $util.emptyArray;
        s2c_finish_group_task.cmd = 3589;
        s2c_finish_group_task.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.task != null && m.task.length) {
                for (var i = 0; i < m.task.length; ++i)
                    $root.p_task.encode(m.task[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_finish_group_task.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_finish_group_task();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.task && m.task.length))
                        m.task = [];
                    m.task.push($root.p_task.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_finish_group_task;
    })();
    $root.p_task = (function() {
        function p_task(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_task.prototype.taskId = 0;
        p_task.prototype.submitTime = 0;
        p_task.prototype.count = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_task.prototype.roleLv = 0;
        p_task.prototype.beginTime = 0;
        p_task.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.taskId);
            w.uint32(16).int32(m.submitTime);
            w.uint32(24).int64(m.count);
            w.uint32(32).int32(m.roleLv);
            w.uint32(40).int32(m.beginTime);
            return w;
        };
        p_task.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_task();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                case 2:
                    m.submitTime = r.int32();
                    break;
                case 3:
                    m.count = r.int64();
                    break;
                case 4:
                    m.roleLv = r.int32();
                    break;
                case 5:
                    m.beginTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("taskId"))
                throw $util.ProtocolError("missing required 'taskId'", { instance: m });
            if (!m.hasOwnProperty("submitTime"))
                throw $util.ProtocolError("missing required 'submitTime'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("roleLv"))
                throw $util.ProtocolError("missing required 'roleLv'", { instance: m });
            if (!m.hasOwnProperty("beginTime"))
                throw $util.ProtocolError("missing required 'beginTime'", { instance: m });
            return m;
        };
        return p_task;
    })();
    $root.p_loop_task = (function() {
        function p_loop_task(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_loop_task.prototype.taskType = 0;
        p_loop_task.prototype.finishNum = 0;
        p_loop_task.prototype.todoTaskId = 0;
        p_loop_task.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.taskType);
            w.uint32(16).int32(m.finishNum);
            w.uint32(24).int32(m.todoTaskId);
            return w;
        };
        p_loop_task.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_loop_task();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskType = r.int32();
                    break;
                case 2:
                    m.finishNum = r.int32();
                    break;
                case 3:
                    m.todoTaskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("taskType"))
                throw $util.ProtocolError("missing required 'taskType'", { instance: m });
            if (!m.hasOwnProperty("finishNum"))
                throw $util.ProtocolError("missing required 'finishNum'", { instance: m });
            if (!m.hasOwnProperty("todoTaskId"))
                throw $util.ProtocolError("missing required 'todoTaskId'", { instance: m });
            return m;
        };
        return p_loop_task;
    })();
    $root.s2c_loop_task_status_notify = (function() {
        function s2c_loop_task_status_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_loop_task_status_notify.prototype.taskStatus = null;
        s2c_loop_task_status_notify.cmd = 3590;
        s2c_loop_task_status_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_loop_task.encode(m.taskStatus, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_loop_task_status_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_loop_task_status_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskStatus = $root.p_loop_task.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("taskStatus"))
                throw $util.ProtocolError("missing required 'taskStatus'", { instance: m });
            return m;
        };
        return s2c_loop_task_status_notify;
    })();
    $root.c2s_task_new_play_enter_oasis = (function() {
        function c2s_task_new_play_enter_oasis(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_task_new_play_enter_oasis.cmd = 3591;
        c2s_task_new_play_enter_oasis.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_task_new_play_enter_oasis.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_task_new_play_enter_oasis();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_task_new_play_enter_oasis;
    })();
    $root.c2s_save_guide_data_request = (function() {
        function c2s_save_guide_data_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_save_guide_data_request.prototype.noviceId = 0;
        c2s_save_guide_data_request.prototype.step = 0;
        c2s_save_guide_data_request.cmd = 3592;
        c2s_save_guide_data_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.noviceId);
            w.uint32(16).int32(m.step);
            return w;
        };
        c2s_save_guide_data_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_save_guide_data_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.noviceId = r.int32();
                    break;
                case 2:
                    m.step = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("noviceId"))
                throw $util.ProtocolError("missing required 'noviceId'", { instance: m });
            if (!m.hasOwnProperty("step"))
                throw $util.ProtocolError("missing required 'step'", { instance: m });
            return m;
        };
        return c2s_save_guide_data_request;
    })();
    $root.c2s_get_guide_data_request = (function() {
        function c2s_get_guide_data_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_guide_data_request.cmd = 3593;
        c2s_get_guide_data_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_guide_data_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_guide_data_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_guide_data_request;
    })();
    $root.s2c_give_guide_data_response = (function() {
        function s2c_give_guide_data_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_give_guide_data_response.prototype.noviceId = 0;
        s2c_give_guide_data_response.prototype.step = 0;
        s2c_give_guide_data_response.cmd = 3594;
        s2c_give_guide_data_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.noviceId);
            w.uint32(16).int32(m.step);
            return w;
        };
        s2c_give_guide_data_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_give_guide_data_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.noviceId = r.int32();
                    break;
                case 2:
                    m.step = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("noviceId"))
                throw $util.ProtocolError("missing required 'noviceId'", { instance: m });
            if (!m.hasOwnProperty("step"))
                throw $util.ProtocolError("missing required 'step'", { instance: m });
            return m;
        };
        return s2c_give_guide_data_response;
    })();
    $root.c2s_query_is_inter_request = (function() {
        function c2s_query_is_inter_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_is_inter_request.cmd = 3841;
        c2s_query_is_inter_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_is_inter_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_is_inter_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_is_inter_request;
    })();
    $root.s2c_query_is_inter_response = (function() {
        function s2c_query_is_inter_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_is_inter_response.prototype.status = 0;
        s2c_query_is_inter_response.cmd = 3842;
        s2c_query_is_inter_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.status);
            return w;
        };
        s2c_query_is_inter_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_is_inter_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return s2c_query_is_inter_response;
    })();
    $root.c2s_query_rank = (function() {
        function c2s_query_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_rank.prototype.Type = 0;
        c2s_query_rank.prototype.isKuafu = 0;
        c2s_query_rank.cmd = 3843;
        c2s_query_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.Type);
            w.uint32(16).int32(m.isKuafu);
            return w;
        };
        c2s_query_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.Type = r.int32();
                    break;
                case 2:
                    m.isKuafu = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("Type"))
                throw $util.ProtocolError("missing required 'Type'", { instance: m });
            if (!m.hasOwnProperty("isKuafu"))
                throw $util.ProtocolError("missing required 'isKuafu'", { instance: m });
            return m;
        };
        return c2s_query_rank;
    })();
    $root.s2c_query_rank = (function() {
        function s2c_query_rank(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_rank.prototype.Type = 0;
        s2c_query_rank.prototype.isKuafu = 0;
        s2c_query_rank.prototype.myInfo = null;
        s2c_query_rank.prototype.data = $util.emptyArray;
        s2c_query_rank.cmd = 3844;
        s2c_query_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.Type);
            w.uint32(16).int32(m.isKuafu);
            $root.rank_record_p.encode(m.myInfo, w.uint32(26).fork()).ldelim();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.rank_record_p.encode(m.data[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        s2c_query_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.Type = r.int32();
                    break;
                case 2:
                    m.isKuafu = r.int32();
                    break;
                case 3:
                    m.myInfo = $root.rank_record_p.decode(r, r.uint32());
                    break;
                case 4:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.rank_record_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("Type"))
                throw $util.ProtocolError("missing required 'Type'", { instance: m });
            if (!m.hasOwnProperty("isKuafu"))
                throw $util.ProtocolError("missing required 'isKuafu'", { instance: m });
            if (!m.hasOwnProperty("myInfo"))
                throw $util.ProtocolError("missing required 'myInfo'", { instance: m });
            return m;
        };
        return s2c_query_rank;
    })();
    $root.rank_record_p = (function() {
        function rank_record_p(p) {
            this.rankData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        rank_record_p.prototype.rank = 0;
        rank_record_p.prototype.roleInfo = null;
        rank_record_p.prototype.rankData = $util.emptyArray;
        rank_record_p.prototype.extraData = "";
        rank_record_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            $root.rank_role_basic.encode(m.roleInfo, w.uint32(18).fork()).ldelim();
            if (m.rankData != null && m.rankData.length) {
                for (var i = 0; i < m.rankData.length; ++i)
                    w.uint32(26).string(m.rankData[i]);
            }
            w.uint32(34).string(m.extraData);
            return w;
        };
        rank_record_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.rank_record_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.roleInfo = $root.rank_role_basic.decode(r, r.uint32());
                    break;
                case 3:
                    if (!(m.rankData && m.rankData.length))
                        m.rankData = [];
                    m.rankData.push(r.string());
                    break;
                case 4:
                    m.extraData = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("roleInfo"))
                throw $util.ProtocolError("missing required 'roleInfo'", { instance: m });
            if (!m.hasOwnProperty("extraData"))
                throw $util.ProtocolError("missing required 'extraData'", { instance: m });
            return m;
        };
        return rank_record_p;
    })();
    $root.p_rank_tower_top_three = (function() {
        function p_rank_tower_top_three(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_rank_tower_top_three.prototype.order = 0;
        p_rank_tower_top_three.prototype.name = "";
        p_rank_tower_top_three.prototype.data = 0;
        p_rank_tower_top_three.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.order);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.data);
            return w;
        };
        p_rank_tower_top_three.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_rank_tower_top_three();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.order = r.int32();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.data = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("order"))
                throw $util.ProtocolError("missing required 'order'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("data"))
                throw $util.ProtocolError("missing required 'data'", { instance: m });
            return m;
        };
        return p_rank_tower_top_three;
    })();
    $root.c2s_query_tower_top_three_request = (function() {
        function c2s_query_tower_top_three_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_tower_top_three_request.cmd = 3845;
        c2s_query_tower_top_three_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_tower_top_three_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_tower_top_three_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_tower_top_three_request;
    })();
    $root.s2c_query_tower_top_three_response = (function() {
        function s2c_query_tower_top_three_response(p) {
            this.topThree = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_tower_top_three_response.prototype.topThree = $util.emptyArray;
        s2c_query_tower_top_three_response.cmd = 3846;
        s2c_query_tower_top_three_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.topThree != null && m.topThree.length) {
                for (var i = 0; i < m.topThree.length; ++i)
                    $root.p_rank_tower_top_three.encode(m.topThree[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_tower_top_three_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_tower_top_three_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.topThree && m.topThree.length))
                        m.topThree = [];
                    m.topThree.push($root.p_rank_tower_top_three.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_tower_top_three_response;
    })();
    $root.rank_role_basic = (function() {
        function rank_role_basic(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        rank_role_basic.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        rank_role_basic.prototype.roleName = "";
        rank_role_basic.prototype.vipLv = 0;
        rank_role_basic.prototype.gangName = "";
        rank_role_basic.prototype.career = 0;
        rank_role_basic.prototype.stateId = 0;
        rank_role_basic.prototype.dressUpHead = 0;
        rank_role_basic.prototype.dressUpFrame = 0;
        rank_role_basic.prototype.sex = 0;
        rank_role_basic.prototype.trans = 0;
        rank_role_basic.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.vipLv);
            w.uint32(34).string(m.gangName);
            w.uint32(40).int32(m.career);
            w.uint32(48).int32(m.stateId);
            w.uint32(56).int32(m.dressUpHead);
            w.uint32(64).int32(m.dressUpFrame);
            w.uint32(72).int32(m.sex);
            w.uint32(80).int32(m.trans);
            return w;
        };
        rank_role_basic.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.rank_role_basic();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.vipLv = r.int32();
                    break;
                case 4:
                    m.gangName = r.string();
                    break;
                case 5:
                    m.career = r.int32();
                    break;
                case 6:
                    m.stateId = r.int32();
                    break;
                case 7:
                    m.dressUpHead = r.int32();
                    break;
                case 8:
                    m.dressUpFrame = r.int32();
                    break;
                case 9:
                    m.sex = r.int32();
                    break;
                case 10:
                    m.trans = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("vipLv"))
                throw $util.ProtocolError("missing required 'vipLv'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("career"))
                throw $util.ProtocolError("missing required 'career'", { instance: m });
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            if (!m.hasOwnProperty("dressUpHead"))
                throw $util.ProtocolError("missing required 'dressUpHead'", { instance: m });
            if (!m.hasOwnProperty("dressUpFrame"))
                throw $util.ProtocolError("missing required 'dressUpFrame'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("trans"))
                throw $util.ProtocolError("missing required 'trans'", { instance: m });
            return m;
        };
        return rank_role_basic;
    })();
    $root.p_title = (function() {
        function p_title(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_title.prototype.titleId = 0;
        p_title.prototype.time = 0;
        p_title.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.titleId);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(16).int32(m.time);
            return w;
        };
        p_title.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_title();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.titleId = r.int32();
                    break;
                case 2:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("titleId"))
                throw $util.ProtocolError("missing required 'titleId'", { instance: m });
            return m;
        };
        return p_title;
    })();
    $root.c2s_title_request = (function() {
        function c2s_title_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_title_request.cmd = 4097;
        c2s_title_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_title_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_title_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_title_request;
    })();
    $root.c2s_title_change_request = (function() {
        function c2s_title_change_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_title_change_request.prototype.titleId = 0;
        c2s_title_change_request.cmd = 4098;
        c2s_title_change_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.titleId);
            return w;
        };
        c2s_title_change_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_title_change_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.titleId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("titleId"))
                throw $util.ProtocolError("missing required 'titleId'", { instance: m });
            return m;
        };
        return c2s_title_change_request;
    })();
    $root.s2c_obtained_title_notify = (function() {
        function s2c_obtained_title_notify(p) {
            this.obtainedTitle = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_obtained_title_notify.prototype.obtainedTitle = $util.emptyArray;
        s2c_obtained_title_notify.cmd = 4099;
        s2c_obtained_title_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.obtainedTitle != null && m.obtainedTitle.length) {
                for (var i = 0; i < m.obtainedTitle.length; ++i)
                    $root.p_title.encode(m.obtainedTitle[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_obtained_title_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_obtained_title_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.obtainedTitle && m.obtainedTitle.length))
                        m.obtainedTitle = [];
                    m.obtainedTitle.push($root.p_title.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_obtained_title_notify;
    })();
    $root.s2c_new_obtained_title_notify = (function() {
        function s2c_new_obtained_title_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_new_obtained_title_notify.prototype.obtainedTitle = null;
        s2c_new_obtained_title_notify.cmd = 4100;
        s2c_new_obtained_title_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_title.encode(m.obtainedTitle, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_new_obtained_title_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_new_obtained_title_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.obtainedTitle = $root.p_title.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("obtainedTitle"))
                throw $util.ProtocolError("missing required 'obtainedTitle'", { instance: m });
            return m;
        };
        return s2c_new_obtained_title_notify;
    })();
    $root.s2c_del_title_notify = (function() {
        function s2c_del_title_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_del_title_notify.prototype.titleId = null;
        s2c_del_title_notify.cmd = 4101;
        s2c_del_title_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_title.encode(m.titleId, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_del_title_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_del_title_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.titleId = $root.p_title.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("titleId"))
                throw $util.ProtocolError("missing required 'titleId'", { instance: m });
            return m;
        };
        return s2c_del_title_notify;
    })();
    $root.p_horse = (function() {
        function p_horse(p) {
            this.skills = [];
            this.changeHorseList = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_horse.prototype.starranklevel = 0;
        p_horse.prototype.starrankexp = 0;
        p_horse.prototype.skills = $util.emptyArray;
        p_horse.prototype.horseImageInScene = 0;
        p_horse.prototype.changeHorseList = $util.emptyArray;
        p_horse.prototype.combat = 0;
        p_horse.prototype.effects = $util.emptyArray;
        p_horse.prototype.isActive = 0;
        p_horse.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.starranklevel);
            w.uint32(16).int32(m.starrankexp);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(24).int32(m.skills[i]);
            }
            w.uint32(32).int32(m.horseImageInScene);
            if (m.changeHorseList != null && m.changeHorseList.length) {
                for (var i = 0; i < m.changeHorseList.length; ++i)
                    $root.p_change_horse.encode(m.changeHorseList[i], w.uint32(42).fork()).ldelim();
            }
            w.uint32(48).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_horse_attr.encode(m.effects[i], w.uint32(58).fork()).ldelim();
            }
            w.uint32(64).int32(m.isActive);
            return w;
        };
        p_horse.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_horse();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.starranklevel = r.int32();
                    break;
                case 2:
                    m.starrankexp = r.int32();
                    break;
                case 3:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 4:
                    m.horseImageInScene = r.int32();
                    break;
                case 5:
                    if (!(m.changeHorseList && m.changeHorseList.length))
                        m.changeHorseList = [];
                    m.changeHorseList.push($root.p_change_horse.decode(r, r.uint32()));
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_horse_attr.decode(r, r.uint32()));
                    break;
                case 8:
                    m.isActive = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("starranklevel"))
                throw $util.ProtocolError("missing required 'starranklevel'", { instance: m });
            if (!m.hasOwnProperty("starrankexp"))
                throw $util.ProtocolError("missing required 'starrankexp'", { instance: m });
            if (!m.hasOwnProperty("horseImageInScene"))
                throw $util.ProtocolError("missing required 'horseImageInScene'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("isActive"))
                throw $util.ProtocolError("missing required 'isActive'", { instance: m });
            return m;
        };
        return p_horse;
    })();
    $root.p_horse_attr = (function() {
        function p_horse_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_horse_attr.prototype.name = "";
        p_horse_attr.prototype.val = 0;
        p_horse_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_horse_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_horse_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_horse_attr;
    })();
    $root.p_change_horse = (function() {
        function p_change_horse(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_horse.prototype.typeId = 0;
        p_change_horse.prototype.rank = 0;
        p_change_horse.prototype.rankexp = 0;
        p_change_horse.prototype.combat = 0;
        p_change_horse.prototype.effects = $util.emptyArray;
        p_change_horse.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.rankexp);
            w.uint32(32).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_horse_attr.encode(m.effects[i], w.uint32(42).fork()).ldelim();
            }
            return w;
        };
        p_change_horse.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_horse();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.rankexp = r.int32();
                    break;
                case 4:
                    m.combat = r.int32();
                    break;
                case 5:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_horse_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("rankexp"))
                throw $util.ProtocolError("missing required 'rankexp'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_change_horse;
    })();
    $root.c2s_horse_info_request = (function() {
        function c2s_horse_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_horse_info_request.cmd = 4609;
        c2s_horse_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_horse_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_horse_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_horse_info_request;
    })();
    $root.s2c_horse_info_reply = (function() {
        function s2c_horse_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_horse_info_reply.prototype.horse = null;
        s2c_horse_info_reply.cmd = 4610;
        s2c_horse_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_horse.encode(m.horse, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_horse_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_horse_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.horse = $root.p_horse.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("horse"))
                throw $util.ProtocolError("missing required 'horse'", { instance: m });
            return m;
        };
        return s2c_horse_info_reply;
    })();
    $root.s2c_horse_info_change_notify = (function() {
        function s2c_horse_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_horse_info_change_notify.prototype.horse = null;
        s2c_horse_info_change_notify.cmd = 4611;
        s2c_horse_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_horse.encode(m.horse, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_horse_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_horse_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.horse = $root.p_horse.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("horse"))
                throw $util.ProtocolError("missing required 'horse'", { instance: m });
            return m;
        };
        return s2c_horse_info_change_notify;
    })();
    $root.c2s_horse_increase_starranklevel_request = (function() {
        function c2s_horse_increase_starranklevel_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_horse_increase_starranklevel_request.prototype.itemId = 0;
        c2s_horse_increase_starranklevel_request.prototype.oneKey = 0;
        c2s_horse_increase_starranklevel_request.cmd = 4612;
        c2s_horse_increase_starranklevel_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.oneKey);
            return w;
        };
        c2s_horse_increase_starranklevel_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_horse_increase_starranklevel_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_horse_increase_starranklevel_request;
    })();
    $root.c2s_change_horse_activate_request = (function() {
        function c2s_change_horse_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_horse_activate_request.prototype.typeId = 0;
        c2s_change_horse_activate_request.cmd = 4613;
        c2s_change_horse_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_horse_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_horse_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_horse_activate_request;
    })();
    $root.c2s_change_horse_increase_rank_request = (function() {
        function c2s_change_horse_increase_rank_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_horse_increase_rank_request.prototype.typeId = 0;
        c2s_change_horse_increase_rank_request.prototype.itemId = 0;
        c2s_change_horse_increase_rank_request.prototype.oneKey = 0;
        c2s_change_horse_increase_rank_request.cmd = 4614;
        c2s_change_horse_increase_rank_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.oneKey);
            return w;
        };
        c2s_change_horse_increase_rank_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_horse_increase_rank_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_change_horse_increase_rank_request;
    })();
    $root.c2s_horse_image_in_scene = (function() {
        function c2s_horse_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_horse_image_in_scene.prototype.typeId = 0;
        c2s_horse_image_in_scene.cmd = 4615;
        c2s_horse_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_horse_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_horse_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_horse_image_in_scene;
    })();
    $root.c2s_change_horse_position_status = (function() {
        function c2s_change_horse_position_status(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_horse_position_status.prototype.status = 0;
        c2s_change_horse_position_status.cmd = 4616;
        c2s_change_horse_position_status.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.status);
            return w;
        };
        c2s_change_horse_position_status.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_horse_position_status();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return c2s_change_horse_position_status;
    })();
    $root.c2s_active_horse_skill_request = (function() {
        function c2s_active_horse_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_horse_skill_request.prototype.skillid = 0;
        c2s_active_horse_skill_request.cmd = 4617;
        c2s_active_horse_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        c2s_active_horse_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_horse_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_horse_skill_request;
    })();
    $root.s2c_active_horse_skill_reply = (function() {
        function s2c_active_horse_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_horse_skill_reply.prototype.skillid = 0;
        s2c_active_horse_skill_reply.cmd = 4618;
        s2c_active_horse_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        s2c_active_horse_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_horse_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_horse_skill_reply;
    })();
    $root.c2s_active_horse_request = (function() {
        function c2s_active_horse_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_horse_request.cmd = 4619;
        c2s_active_horse_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_active_horse_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_horse_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_active_horse_request;
    })();
    $root.p_wing = (function() {
        function p_wing(p) {
            this.skills = [];
            this.changeWingList = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_wing.prototype.level = 0;
        p_wing.prototype.exp = 0;
        p_wing.prototype.skills = $util.emptyArray;
        p_wing.prototype.wingImageInScene = 0;
        p_wing.prototype.changeWingList = $util.emptyArray;
        p_wing.prototype.combat = 0;
        p_wing.prototype.effects = $util.emptyArray;
        p_wing.prototype.isActive = 0;
        p_wing.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.exp);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(24).int32(m.skills[i]);
            }
            w.uint32(32).int32(m.wingImageInScene);
            if (m.changeWingList != null && m.changeWingList.length) {
                for (var i = 0; i < m.changeWingList.length; ++i)
                    $root.p_change_wing.encode(m.changeWingList[i], w.uint32(42).fork()).ldelim();
            }
            w.uint32(48).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_wing_attr.encode(m.effects[i], w.uint32(58).fork()).ldelim();
            }
            if (m.isActive != null && Object.hasOwnProperty.call(m, "isActive"))
                w.uint32(64).int32(m.isActive);
            return w;
        };
        p_wing.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_wing();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                case 3:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 4:
                    m.wingImageInScene = r.int32();
                    break;
                case 5:
                    if (!(m.changeWingList && m.changeWingList.length))
                        m.changeWingList = [];
                    m.changeWingList.push($root.p_change_wing.decode(r, r.uint32()));
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_wing_attr.decode(r, r.uint32()));
                    break;
                case 8:
                    m.isActive = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("wingImageInScene"))
                throw $util.ProtocolError("missing required 'wingImageInScene'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_wing;
    })();
    $root.p_wing_attr = (function() {
        function p_wing_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_wing_attr.prototype.name = "";
        p_wing_attr.prototype.val = 0;
        p_wing_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_wing_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_wing_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_wing_attr;
    })();
    $root.p_change_wing = (function() {
        function p_change_wing(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_wing.prototype.typeId = 0;
        p_change_wing.prototype.rank = 0;
        p_change_wing.prototype.combat = 0;
        p_change_wing.prototype.effects = $util.emptyArray;
        p_change_wing.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_wing_attr.encode(m.effects[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        p_change_wing.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_wing();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_wing_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_change_wing;
    })();
    $root.c2s_wing_info_request = (function() {
        function c2s_wing_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wing_info_request.cmd = 4865;
        c2s_wing_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wing_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wing_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wing_info_request;
    })();
    $root.s2c_wing_info_reply = (function() {
        function s2c_wing_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wing_info_reply.prototype.wing = null;
        s2c_wing_info_reply.cmd = 4866;
        s2c_wing_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_wing.encode(m.wing, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_wing_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wing_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.wing = $root.p_wing.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("wing"))
                throw $util.ProtocolError("missing required 'wing'", { instance: m });
            return m;
        };
        return s2c_wing_info_reply;
    })();
    $root.s2c_wing_info_change_notify = (function() {
        function s2c_wing_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wing_info_change_notify.prototype.wing = null;
        s2c_wing_info_change_notify.cmd = 4867;
        s2c_wing_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_wing.encode(m.wing, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_wing_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wing_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.wing = $root.p_wing.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("wing"))
                throw $util.ProtocolError("missing required 'wing'", { instance: m });
            return m;
        };
        return s2c_wing_info_change_notify;
    })();
    $root.c2s_wing_increase_starranklevel_request = (function() {
        function c2s_wing_increase_starranklevel_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wing_increase_starranklevel_request.prototype.itemId = 0;
        c2s_wing_increase_starranklevel_request.prototype.oneKey = 0;
        c2s_wing_increase_starranklevel_request.cmd = 4868;
        c2s_wing_increase_starranklevel_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.oneKey);
            return w;
        };
        c2s_wing_increase_starranklevel_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wing_increase_starranklevel_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_wing_increase_starranklevel_request;
    })();
    $root.c2s_change_wing_activate_request = (function() {
        function c2s_change_wing_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_wing_activate_request.prototype.typeId = 0;
        c2s_change_wing_activate_request.cmd = 4869;
        c2s_change_wing_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_wing_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_wing_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_wing_activate_request;
    })();
    $root.c2s_wing_image_in_scene = (function() {
        function c2s_wing_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wing_image_in_scene.prototype.typeId = 0;
        c2s_wing_image_in_scene.cmd = 4870;
        c2s_wing_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_wing_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wing_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_wing_image_in_scene;
    })();
    $root.c2s_wing_active_request = (function() {
        function c2s_wing_active_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wing_active_request.cmd = 4871;
        c2s_wing_active_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wing_active_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wing_active_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wing_active_request;
    })();
    $root.c2s_active_wing_skill_request = (function() {
        function c2s_active_wing_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_wing_skill_request.prototype.skillid = 0;
        c2s_active_wing_skill_request.cmd = 4872;
        c2s_active_wing_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        c2s_active_wing_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_wing_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_wing_skill_request;
    })();
    $root.s2c_active_wing_skill_reply = (function() {
        function s2c_active_wing_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_wing_skill_reply.prototype.skillid = 0;
        s2c_active_wing_skill_reply.cmd = 4873;
        s2c_active_wing_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        s2c_active_wing_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_wing_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_wing_skill_reply;
    })();
    $root.p_talisman = (function() {
        function p_talisman(p) {
            this.skills = [];
            this.changeTalismanList = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_talisman.prototype.level = 0;
        p_talisman.prototype.exp = 0;
        p_talisman.prototype.skills = $util.emptyArray;
        p_talisman.prototype.talismanImageInScene = 0;
        p_talisman.prototype.changeTalismanList = $util.emptyArray;
        p_talisman.prototype.combat = 0;
        p_talisman.prototype.effects = $util.emptyArray;
        p_talisman.prototype.isActive = 0;
        p_talisman.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.exp);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(24).int32(m.skills[i]);
            }
            w.uint32(32).int32(m.talismanImageInScene);
            if (m.changeTalismanList != null && m.changeTalismanList.length) {
                for (var i = 0; i < m.changeTalismanList.length; ++i)
                    $root.p_change_talisman.encode(m.changeTalismanList[i], w.uint32(42).fork()).ldelim();
            }
            w.uint32(48).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_talisman_attr.encode(m.effects[i], w.uint32(58).fork()).ldelim();
            }
            if (m.isActive != null && Object.hasOwnProperty.call(m, "isActive"))
                w.uint32(64).int32(m.isActive);
            return w;
        };
        p_talisman.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_talisman();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                case 3:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 4:
                    m.talismanImageInScene = r.int32();
                    break;
                case 5:
                    if (!(m.changeTalismanList && m.changeTalismanList.length))
                        m.changeTalismanList = [];
                    m.changeTalismanList.push($root.p_change_talisman.decode(r, r.uint32()));
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_talisman_attr.decode(r, r.uint32()));
                    break;
                case 8:
                    m.isActive = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("talismanImageInScene"))
                throw $util.ProtocolError("missing required 'talismanImageInScene'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_talisman;
    })();
    $root.p_talisman_attr = (function() {
        function p_talisman_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_talisman_attr.prototype.name = "";
        p_talisman_attr.prototype.val = 0;
        p_talisman_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_talisman_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_talisman_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_talisman_attr;
    })();
    $root.p_change_talisman = (function() {
        function p_change_talisman(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_talisman.prototype.typeId = 0;
        p_change_talisman.prototype.rank = 0;
        p_change_talisman.prototype.combat = 0;
        p_change_talisman.prototype.effects = $util.emptyArray;
        p_change_talisman.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_talisman_attr.encode(m.effects[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        p_change_talisman.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_talisman();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_talisman_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_change_talisman;
    })();
    $root.c2s_talisman_info_request = (function() {
        function c2s_talisman_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_talisman_info_request.cmd = 5121;
        c2s_talisman_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_talisman_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_talisman_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_talisman_info_request;
    })();
    $root.s2c_talisman_info_reply = (function() {
        function s2c_talisman_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_talisman_info_reply.prototype.talisman = null;
        s2c_talisman_info_reply.cmd = 5122;
        s2c_talisman_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_talisman.encode(m.talisman, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_talisman_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_talisman_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.talisman = $root.p_talisman.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("talisman"))
                throw $util.ProtocolError("missing required 'talisman'", { instance: m });
            return m;
        };
        return s2c_talisman_info_reply;
    })();
    $root.s2c_talisman_info_change_notify = (function() {
        function s2c_talisman_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_talisman_info_change_notify.prototype.talisman = null;
        s2c_talisman_info_change_notify.cmd = 5123;
        s2c_talisman_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_talisman.encode(m.talisman, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_talisman_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_talisman_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.talisman = $root.p_talisman.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("talisman"))
                throw $util.ProtocolError("missing required 'talisman'", { instance: m });
            return m;
        };
        return s2c_talisman_info_change_notify;
    })();
    $root.c2s_talisman_increase_starranklevel_request = (function() {
        function c2s_talisman_increase_starranklevel_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_talisman_increase_starranklevel_request.prototype.itemId = 0;
        c2s_talisman_increase_starranklevel_request.prototype.oneKey = 0;
        c2s_talisman_increase_starranklevel_request.cmd = 5124;
        c2s_talisman_increase_starranklevel_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.oneKey);
            return w;
        };
        c2s_talisman_increase_starranklevel_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_talisman_increase_starranklevel_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_talisman_increase_starranklevel_request;
    })();
    $root.c2s_change_talisman_activate_request = (function() {
        function c2s_change_talisman_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_talisman_activate_request.prototype.typeId = 0;
        c2s_change_talisman_activate_request.cmd = 5125;
        c2s_change_talisman_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_talisman_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_talisman_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_talisman_activate_request;
    })();
    $root.c2s_talisman_image_in_scene = (function() {
        function c2s_talisman_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_talisman_image_in_scene.prototype.typeId = 0;
        c2s_talisman_image_in_scene.cmd = 5126;
        c2s_talisman_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_talisman_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_talisman_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_talisman_image_in_scene;
    })();
    $root.c2s_talisman_active_request = (function() {
        function c2s_talisman_active_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_talisman_active_request.cmd = 5127;
        c2s_talisman_active_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_talisman_active_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_talisman_active_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_talisman_active_request;
    })();
    $root.c2s_active_talisman_skill_request = (function() {
        function c2s_active_talisman_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_talisman_skill_request.prototype.skillid = 0;
        c2s_active_talisman_skill_request.cmd = 5128;
        c2s_active_talisman_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        c2s_active_talisman_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_talisman_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_talisman_skill_request;
    })();
    $root.s2c_active_talisman_skill_reply = (function() {
        function s2c_active_talisman_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_talisman_skill_reply.prototype.skillid = 0;
        s2c_active_talisman_skill_reply.cmd = 5129;
        s2c_active_talisman_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        s2c_active_talisman_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_talisman_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_talisman_skill_reply;
    })();
    $root.p_weapon = (function() {
        function p_weapon(p) {
            this.skills = [];
            this.changeWeaponList = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_weapon.prototype.level = 0;
        p_weapon.prototype.exp = 0;
        p_weapon.prototype.skills = $util.emptyArray;
        p_weapon.prototype.weaponImageInScene = 0;
        p_weapon.prototype.changeWeaponList = $util.emptyArray;
        p_weapon.prototype.combat = 0;
        p_weapon.prototype.effects = $util.emptyArray;
        p_weapon.prototype.isActive = 0;
        p_weapon.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.exp);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(24).int32(m.skills[i]);
            }
            w.uint32(32).int32(m.weaponImageInScene);
            if (m.changeWeaponList != null && m.changeWeaponList.length) {
                for (var i = 0; i < m.changeWeaponList.length; ++i)
                    $root.p_change_weapon.encode(m.changeWeaponList[i], w.uint32(42).fork()).ldelim();
            }
            w.uint32(48).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_weapon_attr.encode(m.effects[i], w.uint32(58).fork()).ldelim();
            }
            if (m.isActive != null && Object.hasOwnProperty.call(m, "isActive"))
                w.uint32(64).int32(m.isActive);
            return w;
        };
        p_weapon.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_weapon();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                case 3:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 4:
                    m.weaponImageInScene = r.int32();
                    break;
                case 5:
                    if (!(m.changeWeaponList && m.changeWeaponList.length))
                        m.changeWeaponList = [];
                    m.changeWeaponList.push($root.p_change_weapon.decode(r, r.uint32()));
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_weapon_attr.decode(r, r.uint32()));
                    break;
                case 8:
                    m.isActive = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("weaponImageInScene"))
                throw $util.ProtocolError("missing required 'weaponImageInScene'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_weapon;
    })();
    $root.p_weapon_attr = (function() {
        function p_weapon_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_weapon_attr.prototype.name = "";
        p_weapon_attr.prototype.val = 0;
        p_weapon_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_weapon_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_weapon_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_weapon_attr;
    })();
    $root.p_change_weapon = (function() {
        function p_change_weapon(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_weapon.prototype.typeId = 0;
        p_change_weapon.prototype.rank = 0;
        p_change_weapon.prototype.combat = 0;
        p_change_weapon.prototype.effects = $util.emptyArray;
        p_change_weapon.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_weapon_attr.encode(m.effects[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        p_change_weapon.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_weapon();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_weapon_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_change_weapon;
    })();
    $root.c2s_weapon_info_request = (function() {
        function c2s_weapon_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_weapon_info_request.cmd = 5377;
        c2s_weapon_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_weapon_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_weapon_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_weapon_info_request;
    })();
    $root.s2c_weapon_info_reply = (function() {
        function s2c_weapon_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_weapon_info_reply.prototype.weapon = null;
        s2c_weapon_info_reply.cmd = 5378;
        s2c_weapon_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_weapon.encode(m.weapon, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_weapon_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_weapon_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.weapon = $root.p_weapon.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("weapon"))
                throw $util.ProtocolError("missing required 'weapon'", { instance: m });
            return m;
        };
        return s2c_weapon_info_reply;
    })();
    $root.s2c_weapon_info_change_notify = (function() {
        function s2c_weapon_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_weapon_info_change_notify.prototype.weapon = null;
        s2c_weapon_info_change_notify.cmd = 5379;
        s2c_weapon_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_weapon.encode(m.weapon, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_weapon_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_weapon_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.weapon = $root.p_weapon.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("weapon"))
                throw $util.ProtocolError("missing required 'weapon'", { instance: m });
            return m;
        };
        return s2c_weapon_info_change_notify;
    })();
    $root.c2s_weapon_increase_starranklevel_request = (function() {
        function c2s_weapon_increase_starranklevel_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_weapon_increase_starranklevel_request.prototype.itemId = 0;
        c2s_weapon_increase_starranklevel_request.prototype.oneKey = 0;
        c2s_weapon_increase_starranklevel_request.cmd = 5380;
        c2s_weapon_increase_starranklevel_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.oneKey);
            return w;
        };
        c2s_weapon_increase_starranklevel_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_weapon_increase_starranklevel_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_weapon_increase_starranklevel_request;
    })();
    $root.c2s_change_weapon_activate_request = (function() {
        function c2s_change_weapon_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_weapon_activate_request.prototype.typeId = 0;
        c2s_change_weapon_activate_request.cmd = 5381;
        c2s_change_weapon_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_weapon_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_weapon_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_weapon_activate_request;
    })();
    $root.c2s_weapon_image_in_scene = (function() {
        function c2s_weapon_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_weapon_image_in_scene.prototype.typeId = 0;
        c2s_weapon_image_in_scene.cmd = 5382;
        c2s_weapon_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_weapon_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_weapon_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_weapon_image_in_scene;
    })();
    $root.c2s_weapon_active_request = (function() {
        function c2s_weapon_active_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_weapon_active_request.cmd = 5383;
        c2s_weapon_active_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_weapon_active_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_weapon_active_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_weapon_active_request;
    })();
    $root.c2s_active_weapon_skill_request = (function() {
        function c2s_active_weapon_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_weapon_skill_request.prototype.skillid = 0;
        c2s_active_weapon_skill_request.cmd = 5384;
        c2s_active_weapon_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        c2s_active_weapon_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_weapon_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_weapon_skill_request;
    })();
    $root.s2c_active_weapon_skill_reply = (function() {
        function s2c_active_weapon_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_weapon_skill_reply.prototype.skillid = 0;
        s2c_active_weapon_skill_reply.cmd = 5385;
        s2c_active_weapon_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        s2c_active_weapon_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_weapon_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_weapon_skill_reply;
    })();
    $root.p_cloak = (function() {
        function p_cloak(p) {
            this.skills = [];
            this.changeCloakList = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_cloak.prototype.level = 0;
        p_cloak.prototype.exp = 0;
        p_cloak.prototype.skills = $util.emptyArray;
        p_cloak.prototype.cloakImageInScene = 0;
        p_cloak.prototype.changeCloakList = $util.emptyArray;
        p_cloak.prototype.combat = 0;
        p_cloak.prototype.effects = $util.emptyArray;
        p_cloak.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.exp);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(24).int32(m.skills[i]);
            }
            w.uint32(32).int32(m.cloakImageInScene);
            if (m.changeCloakList != null && m.changeCloakList.length) {
                for (var i = 0; i < m.changeCloakList.length; ++i)
                    $root.p_change_cloak.encode(m.changeCloakList[i], w.uint32(42).fork()).ldelim();
            }
            w.uint32(48).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_cloak_attr.encode(m.effects[i], w.uint32(58).fork()).ldelim();
            }
            return w;
        };
        p_cloak.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_cloak();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                case 3:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 4:
                    m.cloakImageInScene = r.int32();
                    break;
                case 5:
                    if (!(m.changeCloakList && m.changeCloakList.length))
                        m.changeCloakList = [];
                    m.changeCloakList.push($root.p_change_cloak.decode(r, r.uint32()));
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_cloak_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("cloakImageInScene"))
                throw $util.ProtocolError("missing required 'cloakImageInScene'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_cloak;
    })();
    $root.p_cloak_attr = (function() {
        function p_cloak_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_cloak_attr.prototype.name = "";
        p_cloak_attr.prototype.val = 0;
        p_cloak_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_cloak_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_cloak_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_cloak_attr;
    })();
    $root.p_change_cloak = (function() {
        function p_change_cloak(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_cloak.prototype.typeId = 0;
        p_change_cloak.prototype.rank = 0;
        p_change_cloak.prototype.combat = 0;
        p_change_cloak.prototype.effects = $util.emptyArray;
        p_change_cloak.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_cloak_attr.encode(m.effects[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        p_change_cloak.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_cloak();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_cloak_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_change_cloak;
    })();
    $root.c2s_cloak_info_request = (function() {
        function c2s_cloak_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_cloak_info_request.cmd = 5633;
        c2s_cloak_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_cloak_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_cloak_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_cloak_info_request;
    })();
    $root.s2c_cloak_info_reply = (function() {
        function s2c_cloak_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_cloak_info_reply.prototype.cloak = null;
        s2c_cloak_info_reply.cmd = 5634;
        s2c_cloak_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_cloak.encode(m.cloak, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_cloak_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_cloak_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.cloak = $root.p_cloak.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("cloak"))
                throw $util.ProtocolError("missing required 'cloak'", { instance: m });
            return m;
        };
        return s2c_cloak_info_reply;
    })();
    $root.s2c_cloak_info_change_notify = (function() {
        function s2c_cloak_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_cloak_info_change_notify.prototype.cloak = null;
        s2c_cloak_info_change_notify.cmd = 5635;
        s2c_cloak_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_cloak.encode(m.cloak, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_cloak_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_cloak_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.cloak = $root.p_cloak.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("cloak"))
                throw $util.ProtocolError("missing required 'cloak'", { instance: m });
            return m;
        };
        return s2c_cloak_info_change_notify;
    })();
    $root.c2s_cloak_increase_starranklevel_request = (function() {
        function c2s_cloak_increase_starranklevel_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_cloak_increase_starranklevel_request.prototype.itemId = 0;
        c2s_cloak_increase_starranklevel_request.prototype.oneKey = 0;
        c2s_cloak_increase_starranklevel_request.cmd = 5636;
        c2s_cloak_increase_starranklevel_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.oneKey);
            return w;
        };
        c2s_cloak_increase_starranklevel_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_cloak_increase_starranklevel_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.oneKey = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("oneKey"))
                throw $util.ProtocolError("missing required 'oneKey'", { instance: m });
            return m;
        };
        return c2s_cloak_increase_starranklevel_request;
    })();
    $root.c2s_change_cloak_activate_request = (function() {
        function c2s_change_cloak_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_cloak_activate_request.prototype.typeId = 0;
        c2s_change_cloak_activate_request.cmd = 5637;
        c2s_change_cloak_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_cloak_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_cloak_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_cloak_activate_request;
    })();
    $root.c2s_cloak_image_in_scene = (function() {
        function c2s_cloak_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_cloak_image_in_scene.prototype.typeId = 0;
        c2s_cloak_image_in_scene.cmd = 5638;
        c2s_cloak_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_cloak_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_cloak_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_cloak_image_in_scene;
    })();
    $root.p_role_instance = (function() {
        function p_role_instance(p) {
            this.starHist = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_role_instance.prototype.instanceType = 0;
        p_role_instance.prototype.todayTimes = 0;
        p_role_instance.prototype.buyTimes = 0;
        p_role_instance.prototype.helpTimes = 0;
        p_role_instance.prototype.cd = 0;
        p_role_instance.prototype.progress = 0;
        p_role_instance.prototype.starHist = $util.emptyArray;
        p_role_instance.prototype.vipBuyTimes = 0;
        p_role_instance.prototype.combineTimes = 0;
        p_role_instance.prototype.canGetReward = 0;
        p_role_instance.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceType);
            w.uint32(16).int32(m.todayTimes);
            w.uint32(24).int32(m.buyTimes);
            w.uint32(32).int32(m.helpTimes);
            w.uint32(40).int32(m.cd);
            w.uint32(48).int32(m.progress);
            if (m.starHist != null && m.starHist.length) {
                for (var i = 0; i < m.starHist.length; ++i)
                    $root.p_kv_pair.encode(m.starHist[i], w.uint32(58).fork()).ldelim();
            }
            if (m.vipBuyTimes != null && Object.hasOwnProperty.call(m, "vipBuyTimes"))
                w.uint32(64).int32(m.vipBuyTimes);
            if (m.combineTimes != null && Object.hasOwnProperty.call(m, "combineTimes"))
                w.uint32(72).int32(m.combineTimes);
            if (m.canGetReward != null && Object.hasOwnProperty.call(m, "canGetReward"))
                w.uint32(80).int32(m.canGetReward);
            return w;
        };
        p_role_instance.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_role_instance();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceType = r.int32();
                    break;
                case 2:
                    m.todayTimes = r.int32();
                    break;
                case 3:
                    m.buyTimes = r.int32();
                    break;
                case 4:
                    m.helpTimes = r.int32();
                    break;
                case 5:
                    m.cd = r.int32();
                    break;
                case 6:
                    m.progress = r.int32();
                    break;
                case 7:
                    if (!(m.starHist && m.starHist.length))
                        m.starHist = [];
                    m.starHist.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 8:
                    m.vipBuyTimes = r.int32();
                    break;
                case 9:
                    m.combineTimes = r.int32();
                    break;
                case 10:
                    m.canGetReward = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceType"))
                throw $util.ProtocolError("missing required 'instanceType'", { instance: m });
            if (!m.hasOwnProperty("todayTimes"))
                throw $util.ProtocolError("missing required 'todayTimes'", { instance: m });
            if (!m.hasOwnProperty("buyTimes"))
                throw $util.ProtocolError("missing required 'buyTimes'", { instance: m });
            if (!m.hasOwnProperty("helpTimes"))
                throw $util.ProtocolError("missing required 'helpTimes'", { instance: m });
            if (!m.hasOwnProperty("cd"))
                throw $util.ProtocolError("missing required 'cd'", { instance: m });
            if (!m.hasOwnProperty("progress"))
                throw $util.ProtocolError("missing required 'progress'", { instance: m });
            return m;
        };
        return p_role_instance;
    })();
    $root.p_boss_info = (function() {
        function p_boss_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_boss_info.prototype.instanceId = 0;
        p_boss_info.prototype.monsterId = 0;
        p_boss_info.prototype.reviveTime = 0;
        p_boss_info.prototype.posX = 0;
        p_boss_info.prototype.posY = 0;
        p_boss_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.monsterId);
            w.uint32(24).int32(m.reviveTime);
            w.uint32(32).int32(m.posX);
            w.uint32(40).int32(m.posY);
            return w;
        };
        p_boss_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_boss_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.monsterId = r.int32();
                    break;
                case 3:
                    m.reviveTime = r.int32();
                    break;
                case 4:
                    m.posX = r.int32();
                    break;
                case 5:
                    m.posY = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            if (!m.hasOwnProperty("reviveTime"))
                throw $util.ProtocolError("missing required 'reviveTime'", { instance: m });
            if (!m.hasOwnProperty("posX"))
                throw $util.ProtocolError("missing required 'posX'", { instance: m });
            if (!m.hasOwnProperty("posY"))
                throw $util.ProtocolError("missing required 'posY'", { instance: m });
            return m;
        };
        return p_boss_info;
    })();
    $root.p_concern_boss = (function() {
        function p_concern_boss(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_concern_boss.prototype.instanceId = 0;
        p_concern_boss.prototype.monsterId = 0;
        p_concern_boss.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.monsterId);
            return w;
        };
        p_concern_boss.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_concern_boss();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.monsterId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            return m;
        };
        return p_concern_boss;
    })();
    $root.c2s_boss_list_request = (function() {
        function c2s_boss_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_boss_list_request.cmd = 5889;
        c2s_boss_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_boss_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_boss_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_boss_list_request;
    })();
    $root.s2c_boss_list_reply = (function() {
        function s2c_boss_list_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_list_reply.prototype.list = $util.emptyArray;
        s2c_boss_list_reply.cmd = 5890;
        s2c_boss_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_boss_info.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_boss_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_boss_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_list_reply;
    })();
    $root.c2s_role_instance_list_request = (function() {
        function c2s_role_instance_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_instance_list_request.cmd = 5891;
        c2s_role_instance_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_role_instance_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_instance_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_role_instance_list_request;
    })();
    $root.s2c_role_instance_list_reply = (function() {
        function s2c_role_instance_list_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_instance_list_reply.prototype.list = $util.emptyArray;
        s2c_role_instance_list_reply.cmd = 5892;
        s2c_role_instance_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_role_instance.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_instance_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_instance_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_role_instance.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_instance_list_reply;
    })();
    $root.s2c_role_instance_changed_notify = (function() {
        function s2c_role_instance_changed_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_instance_changed_notify.prototype.list = $util.emptyArray;
        s2c_role_instance_changed_notify.cmd = 5893;
        s2c_role_instance_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_role_instance.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_role_instance_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_instance_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_role_instance.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_role_instance_changed_notify;
    })();
    $root.s2c_boss_info_changed_notify = (function() {
        function s2c_boss_info_changed_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_info_changed_notify.prototype.list = $util.emptyArray;
        s2c_boss_info_changed_notify.cmd = 5894;
        s2c_boss_info_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_boss_info.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_boss_info_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_info_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_boss_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_info_changed_notify;
    })();
    $root.c2s_query_concern_boss_request = (function() {
        function c2s_query_concern_boss_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_concern_boss_request.cmd = 5895;
        c2s_query_concern_boss_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_concern_boss_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_concern_boss_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_concern_boss_request;
    })();
    $root.s2c_query_concern_boss_reply = (function() {
        function s2c_query_concern_boss_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_concern_boss_reply.prototype.list = $util.emptyArray;
        s2c_query_concern_boss_reply.cmd = 5896;
        s2c_query_concern_boss_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_concern_boss.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_concern_boss_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_concern_boss_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_concern_boss.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_concern_boss_reply;
    })();
    $root.c2s_add_conern_boss_request = (function() {
        function c2s_add_conern_boss_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_add_conern_boss_request.prototype.instanceId = 0;
        c2s_add_conern_boss_request.prototype.monsterId = 0;
        c2s_add_conern_boss_request.cmd = 5897;
        c2s_add_conern_boss_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.monsterId);
            return w;
        };
        c2s_add_conern_boss_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_add_conern_boss_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.monsterId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            return m;
        };
        return c2s_add_conern_boss_request;
    })();
    $root.s2c_add_concern_boss_notify = (function() {
        function s2c_add_concern_boss_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_add_concern_boss_notify.prototype.list = $util.emptyArray;
        s2c_add_concern_boss_notify.cmd = 5898;
        s2c_add_concern_boss_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_concern_boss.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_add_concern_boss_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_add_concern_boss_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_concern_boss.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_add_concern_boss_notify;
    })();
    $root.c2s_remove_conern_boss_request = (function() {
        function c2s_remove_conern_boss_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_remove_conern_boss_request.prototype.instanceId = 0;
        c2s_remove_conern_boss_request.prototype.monsterId = 0;
        c2s_remove_conern_boss_request.cmd = 5899;
        c2s_remove_conern_boss_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.monsterId);
            return w;
        };
        c2s_remove_conern_boss_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_remove_conern_boss_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.monsterId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            return m;
        };
        return c2s_remove_conern_boss_request;
    })();
    $root.s2c_remove_concern_boss_notify = (function() {
        function s2c_remove_concern_boss_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_remove_concern_boss_notify.prototype.list = $util.emptyArray;
        s2c_remove_concern_boss_notify.cmd = 5900;
        s2c_remove_concern_boss_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_concern_boss.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_remove_concern_boss_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_remove_concern_boss_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_concern_boss.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_remove_concern_boss_notify;
    })();
    $root.c2s_enter_instance_request = (function() {
        function c2s_enter_instance_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_instance_request.prototype.instanceId = 0;
        c2s_enter_instance_request.cmd = 5901;
        c2s_enter_instance_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            return w;
        };
        c2s_enter_instance_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_instance_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            return m;
        };
        return c2s_enter_instance_request;
    })();
    $root.s2c_instance_info_notify = (function() {
        function s2c_instance_info_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_instance_info_notify.prototype.instanceId = 0;
        s2c_instance_info_notify.prototype.beginTime = 0;
        s2c_instance_info_notify.prototype.endTime = 0;
        s2c_instance_info_notify.prototype.wave = 0;
        s2c_instance_info_notify.prototype.result = 0;
        s2c_instance_info_notify.prototype.star = 0;
        s2c_instance_info_notify.prototype.killMonsterCount = 0;
        s2c_instance_info_notify.cmd = 5902;
        s2c_instance_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.beginTime);
            w.uint32(24).int32(m.endTime);
            w.uint32(32).int32(m.wave);
            w.uint32(40).int32(m.result);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(48).int32(m.star);
            if (m.killMonsterCount != null && Object.hasOwnProperty.call(m, "killMonsterCount"))
                w.uint32(80).int32(m.killMonsterCount);
            return w;
        };
        s2c_instance_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_instance_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.beginTime = r.int32();
                    break;
                case 3:
                    m.endTime = r.int32();
                    break;
                case 4:
                    m.wave = r.int32();
                    break;
                case 5:
                    m.result = r.int32();
                    break;
                case 6:
                    m.star = r.int32();
                    break;
                case 10:
                    m.killMonsterCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("beginTime"))
                throw $util.ProtocolError("missing required 'beginTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("wave"))
                throw $util.ProtocolError("missing required 'wave'", { instance: m });
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            return m;
        };
        return s2c_instance_info_notify;
    })();
    $root.s2c_role_in_instance_notify = (function() {
        function s2c_role_in_instance_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_in_instance_notify.prototype.instanceId = 0;
        s2c_role_in_instance_notify.prototype.anger = 0;
        s2c_role_in_instance_notify.prototype.enterTime = 0;
        s2c_role_in_instance_notify.prototype.leaveTime = 0;
        s2c_role_in_instance_notify.prototype.goldEncourageTimes = 0;
        s2c_role_in_instance_notify.prototype.coinEncourageTimes = 0;
        s2c_role_in_instance_notify.prototype.accExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_in_instance_notify.prototype.accCoin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_in_instance_notify.cmd = 5903;
        s2c_role_in_instance_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.anger);
            w.uint32(24).int32(m.enterTime);
            w.uint32(32).int32(m.leaveTime);
            if (m.goldEncourageTimes != null && Object.hasOwnProperty.call(m, "goldEncourageTimes"))
                w.uint32(80).int32(m.goldEncourageTimes);
            if (m.coinEncourageTimes != null && Object.hasOwnProperty.call(m, "coinEncourageTimes"))
                w.uint32(88).int32(m.coinEncourageTimes);
            if (m.accExp != null && Object.hasOwnProperty.call(m, "accExp"))
                w.uint32(96).int64(m.accExp);
            if (m.accCoin != null && Object.hasOwnProperty.call(m, "accCoin"))
                w.uint32(104).int64(m.accCoin);
            return w;
        };
        s2c_role_in_instance_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_in_instance_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.anger = r.int32();
                    break;
                case 3:
                    m.enterTime = r.int32();
                    break;
                case 4:
                    m.leaveTime = r.int32();
                    break;
                case 10:
                    m.goldEncourageTimes = r.int32();
                    break;
                case 11:
                    m.coinEncourageTimes = r.int32();
                    break;
                case 12:
                    m.accExp = r.int64();
                    break;
                case 13:
                    m.accCoin = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("anger"))
                throw $util.ProtocolError("missing required 'anger'", { instance: m });
            if (!m.hasOwnProperty("enterTime"))
                throw $util.ProtocolError("missing required 'enterTime'", { instance: m });
            if (!m.hasOwnProperty("leaveTime"))
                throw $util.ProtocolError("missing required 'leaveTime'", { instance: m });
            return m;
        };
        return s2c_role_in_instance_notify;
    })();
    $root.c2s_leave_instance_request = (function() {
        function c2s_leave_instance_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_instance_request.cmd = 5904;
        c2s_leave_instance_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_leave_instance_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_instance_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_leave_instance_request;
    })();
    $root.s2c_leave_instance_notify = (function() {
        function s2c_leave_instance_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_leave_instance_notify.prototype.instanceId = 0;
        s2c_leave_instance_notify.cmd = 5905;
        s2c_leave_instance_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            return w;
        };
        s2c_leave_instance_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_leave_instance_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            return m;
        };
        return s2c_leave_instance_notify;
    })();
    $root.c2s_buy_instance_times_request = (function() {
        function c2s_buy_instance_times_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_buy_instance_times_request.prototype.instanceType = 0;
        c2s_buy_instance_times_request.prototype.buyType = 0;
        c2s_buy_instance_times_request.cmd = 5906;
        c2s_buy_instance_times_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceType);
            if (m.buyType != null && Object.hasOwnProperty.call(m, "buyType"))
                w.uint32(16).int32(m.buyType);
            return w;
        };
        c2s_buy_instance_times_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_buy_instance_times_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceType = r.int32();
                    break;
                case 2:
                    m.buyType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceType"))
                throw $util.ProtocolError("missing required 'instanceType'", { instance: m });
            return m;
        };
        return c2s_buy_instance_times_request;
    })();
    $root.p_boss_drop = (function() {
        function p_boss_drop(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_boss_drop.prototype.instanceId = 0;
        p_boss_drop.prototype.time = 0;
        p_boss_drop.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_boss_drop.prototype.name = "";
        p_boss_drop.prototype.monsterId = 0;
        p_boss_drop.prototype.itemId = 0;
        p_boss_drop.prototype.extData = "";
        p_boss_drop.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_boss_drop.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.time);
            w.uint32(24).int64(m.roleId);
            w.uint32(34).string(m.name);
            w.uint32(40).int32(m.monsterId);
            w.uint32(48).int32(m.itemId);
            w.uint32(58).string(m.extData);
            w.uint32(64).int64(m.id);
            return w;
        };
        p_boss_drop.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_boss_drop();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.time = r.int32();
                    break;
                case 3:
                    m.roleId = r.int64();
                    break;
                case 4:
                    m.name = r.string();
                    break;
                case 5:
                    m.monsterId = r.int32();
                    break;
                case 6:
                    m.itemId = r.int32();
                    break;
                case 7:
                    m.extData = r.string();
                    break;
                case 8:
                    m.id = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("extData"))
                throw $util.ProtocolError("missing required 'extData'", { instance: m });
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return p_boss_drop;
    })();
    $root.c2s_query_boss_drop_request = (function() {
        function c2s_query_boss_drop_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_boss_drop_request.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_query_boss_drop_request.prototype.toInter = 0;
        c2s_query_boss_drop_request.cmd = 5907;
        c2s_query_boss_drop_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.toInter);
            return w;
        };
        c2s_query_boss_drop_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_boss_drop_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.toInter = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("toInter"))
                throw $util.ProtocolError("missing required 'toInter'", { instance: m });
            return m;
        };
        return c2s_query_boss_drop_request;
    })();
    $root.s2c_boss_drop_reply = (function() {
        function s2c_boss_drop_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_drop_reply.prototype.list = $util.emptyArray;
        s2c_boss_drop_reply.cmd = 5908;
        s2c_boss_drop_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_boss_drop.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_boss_drop_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_drop_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_boss_drop.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_drop_reply;
    })();
    $root.p_boss_kill = (function() {
        function p_boss_kill(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_boss_kill.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_boss_kill.prototype.name = "";
        p_boss_kill.prototype.time = 0;
        p_boss_kill.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.time);
            return w;
        };
        p_boss_kill.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_boss_kill();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            return m;
        };
        return p_boss_kill;
    })();
    $root.c2s_query_boss_kill_request = (function() {
        function c2s_query_boss_kill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_boss_kill_request.prototype.monsterId = 0;
        c2s_query_boss_kill_request.prototype.instanceId = 0;
        c2s_query_boss_kill_request.prototype.time = 0;
        c2s_query_boss_kill_request.cmd = 5909;
        c2s_query_boss_kill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.monsterId);
            w.uint32(16).int32(m.instanceId);
            w.uint32(24).int32(m.time);
            return w;
        };
        c2s_query_boss_kill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_boss_kill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.monsterId = r.int32();
                    break;
                case 2:
                    m.instanceId = r.int32();
                    break;
                case 3:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            return m;
        };
        return c2s_query_boss_kill_request;
    })();
    $root.s2c_boss_kill_reply = (function() {
        function s2c_boss_kill_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_kill_reply.prototype.monsterId = 0;
        s2c_boss_kill_reply.prototype.list = $util.emptyArray;
        s2c_boss_kill_reply.cmd = 5910;
        s2c_boss_kill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.monsterId);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_boss_kill.encode(m.list[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_boss_kill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_kill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.monsterId = r.int32();
                    break;
                case 2:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_boss_kill.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("monsterId"))
                throw $util.ProtocolError("missing required 'monsterId'", { instance: m });
            return m;
        };
        return s2c_boss_kill_reply;
    })();
    $root.s2c_instance_result_notify = (function() {
        function s2c_instance_result_notify(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_instance_result_notify.prototype.instanceId = 0;
        s2c_instance_result_notify.prototype.winOrLose = 0;
        s2c_instance_result_notify.prototype.star = 0;
        s2c_instance_result_notify.prototype.items = $util.emptyArray;
        s2c_instance_result_notify.prototype.accExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_instance_result_notify.prototype.accCoin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_instance_result_notify.prototype.honor = 0;
        s2c_instance_result_notify.prototype.miniGameResult = 0;
        s2c_instance_result_notify.prototype.isFirstWin = 0;
        s2c_instance_result_notify.cmd = 5911;
        s2c_instance_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            w.uint32(16).int32(m.winOrLose);
            w.uint32(24).int32(m.star);
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_kv_pair.encode(m.items[i], w.uint32(34).fork()).ldelim();
            }
            if (m.accExp != null && Object.hasOwnProperty.call(m, "accExp"))
                w.uint32(80).int64(m.accExp);
            if (m.accCoin != null && Object.hasOwnProperty.call(m, "accCoin"))
                w.uint32(88).int64(m.accCoin);
            if (m.honor != null && Object.hasOwnProperty.call(m, "honor"))
                w.uint32(96).int32(m.honor);
            if (m.miniGameResult != null && Object.hasOwnProperty.call(m, "miniGameResult"))
                w.uint32(104).int32(m.miniGameResult);
            if (m.isFirstWin != null && Object.hasOwnProperty.call(m, "isFirstWin"))
                w.uint32(112).int32(m.isFirstWin);
            return w;
        };
        s2c_instance_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_instance_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    m.winOrLose = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                case 4:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 10:
                    m.accExp = r.int64();
                    break;
                case 11:
                    m.accCoin = r.int64();
                    break;
                case 12:
                    m.honor = r.int32();
                    break;
                case 13:
                    m.miniGameResult = r.int32();
                    break;
                case 14:
                    m.isFirstWin = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            if (!m.hasOwnProperty("winOrLose"))
                throw $util.ProtocolError("missing required 'winOrLose'", { instance: m });
            if (!m.hasOwnProperty("star"))
                throw $util.ProtocolError("missing required 'star'", { instance: m });
            return m;
        };
        return s2c_instance_result_notify;
    })();
    $root.c2s_clean_instance_cd_request = (function() {
        function c2s_clean_instance_cd_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_clean_instance_cd_request.prototype.instanceType = 0;
        c2s_clean_instance_cd_request.cmd = 5912;
        c2s_clean_instance_cd_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceType);
            return w;
        };
        c2s_clean_instance_cd_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_clean_instance_cd_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceType"))
                throw $util.ProtocolError("missing required 'instanceType'", { instance: m });
            return m;
        };
        return c2s_clean_instance_cd_request;
    })();
    $root.c2s_vip_buy_instance_times_request = (function() {
        function c2s_vip_buy_instance_times_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_vip_buy_instance_times_request.prototype.instanceType = 0;
        c2s_vip_buy_instance_times_request.prototype.buyType = 0;
        c2s_vip_buy_instance_times_request.cmd = 5913;
        c2s_vip_buy_instance_times_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceType);
            if (m.buyType != null && Object.hasOwnProperty.call(m, "buyType"))
                w.uint32(16).int32(m.buyType);
            return w;
        };
        c2s_vip_buy_instance_times_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_vip_buy_instance_times_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceType = r.int32();
                    break;
                case 2:
                    m.buyType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceType"))
                throw $util.ProtocolError("missing required 'instanceType'", { instance: m });
            return m;
        };
        return c2s_vip_buy_instance_times_request;
    })();
    $root.c2s_damage_encourage_request = (function() {
        function c2s_damage_encourage_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_damage_encourage_request.prototype.encourageType = 0;
        c2s_damage_encourage_request.cmd = 5914;
        c2s_damage_encourage_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.encourageType);
            return w;
        };
        c2s_damage_encourage_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_damage_encourage_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.encourageType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("encourageType"))
                throw $util.ProtocolError("missing required 'encourageType'", { instance: m });
            return m;
        };
        return c2s_damage_encourage_request;
    })();
    $root.c2s_instance_mop_out_request = (function() {
        function c2s_instance_mop_out_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_instance_mop_out_request.prototype.instanceId = 0;
        c2s_instance_mop_out_request.cmd = 5915;
        c2s_instance_mop_out_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            return w;
        };
        c2s_instance_mop_out_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_instance_mop_out_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            return m;
        };
        return c2s_instance_mop_out_request;
    })();
    $root.p_gather_info = (function() {
        function p_gather_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_gather_info.prototype.id = 0;
        p_gather_info.prototype.gatheredCount = 0;
        p_gather_info.prototype.totalCount = 0;
        p_gather_info.prototype.refreshTime = 0;
        p_gather_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.gatheredCount);
            w.uint32(24).int32(m.totalCount);
            w.uint32(32).int32(m.refreshTime);
            return w;
        };
        p_gather_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_gather_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.gatheredCount = r.int32();
                    break;
                case 3:
                    m.totalCount = r.int32();
                    break;
                case 4:
                    m.refreshTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("gatheredCount"))
                throw $util.ProtocolError("missing required 'gatheredCount'", { instance: m });
            if (!m.hasOwnProperty("totalCount"))
                throw $util.ProtocolError("missing required 'totalCount'", { instance: m });
            if (!m.hasOwnProperty("refreshTime"))
                throw $util.ProtocolError("missing required 'refreshTime'", { instance: m });
            return m;
        };
        return p_gather_info;
    })();
    $root.c2s_gather_list_request = (function() {
        function c2s_gather_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_gather_list_request.cmd = 5916;
        c2s_gather_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_gather_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_gather_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_gather_list_request;
    })();
    $root.s2c_gather_list_reply = (function() {
        function s2c_gather_list_reply(p) {
            this.gatherList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gather_list_reply.prototype.gatherList = $util.emptyArray;
        s2c_gather_list_reply.cmd = 5917;
        s2c_gather_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.gatherList != null && m.gatherList.length) {
                for (var i = 0; i < m.gatherList.length; ++i)
                    $root.p_gather_info.encode(m.gatherList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_gather_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gather_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.gatherList && m.gatherList.length))
                        m.gatherList = [];
                    m.gatherList.push($root.p_gather_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_gather_list_reply;
    })();
    $root.s2c_gather_info_changed_notify = (function() {
        function s2c_gather_info_changed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gather_info_changed_notify.prototype.gatherInfo = null;
        s2c_gather_info_changed_notify.cmd = 5918;
        s2c_gather_info_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_gather_info.encode(m.gatherInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_gather_info_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gather_info_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gatherInfo = $root.p_gather_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gatherInfo"))
                throw $util.ProtocolError("missing required 'gatherInfo'", { instance: m });
            return m;
        };
        return s2c_gather_info_changed_notify;
    })();
    $root.s2c_instance_mini_game_notify = (function() {
        function s2c_instance_mini_game_notify(p) {
            this.gameData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_instance_mini_game_notify.prototype.instanceId = 0;
        s2c_instance_mini_game_notify.prototype.gameData = $util.emptyArray;
        s2c_instance_mini_game_notify.cmd = 5919;
        s2c_instance_mini_game_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceId);
            if (m.gameData != null && m.gameData.length) {
                for (var i = 0; i < m.gameData.length; ++i)
                    w.uint32(16).int32(m.gameData[i]);
            }
            return w;
        };
        s2c_instance_mini_game_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_instance_mini_game_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceId = r.int32();
                    break;
                case 2:
                    if (!(m.gameData && m.gameData.length))
                        m.gameData = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.gameData.push(r.int32());
                    } else
                        m.gameData.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceId"))
                throw $util.ProtocolError("missing required 'instanceId'", { instance: m });
            return m;
        };
        return s2c_instance_mini_game_notify;
    })();
    $root.c2s_couple_mini_game_choice = (function() {
        function c2s_couple_mini_game_choice(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_couple_mini_game_choice.prototype.itemId = 0;
        c2s_couple_mini_game_choice.cmd = 5920;
        c2s_couple_mini_game_choice.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            return w;
        };
        c2s_couple_mini_game_choice.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_couple_mini_game_choice();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            return m;
        };
        return c2s_couple_mini_game_choice;
    })();
    $root.c2s_ask_buy_couple_instance_time = (function() {
        function c2s_ask_buy_couple_instance_time(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_ask_buy_couple_instance_time.cmd = 5921;
        c2s_ask_buy_couple_instance_time.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_ask_buy_couple_instance_time.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_ask_buy_couple_instance_time();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_ask_buy_couple_instance_time;
    })();
    $root.s2c_buy_couple_instance_time_notify = (function() {
        function s2c_buy_couple_instance_time_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_buy_couple_instance_time_notify.cmd = 5922;
        s2c_buy_couple_instance_time_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_buy_couple_instance_time_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_buy_couple_instance_time_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_buy_couple_instance_time_notify;
    })();
    $root.c2s_combine_times_request = (function() {
        function c2s_combine_times_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_combine_times_request.prototype.instanceType = 0;
        c2s_combine_times_request.prototype.combineTimes = 0;
        c2s_combine_times_request.cmd = 5923;
        c2s_combine_times_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceType);
            w.uint32(16).int32(m.combineTimes);
            return w;
        };
        c2s_combine_times_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_combine_times_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceType = r.int32();
                    break;
                case 2:
                    m.combineTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceType"))
                throw $util.ProtocolError("missing required 'instanceType'", { instance: m });
            if (!m.hasOwnProperty("combineTimes"))
                throw $util.ProtocolError("missing required 'combineTimes'", { instance: m });
            return m;
        };
        return c2s_combine_times_request;
    })();
    $root.c2s_tower_get_reward_request = (function() {
        function c2s_tower_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_tower_get_reward_request.cmd = 5924;
        c2s_tower_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_tower_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_tower_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_tower_get_reward_request;
    })();
    $root.s2c_first_finish_boss = (function() {
        function s2c_first_finish_boss(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_first_finish_boss.prototype.instanceType = 0;
        s2c_first_finish_boss.cmd = 5925;
        s2c_first_finish_boss.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.instanceType);
            return w;
        };
        s2c_first_finish_boss.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_first_finish_boss();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.instanceType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("instanceType"))
                throw $util.ProtocolError("missing required 'instanceType'", { instance: m });
            return m;
        };
        return s2c_first_finish_boss;
    })();
    $root.c2s_use_boss_revive_card_request = (function() {
        function c2s_use_boss_revive_card_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_use_boss_revive_card_request.prototype.id = 0;
        c2s_use_boss_revive_card_request.cmd = 5926;
        c2s_use_boss_revive_card_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_use_boss_revive_card_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_use_boss_revive_card_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_use_boss_revive_card_request;
    })();
    $root.c2s_enter_limit_boss_request = (function() {
        function c2s_enter_limit_boss_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_limit_boss_request.cmd = 5927;
        c2s_enter_limit_boss_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_limit_boss_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_limit_boss_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_limit_boss_request;
    })();
    $root.c2s_leave_limit_boss_request = (function() {
        function c2s_leave_limit_boss_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_limit_boss_request.cmd = 5928;
        c2s_leave_limit_boss_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_leave_limit_boss_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_limit_boss_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_leave_limit_boss_request;
    })();
    $root.s2c_limit_boss_info_notify = (function() {
        function s2c_limit_boss_info_notify(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_limit_boss_info_notify.prototype.rankList = $util.emptyArray;
        s2c_limit_boss_info_notify.prototype.myRank = null;
        s2c_limit_boss_info_notify.prototype.goldCourageTimes = 0;
        s2c_limit_boss_info_notify.prototype.coinCourageTimes = 0;
        s2c_limit_boss_info_notify.cmd = 5929;
        s2c_limit_boss_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_limit_boss_info.encode(m.rankList[i], w.uint32(10).fork()).ldelim();
            }
            $root.p_limit_boss_info.encode(m.myRank, w.uint32(18).fork()).ldelim();
            w.uint32(24).int32(m.goldCourageTimes);
            w.uint32(32).int32(m.coinCourageTimes);
            return w;
        };
        s2c_limit_boss_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_limit_boss_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_limit_boss_info.decode(r, r.uint32()));
                    break;
                case 2:
                    m.myRank = $root.p_limit_boss_info.decode(r, r.uint32());
                    break;
                case 3:
                    m.goldCourageTimes = r.int32();
                    break;
                case 4:
                    m.coinCourageTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            if (!m.hasOwnProperty("goldCourageTimes"))
                throw $util.ProtocolError("missing required 'goldCourageTimes'", { instance: m });
            if (!m.hasOwnProperty("coinCourageTimes"))
                throw $util.ProtocolError("missing required 'coinCourageTimes'", { instance: m });
            return m;
        };
        return s2c_limit_boss_info_notify;
    })();
    $root.p_limit_boss_info = (function() {
        function p_limit_boss_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_limit_boss_info.prototype.rankId = 0;
        p_limit_boss_info.prototype.accDamage = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_limit_boss_info.prototype.roleName = "";
        p_limit_boss_info.prototype.roleId = 0;
        p_limit_boss_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rankId);
            w.uint32(16).int64(m.accDamage);
            w.uint32(26).string(m.roleName);
            w.uint32(32).int32(m.roleId);
            return w;
        };
        p_limit_boss_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_limit_boss_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                case 2:
                    m.accDamage = r.int64();
                    break;
                case 3:
                    m.roleName = r.string();
                    break;
                case 4:
                    m.roleId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rankId"))
                throw $util.ProtocolError("missing required 'rankId'", { instance: m });
            if (!m.hasOwnProperty("accDamage"))
                throw $util.ProtocolError("missing required 'accDamage'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return p_limit_boss_info;
    })();
    $root.c2s_limit_boss_encourage_request = (function() {
        function c2s_limit_boss_encourage_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_limit_boss_encourage_request.prototype.encourageType = 0;
        c2s_limit_boss_encourage_request.cmd = 5930;
        c2s_limit_boss_encourage_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.encourageType);
            return w;
        };
        c2s_limit_boss_encourage_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_limit_boss_encourage_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.encourageType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("encourageType"))
                throw $util.ProtocolError("missing required 'encourageType'", { instance: m });
            return m;
        };
        return c2s_limit_boss_encourage_request;
    })();
    $root.s2c_limit_boss_result_notify = (function() {
        function s2c_limit_boss_result_notify(p) {
            this.rankReward = [];
            this.killReward = [];
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_limit_boss_result_notify.prototype.rankReward = $util.emptyArray;
        s2c_limit_boss_result_notify.prototype.killReward = $util.emptyArray;
        s2c_limit_boss_result_notify.prototype.rankList = $util.emptyArray;
        s2c_limit_boss_result_notify.prototype.myRank = null;
        s2c_limit_boss_result_notify.cmd = 5931;
        s2c_limit_boss_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankReward != null && m.rankReward.length) {
                for (var i = 0; i < m.rankReward.length; ++i)
                    $root.item_simple.encode(m.rankReward[i], w.uint32(10).fork()).ldelim();
            }
            if (m.killReward != null && m.killReward.length) {
                for (var i = 0; i < m.killReward.length; ++i)
                    $root.item_simple.encode(m.killReward[i], w.uint32(18).fork()).ldelim();
            }
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_limit_boss_info.encode(m.rankList[i], w.uint32(26).fork()).ldelim();
            }
            $root.p_limit_boss_info.encode(m.myRank, w.uint32(34).fork()).ldelim();
            return w;
        };
        s2c_limit_boss_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_limit_boss_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rankReward && m.rankReward.length))
                        m.rankReward = [];
                    m.rankReward.push($root.item_simple.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.killReward && m.killReward.length))
                        m.killReward = [];
                    m.killReward.push($root.item_simple.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_limit_boss_info.decode(r, r.uint32()));
                    break;
                case 4:
                    m.myRank = $root.p_limit_boss_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            return m;
        };
        return s2c_limit_boss_result_notify;
    })();
    $root.c2s_activity_info = (function() {
        function c2s_activity_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_activity_info.cmd = 6401;
        c2s_activity_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_activity_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_activity_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_activity_info;
    })();
    $root.s2c_activity_info = (function() {
        function s2c_activity_info(p) {
            this.progress = [];
            this.rwLog = [];
            this.getBackInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_activity_info.prototype.points = 0;
        s2c_activity_info.prototype.progress = $util.emptyArray;
        s2c_activity_info.prototype.rwLog = $util.emptyArray;
        s2c_activity_info.prototype.getBackInfo = $util.emptyArray;
        s2c_activity_info.prototype.offlineSec = 0;
        s2c_activity_info.prototype.lv = 0;
        s2c_activity_info.prototype.exp = 0;
        s2c_activity_info.prototype.show = 0;
        s2c_activity_info.cmd = 6402;
        s2c_activity_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.points);
            if (m.progress != null && m.progress.length) {
                for (var i = 0; i < m.progress.length; ++i)
                    $root.p_activity_progress.encode(m.progress[i], w.uint32(18).fork()).ldelim();
            }
            if (m.rwLog != null && m.rwLog.length) {
                for (var i = 0; i < m.rwLog.length; ++i)
                    $root.p_activity_rw_log.encode(m.rwLog[i], w.uint32(26).fork()).ldelim();
            }
            if (m.getBackInfo != null && m.getBackInfo.length) {
                for (var i = 0; i < m.getBackInfo.length; ++i)
                    $root.p_activity_get_back.encode(m.getBackInfo[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.offlineSec);
            w.uint32(48).int32(m.lv);
            w.uint32(56).int32(m.exp);
            w.uint32(64).int32(m.show);
            return w;
        };
        s2c_activity_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_activity_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.points = r.int32();
                    break;
                case 2:
                    if (!(m.progress && m.progress.length))
                        m.progress = [];
                    m.progress.push($root.p_activity_progress.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.rwLog && m.rwLog.length))
                        m.rwLog = [];
                    m.rwLog.push($root.p_activity_rw_log.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.getBackInfo && m.getBackInfo.length))
                        m.getBackInfo = [];
                    m.getBackInfo.push($root.p_activity_get_back.decode(r, r.uint32()));
                    break;
                case 5:
                    m.offlineSec = r.int32();
                    break;
                case 6:
                    m.lv = r.int32();
                    break;
                case 7:
                    m.exp = r.int32();
                    break;
                case 8:
                    m.show = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("points"))
                throw $util.ProtocolError("missing required 'points'", { instance: m });
            if (!m.hasOwnProperty("offlineSec"))
                throw $util.ProtocolError("missing required 'offlineSec'", { instance: m });
            if (!m.hasOwnProperty("lv"))
                throw $util.ProtocolError("missing required 'lv'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("show"))
                throw $util.ProtocolError("missing required 'show'", { instance: m });
            return m;
        };
        return s2c_activity_info;
    })();
    $root.p_activity_progress = (function() {
        function p_activity_progress(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity_progress.prototype.id = 0;
        p_activity_progress.prototype.num = 0;
        p_activity_progress.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.num);
            return w;
        };
        p_activity_progress.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity_progress();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return p_activity_progress;
    })();
    $root.p_activity_rw_log = (function() {
        function p_activity_rw_log(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity_rw_log.prototype.points = 0;
        p_activity_rw_log.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.points);
            return w;
        };
        p_activity_rw_log.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity_rw_log();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.points = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("points"))
                throw $util.ProtocolError("missing required 'points'", { instance: m });
            return m;
        };
        return p_activity_rw_log;
    })();
    $root.p_activity_get_back = (function() {
        function p_activity_get_back(p) {
            this.defaultRw = [];
            this.goldDefaultRw = [];
            this.extraRw = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity_get_back.prototype.id = 0;
        p_activity_get_back.prototype.finishNum = 0;
        p_activity_get_back.prototype.totalNum = 0;
        p_activity_get_back.prototype.getExtraNum = 0;
        p_activity_get_back.prototype.totalExtraNum = 0;
        p_activity_get_back.prototype.defaultRw = $util.emptyArray;
        p_activity_get_back.prototype.goldDefaultRw = $util.emptyArray;
        p_activity_get_back.prototype.extraRw = $util.emptyArray;
        p_activity_get_back.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.finishNum);
            w.uint32(24).int32(m.totalNum);
            w.uint32(32).int32(m.getExtraNum);
            w.uint32(40).int32(m.totalExtraNum);
            if (m.defaultRw != null && m.defaultRw.length) {
                for (var i = 0; i < m.defaultRw.length; ++i)
                    $root.p_activity_rw.encode(m.defaultRw[i], w.uint32(50).fork()).ldelim();
            }
            if (m.goldDefaultRw != null && m.goldDefaultRw.length) {
                for (var i = 0; i < m.goldDefaultRw.length; ++i)
                    $root.p_activity_rw.encode(m.goldDefaultRw[i], w.uint32(58).fork()).ldelim();
            }
            if (m.extraRw != null && m.extraRw.length) {
                for (var i = 0; i < m.extraRw.length; ++i)
                    $root.p_activity_rw.encode(m.extraRw[i], w.uint32(66).fork()).ldelim();
            }
            return w;
        };
        p_activity_get_back.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity_get_back();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.finishNum = r.int32();
                    break;
                case 3:
                    m.totalNum = r.int32();
                    break;
                case 4:
                    m.getExtraNum = r.int32();
                    break;
                case 5:
                    m.totalExtraNum = r.int32();
                    break;
                case 6:
                    if (!(m.defaultRw && m.defaultRw.length))
                        m.defaultRw = [];
                    m.defaultRw.push($root.p_activity_rw.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.goldDefaultRw && m.goldDefaultRw.length))
                        m.goldDefaultRw = [];
                    m.goldDefaultRw.push($root.p_activity_rw.decode(r, r.uint32()));
                    break;
                case 8:
                    if (!(m.extraRw && m.extraRw.length))
                        m.extraRw = [];
                    m.extraRw.push($root.p_activity_rw.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("finishNum"))
                throw $util.ProtocolError("missing required 'finishNum'", { instance: m });
            if (!m.hasOwnProperty("totalNum"))
                throw $util.ProtocolError("missing required 'totalNum'", { instance: m });
            if (!m.hasOwnProperty("getExtraNum"))
                throw $util.ProtocolError("missing required 'getExtraNum'", { instance: m });
            if (!m.hasOwnProperty("totalExtraNum"))
                throw $util.ProtocolError("missing required 'totalExtraNum'", { instance: m });
            return m;
        };
        return p_activity_get_back;
    })();
    $root.p_activity_rw = (function() {
        function p_activity_rw(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity_rw.prototype.itemId = 0;
        p_activity_rw.prototype.itemNum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_activity_rw.prototype.bound = 0;
        p_activity_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int64(m.itemNum);
            w.uint32(24).int32(m.bound);
            return w;
        };
        p_activity_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.itemNum = r.int64();
                    break;
                case 3:
                    m.bound = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            return m;
        };
        return p_activity_rw;
    })();
    $root.p_activity_offline = (function() {
        function p_activity_offline(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity_offline.prototype.id = 0;
        p_activity_offline.prototype.num = 0;
        p_activity_offline.prototype.spNum = 0;
        p_activity_offline.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.num);
            w.uint32(24).int32(m.spNum);
            return w;
        };
        p_activity_offline.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity_offline();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                case 3:
                    m.spNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("spNum"))
                throw $util.ProtocolError("missing required 'spNum'", { instance: m });
            return m;
        };
        return p_activity_offline;
    })();
    $root.s2c_activity_change = (function() {
        function s2c_activity_change(p) {
            this.progress = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_activity_change.prototype.points = 0;
        s2c_activity_change.prototype.exp = 0;
        s2c_activity_change.prototype.progress = $util.emptyArray;
        s2c_activity_change.cmd = 6403;
        s2c_activity_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.points);
            w.uint32(16).int32(m.exp);
            if (m.progress != null && m.progress.length) {
                for (var i = 0; i < m.progress.length; ++i)
                    $root.p_activity_progress.encode(m.progress[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_activity_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_activity_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.points = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                case 3:
                    if (!(m.progress && m.progress.length))
                        m.progress = [];
                    m.progress.push($root.p_activity_progress.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("points"))
                throw $util.ProtocolError("missing required 'points'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            return m;
        };
        return s2c_activity_change;
    })();
    $root.s2c_activity_offline_sec_change = (function() {
        function s2c_activity_offline_sec_change(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_activity_offline_sec_change.prototype.time = 0;
        s2c_activity_offline_sec_change.cmd = 6404;
        s2c_activity_offline_sec_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.time);
            return w;
        };
        s2c_activity_offline_sec_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_activity_offline_sec_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            return m;
        };
        return s2c_activity_offline_sec_change;
    })();
    $root.c2s_fetch_activity_points_rw = (function() {
        function c2s_fetch_activity_points_rw(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_activity_points_rw.prototype.points = 0;
        c2s_fetch_activity_points_rw.cmd = 6405;
        c2s_fetch_activity_points_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.points);
            return w;
        };
        c2s_fetch_activity_points_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_activity_points_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.points = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("points"))
                throw $util.ProtocolError("missing required 'points'", { instance: m });
            return m;
        };
        return c2s_fetch_activity_points_rw;
    })();
    $root.s2c_fetch_activity_points_rw = (function() {
        function s2c_fetch_activity_points_rw(p) {
            this.rwLog = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fetch_activity_points_rw.prototype.rwLog = $util.emptyArray;
        s2c_fetch_activity_points_rw.cmd = 6406;
        s2c_fetch_activity_points_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rwLog != null && m.rwLog.length) {
                for (var i = 0; i < m.rwLog.length; ++i)
                    $root.p_activity_rw_log.encode(m.rwLog[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_fetch_activity_points_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fetch_activity_points_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rwLog && m.rwLog.length))
                        m.rwLog = [];
                    m.rwLog.push($root.p_activity_rw_log.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_fetch_activity_points_rw;
    })();
    $root.c2s_fetch_activity_offline_rw = (function() {
        function c2s_fetch_activity_offline_rw(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_activity_offline_rw.prototype.id = 0;
        c2s_fetch_activity_offline_rw.prototype.type = 0;
        c2s_fetch_activity_offline_rw.prototype.num = 0;
        c2s_fetch_activity_offline_rw.cmd = 6407;
        c2s_fetch_activity_offline_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.type);
            w.uint32(24).int32(m.num);
            return w;
        };
        c2s_fetch_activity_offline_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_activity_offline_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_fetch_activity_offline_rw;
    })();
    $root.s2c_fetch_activity_offline_rw = (function() {
        function s2c_fetch_activity_offline_rw(p) {
            this.getBackInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fetch_activity_offline_rw.prototype.getBackInfo = $util.emptyArray;
        s2c_fetch_activity_offline_rw.cmd = 6408;
        s2c_fetch_activity_offline_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.getBackInfo != null && m.getBackInfo.length) {
                for (var i = 0; i < m.getBackInfo.length; ++i)
                    $root.p_activity_get_back.encode(m.getBackInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_fetch_activity_offline_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fetch_activity_offline_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.getBackInfo && m.getBackInfo.length))
                        m.getBackInfo = [];
                    m.getBackInfo.push($root.p_activity_get_back.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_fetch_activity_offline_rw;
    })();
    $root.c2s_up_activity_lv = (function() {
        function c2s_up_activity_lv(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_up_activity_lv.cmd = 6409;
        c2s_up_activity_lv.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_up_activity_lv.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_up_activity_lv();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_up_activity_lv;
    })();
    $root.s2c_up_activity_lv = (function() {
        function s2c_up_activity_lv(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_up_activity_lv.prototype.lv = 0;
        s2c_up_activity_lv.prototype.exp = 0;
        s2c_up_activity_lv.cmd = 6410;
        s2c_up_activity_lv.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.lv);
            w.uint32(16).int32(m.exp);
            return w;
        };
        s2c_up_activity_lv.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_up_activity_lv();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.lv = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("lv"))
                throw $util.ProtocolError("missing required 'lv'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            return m;
        };
        return s2c_up_activity_lv;
    })();
    $root.c2s_show_activity_model = (function() {
        function c2s_show_activity_model(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_show_activity_model.prototype.show = 0;
        c2s_show_activity_model.cmd = 6411;
        c2s_show_activity_model.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.show);
            return w;
        };
        c2s_show_activity_model.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_show_activity_model();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.show = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("show"))
                throw $util.ProtocolError("missing required 'show'", { instance: m });
            return m;
        };
        return c2s_show_activity_model;
    })();
    $root.s2c_show_activity_model = (function() {
        function s2c_show_activity_model(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_show_activity_model.prototype.show = 0;
        s2c_show_activity_model.prototype.showLv = 0;
        s2c_show_activity_model.cmd = 6412;
        s2c_show_activity_model.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.show);
            w.uint32(16).int32(m.showLv);
            return w;
        };
        s2c_show_activity_model.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_show_activity_model();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.show = r.int32();
                    break;
                case 2:
                    m.showLv = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("show"))
                throw $util.ProtocolError("missing required 'show'", { instance: m });
            if (!m.hasOwnProperty("showLv"))
                throw $util.ProtocolError("missing required 'showLv'", { instance: m });
            return m;
        };
        return s2c_show_activity_model;
    })();
    $root.p_offline_item_info = (function() {
        function p_offline_item_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_offline_item_info.prototype.itemId = 0;
        p_offline_item_info.prototype.count = 0;
        p_offline_item_info.prototype.devourCount = 0;
        p_offline_item_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.count);
            w.uint32(24).int32(m.devourCount);
            return w;
        };
        p_offline_item_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_offline_item_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                case 3:
                    m.devourCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("devourCount"))
                throw $util.ProtocolError("missing required 'devourCount'", { instance: m });
            return m;
        };
        return p_offline_item_info;
    })();
    $root.s2c_offline_practice_reward_notify = (function() {
        function s2c_offline_practice_reward_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_offline_practice_reward_notify.prototype.practiceSecs = 0;
        s2c_offline_practice_reward_notify.prototype.leftSecs = 0;
        s2c_offline_practice_reward_notify.prototype.oldLevel = 0;
        s2c_offline_practice_reward_notify.prototype.newLevel = 0;
        s2c_offline_practice_reward_notify.prototype.roleExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_offline_practice_reward_notify.prototype.petExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_offline_practice_reward_notify.prototype.list = $util.emptyArray;
        s2c_offline_practice_reward_notify.cmd = 6413;
        s2c_offline_practice_reward_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.practiceSecs);
            w.uint32(16).int32(m.leftSecs);
            w.uint32(24).int32(m.oldLevel);
            w.uint32(32).int32(m.newLevel);
            w.uint32(40).int64(m.roleExp);
            w.uint32(48).int64(m.petExp);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_offline_item_info.encode(m.list[i], w.uint32(58).fork()).ldelim();
            }
            return w;
        };
        s2c_offline_practice_reward_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_offline_practice_reward_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.practiceSecs = r.int32();
                    break;
                case 2:
                    m.leftSecs = r.int32();
                    break;
                case 3:
                    m.oldLevel = r.int32();
                    break;
                case 4:
                    m.newLevel = r.int32();
                    break;
                case 5:
                    m.roleExp = r.int64();
                    break;
                case 6:
                    m.petExp = r.int64();
                    break;
                case 7:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_offline_item_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("practiceSecs"))
                throw $util.ProtocolError("missing required 'practiceSecs'", { instance: m });
            if (!m.hasOwnProperty("leftSecs"))
                throw $util.ProtocolError("missing required 'leftSecs'", { instance: m });
            if (!m.hasOwnProperty("oldLevel"))
                throw $util.ProtocolError("missing required 'oldLevel'", { instance: m });
            if (!m.hasOwnProperty("newLevel"))
                throw $util.ProtocolError("missing required 'newLevel'", { instance: m });
            if (!m.hasOwnProperty("roleExp"))
                throw $util.ProtocolError("missing required 'roleExp'", { instance: m });
            if (!m.hasOwnProperty("petExp"))
                throw $util.ProtocolError("missing required 'petExp'", { instance: m });
            return m;
        };
        return s2c_offline_practice_reward_notify;
    })();
    $root.s2c_offline_reward_notify = (function() {
        function s2c_offline_reward_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_offline_reward_notify.prototype.practiceSecs = 0;
        s2c_offline_reward_notify.prototype.leftSecs = 0;
        s2c_offline_reward_notify.prototype.oldLevel = 0;
        s2c_offline_reward_notify.prototype.newLevel = 0;
        s2c_offline_reward_notify.prototype.roleExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_offline_reward_notify.prototype.petExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_offline_reward_notify.prototype.list = $util.emptyArray;
        s2c_offline_reward_notify.prototype.type = 0;
        s2c_offline_reward_notify.cmd = 6414;
        s2c_offline_reward_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.practiceSecs);
            w.uint32(16).int32(m.leftSecs);
            w.uint32(24).int32(m.oldLevel);
            w.uint32(32).int32(m.newLevel);
            w.uint32(40).int64(m.roleExp);
            w.uint32(48).int64(m.petExp);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_offline_item_info.encode(m.list[i], w.uint32(58).fork()).ldelim();
            }
            w.uint32(64).int32(m.type);
            return w;
        };
        s2c_offline_reward_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_offline_reward_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.practiceSecs = r.int32();
                    break;
                case 2:
                    m.leftSecs = r.int32();
                    break;
                case 3:
                    m.oldLevel = r.int32();
                    break;
                case 4:
                    m.newLevel = r.int32();
                    break;
                case 5:
                    m.roleExp = r.int64();
                    break;
                case 6:
                    m.petExp = r.int64();
                    break;
                case 7:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_offline_item_info.decode(r, r.uint32()));
                    break;
                case 8:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("practiceSecs"))
                throw $util.ProtocolError("missing required 'practiceSecs'", { instance: m });
            if (!m.hasOwnProperty("leftSecs"))
                throw $util.ProtocolError("missing required 'leftSecs'", { instance: m });
            if (!m.hasOwnProperty("oldLevel"))
                throw $util.ProtocolError("missing required 'oldLevel'", { instance: m });
            if (!m.hasOwnProperty("newLevel"))
                throw $util.ProtocolError("missing required 'newLevel'", { instance: m });
            if (!m.hasOwnProperty("roleExp"))
                throw $util.ProtocolError("missing required 'roleExp'", { instance: m });
            if (!m.hasOwnProperty("petExp"))
                throw $util.ProtocolError("missing required 'petExp'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_offline_reward_notify;
    })();
    $root.c2s_offline_practice_reward_request = (function() {
        function c2s_offline_practice_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_offline_practice_reward_request.cmd = 6415;
        c2s_offline_practice_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_offline_practice_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_offline_practice_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_offline_practice_reward_request;
    })();
    $root.p_each_day_activity = (function() {
        function p_each_day_activity(p) {
            this.timeList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_each_day_activity.prototype.id = 0;
        p_each_day_activity.prototype.openType = 0;
        p_each_day_activity.prototype.status = 0;
        p_each_day_activity.prototype.timeList = $util.emptyArray;
        p_each_day_activity.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.openType);
            w.uint32(24).int32(m.status);
            if (m.timeList != null && m.timeList.length) {
                for (var i = 0; i < m.timeList.length; ++i)
                    $root.p_time.encode(m.timeList[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        p_each_day_activity.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_each_day_activity();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.openType = r.int32();
                    break;
                case 3:
                    m.status = r.int32();
                    break;
                case 4:
                    if (!(m.timeList && m.timeList.length))
                        m.timeList = [];
                    m.timeList.push($root.p_time.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("openType"))
                throw $util.ProtocolError("missing required 'openType'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return p_each_day_activity;
    })();
    $root.p_time = (function() {
        function p_time(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_time.prototype.startTime = 0;
        p_time.prototype.endTime = 0;
        p_time.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.startTime);
            w.uint32(16).int32(m.endTime);
            return w;
        };
        p_time.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_time();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.startTime = r.int32();
                    break;
                case 2:
                    m.endTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("startTime"))
                throw $util.ProtocolError("missing required 'startTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            return m;
        };
        return p_time;
    })();
    $root.s2c_each_day_activity_info = (function() {
        function s2c_each_day_activity_info(p) {
            this.activityInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_each_day_activity_info.prototype.activityInfo = $util.emptyArray;
        s2c_each_day_activity_info.cmd = 6416;
        s2c_each_day_activity_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityInfo != null && m.activityInfo.length) {
                for (var i = 0; i < m.activityInfo.length; ++i)
                    $root.p_each_day_activity.encode(m.activityInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_each_day_activity_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_each_day_activity_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activityInfo && m.activityInfo.length))
                        m.activityInfo = [];
                    m.activityInfo.push($root.p_each_day_activity.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_each_day_activity_info;
    })();
    $root.s2c_each_day_activity_change_info = (function() {
        function s2c_each_day_activity_change_info(p) {
            this.activityInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_each_day_activity_change_info.prototype.activityInfo = $util.emptyArray;
        s2c_each_day_activity_change_info.cmd = 6417;
        s2c_each_day_activity_change_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityInfo != null && m.activityInfo.length) {
                for (var i = 0; i < m.activityInfo.length; ++i)
                    $root.p_each_day_activity.encode(m.activityInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_each_day_activity_change_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_each_day_activity_change_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activityInfo && m.activityInfo.length))
                        m.activityInfo = [];
                    m.activityInfo.push($root.p_each_day_activity.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_each_day_activity_change_info;
    })();
    $root.p_date_time_activity = (function() {
        function p_date_time_activity(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_date_time_activity.prototype.id = 0;
        p_date_time_activity.prototype.status = 0;
        p_date_time_activity.prototype.startTime = 0;
        p_date_time_activity.prototype.endTime = 0;
        p_date_time_activity.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.status);
            w.uint32(24).int32(m.startTime);
            w.uint32(32).int32(m.endTime);
            return w;
        };
        p_date_time_activity.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_date_time_activity();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.status = r.int32();
                    break;
                case 3:
                    m.startTime = r.int32();
                    break;
                case 4:
                    m.endTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            if (!m.hasOwnProperty("startTime"))
                throw $util.ProtocolError("missing required 'startTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            return m;
        };
        return p_date_time_activity;
    })();
    $root.s2c_date_time_activity_change_info = (function() {
        function s2c_date_time_activity_change_info(p) {
            this.activityInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_date_time_activity_change_info.prototype.activityInfo = $util.emptyArray;
        s2c_date_time_activity_change_info.cmd = 6418;
        s2c_date_time_activity_change_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityInfo != null && m.activityInfo.length) {
                for (var i = 0; i < m.activityInfo.length; ++i)
                    $root.p_date_time_activity.encode(m.activityInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_date_time_activity_change_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_date_time_activity_change_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activityInfo && m.activityInfo.length))
                        m.activityInfo = [];
                    m.activityInfo.push($root.p_date_time_activity.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_date_time_activity_change_info;
    })();
    $root.s2c_date_time_activity_info = (function() {
        function s2c_date_time_activity_info(p) {
            this.activityInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_date_time_activity_info.prototype.activityInfo = $util.emptyArray;
        s2c_date_time_activity_info.cmd = 6419;
        s2c_date_time_activity_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityInfo != null && m.activityInfo.length) {
                for (var i = 0; i < m.activityInfo.length; ++i)
                    $root.p_date_time_activity.encode(m.activityInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_date_time_activity_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_date_time_activity_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activityInfo && m.activityInfo.length))
                        m.activityInfo = [];
                    m.activityInfo.push($root.p_date_time_activity.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_date_time_activity_info;
    })();
    $root.p_dress_up = (function() {
        function p_dress_up(p) {
            this.change = [];
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_dress_up.prototype.type = 0;
        p_dress_up.prototype.stone = 0;
        p_dress_up.prototype.level = 0;
        p_dress_up.prototype.change = $util.emptyArray;
        p_dress_up.prototype.combat = 0;
        p_dress_up.prototype.image = 0;
        p_dress_up.prototype.effects = $util.emptyArray;
        p_dress_up.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.stone);
            w.uint32(24).int32(m.level);
            if (m.change != null && m.change.length) {
                for (var i = 0; i < m.change.length; ++i)
                    $root.p_change_dress_up.encode(m.change[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.combat);
            w.uint32(48).int32(m.image);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_dress_up_attr.encode(m.effects[i], w.uint32(58).fork()).ldelim();
            }
            return w;
        };
        p_dress_up.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_dress_up();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.stone = r.int32();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                case 4:
                    if (!(m.change && m.change.length))
                        m.change = [];
                    m.change.push($root.p_change_dress_up.decode(r, r.uint32()));
                    break;
                case 5:
                    m.combat = r.int32();
                    break;
                case 6:
                    m.image = r.int32();
                    break;
                case 7:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_dress_up_attr.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("stone"))
                throw $util.ProtocolError("missing required 'stone'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("image"))
                throw $util.ProtocolError("missing required 'image'", { instance: m });
            return m;
        };
        return p_dress_up;
    })();
    $root.p_change_dress_up = (function() {
        function p_change_dress_up(p) {
            this.effects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_change_dress_up.prototype.typeId = 0;
        p_change_dress_up.prototype.rank = 0;
        p_change_dress_up.prototype.combat = 0;
        p_change_dress_up.prototype.effects = $util.emptyArray;
        p_change_dress_up.prototype.expireTime = 0;
        p_change_dress_up.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.rank);
            w.uint32(24).int32(m.combat);
            if (m.effects != null && m.effects.length) {
                for (var i = 0; i < m.effects.length; ++i)
                    $root.p_dress_up_attr.encode(m.effects[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.expireTime);
            return w;
        };
        p_change_dress_up.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_change_dress_up();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    if (!(m.effects && m.effects.length))
                        m.effects = [];
                    m.effects.push($root.p_dress_up_attr.decode(r, r.uint32()));
                    break;
                case 5:
                    m.expireTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("expireTime"))
                throw $util.ProtocolError("missing required 'expireTime'", { instance: m });
            return m;
        };
        return p_change_dress_up;
    })();
    $root.p_dress_up_attr = (function() {
        function p_dress_up_attr(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_dress_up_attr.prototype.name = "";
        p_dress_up_attr.prototype.val = 0;
        p_dress_up_attr.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.name);
            w.uint32(16).int32(m.val);
            return w;
        };
        p_dress_up_attr.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_dress_up_attr();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.val = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("val"))
                throw $util.ProtocolError("missing required 'val'", { instance: m });
            return m;
        };
        return p_dress_up_attr;
    })();
    $root.c2s_dress_up_info_request = (function() {
        function c2s_dress_up_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dress_up_info_request.cmd = 6657;
        c2s_dress_up_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_dress_up_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dress_up_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_dress_up_info_request;
    })();
    $root.s2c_dress_up_info_reply = (function() {
        function s2c_dress_up_info_reply(p) {
            this.lockList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dress_up_info_reply.prototype.clothesDressup = null;
        s2c_dress_up_info_reply.prototype.weaponDressup = null;
        s2c_dress_up_info_reply.prototype.lightDressup = null;
        s2c_dress_up_info_reply.prototype.bubbleDressup = null;
        s2c_dress_up_info_reply.prototype.frameDressup = null;
        s2c_dress_up_info_reply.prototype.headDressup = null;
        s2c_dress_up_info_reply.prototype.bgDressup = null;
        s2c_dress_up_info_reply.prototype.lockList = $util.emptyArray;
        s2c_dress_up_info_reply.cmd = 6658;
        s2c_dress_up_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_dress_up.encode(m.clothesDressup, w.uint32(10).fork()).ldelim();
            $root.p_dress_up.encode(m.weaponDressup, w.uint32(18).fork()).ldelim();
            $root.p_dress_up.encode(m.lightDressup, w.uint32(26).fork()).ldelim();
            $root.p_dress_up.encode(m.bubbleDressup, w.uint32(34).fork()).ldelim();
            $root.p_dress_up.encode(m.frameDressup, w.uint32(42).fork()).ldelim();
            $root.p_dress_up.encode(m.headDressup, w.uint32(50).fork()).ldelim();
            $root.p_dress_up.encode(m.bgDressup, w.uint32(58).fork()).ldelim();
            if (m.lockList != null && m.lockList.length) {
                for (var i = 0; i < m.lockList.length; ++i)
                    $root.p_lock_item.encode(m.lockList[i], w.uint32(66).fork()).ldelim();
            }
            return w;
        };
        s2c_dress_up_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dress_up_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.clothesDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 2:
                    m.weaponDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 3:
                    m.lightDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 4:
                    m.bubbleDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 5:
                    m.frameDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 6:
                    m.headDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 7:
                    m.bgDressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                case 8:
                    if (!(m.lockList && m.lockList.length))
                        m.lockList = [];
                    m.lockList.push($root.p_lock_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("clothesDressup"))
                throw $util.ProtocolError("missing required 'clothesDressup'", { instance: m });
            if (!m.hasOwnProperty("weaponDressup"))
                throw $util.ProtocolError("missing required 'weaponDressup'", { instance: m });
            if (!m.hasOwnProperty("lightDressup"))
                throw $util.ProtocolError("missing required 'lightDressup'", { instance: m });
            if (!m.hasOwnProperty("bubbleDressup"))
                throw $util.ProtocolError("missing required 'bubbleDressup'", { instance: m });
            if (!m.hasOwnProperty("frameDressup"))
                throw $util.ProtocolError("missing required 'frameDressup'", { instance: m });
            if (!m.hasOwnProperty("headDressup"))
                throw $util.ProtocolError("missing required 'headDressup'", { instance: m });
            if (!m.hasOwnProperty("bgDressup"))
                throw $util.ProtocolError("missing required 'bgDressup'", { instance: m });
            return m;
        };
        return s2c_dress_up_info_reply;
    })();
    $root.s2c_dress_up_info_change_notify = (function() {
        function s2c_dress_up_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dress_up_info_change_notify.prototype.dressup = null;
        s2c_dress_up_info_change_notify.cmd = 6659;
        s2c_dress_up_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_dress_up.encode(m.dressup, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_dress_up_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dress_up_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.dressup = $root.p_dress_up.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("dressup"))
                throw $util.ProtocolError("missing required 'dressup'", { instance: m });
            return m;
        };
        return s2c_dress_up_info_change_notify;
    })();
    $root.c2s_dress_up_increase_level_request = (function() {
        function c2s_dress_up_increase_level_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dress_up_increase_level_request.prototype.type = 0;
        c2s_dress_up_increase_level_request.cmd = 6660;
        c2s_dress_up_increase_level_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_dress_up_increase_level_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dress_up_increase_level_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_dress_up_increase_level_request;
    })();
    $root.c2s_change_dress_up_activate_request = (function() {
        function c2s_change_dress_up_activate_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_dress_up_activate_request.prototype.typeId = 0;
        c2s_change_dress_up_activate_request.cmd = 6661;
        c2s_change_dress_up_activate_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            return w;
        };
        c2s_change_dress_up_activate_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_dress_up_activate_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return c2s_change_dress_up_activate_request;
    })();
    $root.p_lock_item = (function() {
        function p_lock_item(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_lock_item.prototype.itemId = 0;
        p_lock_item.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_lock_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int64(m.uniqId);
            return w;
        };
        p_lock_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_lock_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return p_lock_item;
    })();
    $root.c2s_dress_up_lock_unlock_request = (function() {
        function c2s_dress_up_lock_unlock_request(p) {
            this.lockList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dress_up_lock_unlock_request.prototype.type = 0;
        c2s_dress_up_lock_unlock_request.prototype.lockList = $util.emptyArray;
        c2s_dress_up_lock_unlock_request.cmd = 6662;
        c2s_dress_up_lock_unlock_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            if (m.lockList != null && m.lockList.length) {
                for (var i = 0; i < m.lockList.length; ++i)
                    $root.p_lock_item.encode(m.lockList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        c2s_dress_up_lock_unlock_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dress_up_lock_unlock_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    if (!(m.lockList && m.lockList.length))
                        m.lockList = [];
                    m.lockList.push($root.p_lock_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_dress_up_lock_unlock_request;
    })();
    $root.s2c_dress_up_lock_unlock_reply = (function() {
        function s2c_dress_up_lock_unlock_reply(p) {
            this.lockList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dress_up_lock_unlock_reply.prototype.lockList = $util.emptyArray;
        s2c_dress_up_lock_unlock_reply.cmd = 6663;
        s2c_dress_up_lock_unlock_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.lockList != null && m.lockList.length) {
                for (var i = 0; i < m.lockList.length; ++i)
                    $root.p_lock_item.encode(m.lockList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_dress_up_lock_unlock_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dress_up_lock_unlock_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.lockList && m.lockList.length))
                        m.lockList = [];
                    m.lockList.push($root.p_lock_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_dress_up_lock_unlock_reply;
    })();
    $root.c2s_dress_up_image_in_scene = (function() {
        function c2s_dress_up_image_in_scene(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dress_up_image_in_scene.prototype.typeId = 0;
        c2s_dress_up_image_in_scene.prototype.type = 0;
        c2s_dress_up_image_in_scene.cmd = 6664;
        c2s_dress_up_image_in_scene.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.typeId);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_dress_up_image_in_scene.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dress_up_image_in_scene();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.typeId = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_dress_up_image_in_scene;
    })();
    $root.p_dress_up_timeout = (function() {
        function p_dress_up_timeout(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_dress_up_timeout.prototype.type = 0;
        p_dress_up_timeout.prototype.typeId = 0;
        p_dress_up_timeout.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.typeId);
            return w;
        };
        p_dress_up_timeout.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_dress_up_timeout();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.typeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("typeId"))
                throw $util.ProtocolError("missing required 'typeId'", { instance: m });
            return m;
        };
        return p_dress_up_timeout;
    })();
    $root.s2c_dress_up_timeout = (function() {
        function s2c_dress_up_timeout(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dress_up_timeout.prototype.list = $util.emptyArray;
        s2c_dress_up_timeout.cmd = 6665;
        s2c_dress_up_timeout.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_dress_up_timeout.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_dress_up_timeout.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dress_up_timeout();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_dress_up_timeout.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_dress_up_timeout;
    })();
    $root.c2s_welfare_info_request = (function() {
        function c2s_welfare_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_welfare_info_request.cmd = 6913;
        c2s_welfare_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_welfare_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_welfare_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_welfare_info_request;
    })();
    $root.s2c_welfare_info_reply = (function() {
        function s2c_welfare_info_reply(p) {
            this.signInDays = [];
            this.accSignInReceivedReward = [];
            this.sevenLoginReceivedReward = [];
            this.levelSpurtReceivedReward = [];
            this.vipLevelSpurtReceivedReward = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_welfare_info_reply.prototype.signInDays = $util.emptyArray;
        s2c_welfare_info_reply.prototype.accSignInReceivedReward = $util.emptyArray;
        s2c_welfare_info_reply.prototype.sevenLoginDays = 0;
        s2c_welfare_info_reply.prototype.sevenLoginReceivedReward = $util.emptyArray;
        s2c_welfare_info_reply.prototype.levelSpurtReceivedReward = $util.emptyArray;
        s2c_welfare_info_reply.prototype.vipLevelSpurtReceivedReward = $util.emptyArray;
        s2c_welfare_info_reply.cmd = 6914;
        s2c_welfare_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.signInDays != null && m.signInDays.length) {
                for (var i = 0; i < m.signInDays.length; ++i)
                    w.uint32(8).int32(m.signInDays[i]);
            }
            if (m.accSignInReceivedReward != null && m.accSignInReceivedReward.length) {
                for (var i = 0; i < m.accSignInReceivedReward.length; ++i)
                    w.uint32(16).int32(m.accSignInReceivedReward[i]);
            }
            w.uint32(24).int32(m.sevenLoginDays);
            if (m.sevenLoginReceivedReward != null && m.sevenLoginReceivedReward.length) {
                for (var i = 0; i < m.sevenLoginReceivedReward.length; ++i)
                    w.uint32(32).int32(m.sevenLoginReceivedReward[i]);
            }
            if (m.levelSpurtReceivedReward != null && m.levelSpurtReceivedReward.length) {
                for (var i = 0; i < m.levelSpurtReceivedReward.length; ++i)
                    w.uint32(40).int32(m.levelSpurtReceivedReward[i]);
            }
            if (m.vipLevelSpurtReceivedReward != null && m.vipLevelSpurtReceivedReward.length) {
                for (var i = 0; i < m.vipLevelSpurtReceivedReward.length; ++i)
                    w.uint32(48).int32(m.vipLevelSpurtReceivedReward[i]);
            }
            return w;
        };
        s2c_welfare_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_welfare_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.signInDays && m.signInDays.length))
                        m.signInDays = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.signInDays.push(r.int32());
                    } else
                        m.signInDays.push(r.int32());
                    break;
                case 2:
                    if (!(m.accSignInReceivedReward && m.accSignInReceivedReward.length))
                        m.accSignInReceivedReward = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.accSignInReceivedReward.push(r.int32());
                    } else
                        m.accSignInReceivedReward.push(r.int32());
                    break;
                case 3:
                    m.sevenLoginDays = r.int32();
                    break;
                case 4:
                    if (!(m.sevenLoginReceivedReward && m.sevenLoginReceivedReward.length))
                        m.sevenLoginReceivedReward = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.sevenLoginReceivedReward.push(r.int32());
                    } else
                        m.sevenLoginReceivedReward.push(r.int32());
                    break;
                case 5:
                    if (!(m.levelSpurtReceivedReward && m.levelSpurtReceivedReward.length))
                        m.levelSpurtReceivedReward = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.levelSpurtReceivedReward.push(r.int32());
                    } else
                        m.levelSpurtReceivedReward.push(r.int32());
                    break;
                case 6:
                    if (!(m.vipLevelSpurtReceivedReward && m.vipLevelSpurtReceivedReward.length))
                        m.vipLevelSpurtReceivedReward = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.vipLevelSpurtReceivedReward.push(r.int32());
                    } else
                        m.vipLevelSpurtReceivedReward.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("sevenLoginDays"))
                throw $util.ProtocolError("missing required 'sevenLoginDays'", { instance: m });
            return m;
        };
        return s2c_welfare_info_reply;
    })();
    $root.c2s_sign_in_request = (function() {
        function c2s_sign_in_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_sign_in_request.prototype.type = 0;
        c2s_sign_in_request.cmd = 6915;
        c2s_sign_in_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_sign_in_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_sign_in_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_sign_in_request;
    })();
    $root.c2s_fetch_acc_sign_reward_request = (function() {
        function c2s_fetch_acc_sign_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_acc_sign_reward_request.prototype.days = 0;
        c2s_fetch_acc_sign_reward_request.cmd = 6916;
        c2s_fetch_acc_sign_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.days);
            return w;
        };
        c2s_fetch_acc_sign_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_acc_sign_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.days = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("days"))
                throw $util.ProtocolError("missing required 'days'", { instance: m });
            return m;
        };
        return c2s_fetch_acc_sign_reward_request;
    })();
    $root.c2s_fetch_seven_login_reward_request = (function() {
        function c2s_fetch_seven_login_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_seven_login_reward_request.prototype.days = 0;
        c2s_fetch_seven_login_reward_request.cmd = 6917;
        c2s_fetch_seven_login_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.days);
            return w;
        };
        c2s_fetch_seven_login_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_seven_login_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.days = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("days"))
                throw $util.ProtocolError("missing required 'days'", { instance: m });
            return m;
        };
        return c2s_fetch_seven_login_reward_request;
    })();
    $root.s2c_level_spurt_limit_info_notify = (function() {
        function s2c_level_spurt_limit_info_notify(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_level_spurt_limit_info_notify.prototype.list = $util.emptyArray;
        s2c_level_spurt_limit_info_notify.cmd = 6918;
        s2c_level_spurt_limit_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_kv_pair.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_level_spurt_limit_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_level_spurt_limit_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_level_spurt_limit_info_notify;
    })();
    $root.c2s_fetch_level_spurt_gift_request = (function() {
        function c2s_fetch_level_spurt_gift_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_level_spurt_gift_request.prototype.level = 0;
        c2s_fetch_level_spurt_gift_request.prototype.type = 0;
        c2s_fetch_level_spurt_gift_request.cmd = 6919;
        c2s_fetch_level_spurt_gift_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_fetch_level_spurt_gift_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_level_spurt_gift_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_fetch_level_spurt_gift_request;
    })();
    $root.c2s_fetch_wechat_bookmark_gift_request = (function() {
        function c2s_fetch_wechat_bookmark_gift_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_wechat_bookmark_gift_request.cmd = 6920;
        c2s_fetch_wechat_bookmark_gift_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_fetch_wechat_bookmark_gift_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_wechat_bookmark_gift_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_fetch_wechat_bookmark_gift_request;
    })();
    $root.s2c_fetch_wechat_bookmark_gift_reply = (function() {
        function s2c_fetch_wechat_bookmark_gift_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fetch_wechat_bookmark_gift_reply.prototype.fetchFlag = 0;
        s2c_fetch_wechat_bookmark_gift_reply.cmd = 6921;
        s2c_fetch_wechat_bookmark_gift_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.fetchFlag);
            return w;
        };
        s2c_fetch_wechat_bookmark_gift_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fetch_wechat_bookmark_gift_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fetchFlag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fetchFlag"))
                throw $util.ProtocolError("missing required 'fetchFlag'", { instance: m });
            return m;
        };
        return s2c_fetch_wechat_bookmark_gift_reply;
    })();
    $root.c2s_is_fetch_wechat_bookmark_gift_request = (function() {
        function c2s_is_fetch_wechat_bookmark_gift_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_is_fetch_wechat_bookmark_gift_request.cmd = 6922;
        c2s_is_fetch_wechat_bookmark_gift_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_is_fetch_wechat_bookmark_gift_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_is_fetch_wechat_bookmark_gift_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_is_fetch_wechat_bookmark_gift_request;
    })();
    $root.s2c_is_fetch_wechat_bookmark_gift_request = (function() {
        function s2c_is_fetch_wechat_bookmark_gift_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_is_fetch_wechat_bookmark_gift_request.prototype.fetchFlag = 0;
        s2c_is_fetch_wechat_bookmark_gift_request.prototype.firstFlag = 0;
        s2c_is_fetch_wechat_bookmark_gift_request.cmd = 6923;
        s2c_is_fetch_wechat_bookmark_gift_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.fetchFlag);
            w.uint32(16).int32(m.firstFlag);
            return w;
        };
        s2c_is_fetch_wechat_bookmark_gift_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_is_fetch_wechat_bookmark_gift_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fetchFlag = r.int32();
                    break;
                case 2:
                    m.firstFlag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fetchFlag"))
                throw $util.ProtocolError("missing required 'fetchFlag'", { instance: m });
            if (!m.hasOwnProperty("firstFlag"))
                throw $util.ProtocolError("missing required 'firstFlag'", { instance: m });
            return m;
        };
        return s2c_is_fetch_wechat_bookmark_gift_request;
    })();
    $root.general_gang_info_p = (function() {
        function general_gang_info_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        general_gang_info_p.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        general_gang_info_p.prototype.rank = 0;
        general_gang_info_p.prototype.gangName = "";
        general_gang_info_p.prototype.gangLevel = 0;
        general_gang_info_p.prototype.totalCombat = 0;
        general_gang_info_p.prototype.leaderName = "";
        general_gang_info_p.prototype.memberCount = 0;
        general_gang_info_p.prototype.competitionLevel = 0;
        general_gang_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int32(m.rank);
            w.uint32(26).string(m.gangName);
            w.uint32(32).int32(m.gangLevel);
            w.uint32(40).int32(m.totalCombat);
            w.uint32(50).string(m.leaderName);
            w.uint32(56).int32(m.memberCount);
            w.uint32(64).int32(m.competitionLevel);
            return w;
        };
        general_gang_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.general_gang_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    m.gangName = r.string();
                    break;
                case 4:
                    m.gangLevel = r.int32();
                    break;
                case 5:
                    m.totalCombat = r.int32();
                    break;
                case 6:
                    m.leaderName = r.string();
                    break;
                case 7:
                    m.memberCount = r.int32();
                    break;
                case 8:
                    m.competitionLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("gangLevel"))
                throw $util.ProtocolError("missing required 'gangLevel'", { instance: m });
            if (!m.hasOwnProperty("totalCombat"))
                throw $util.ProtocolError("missing required 'totalCombat'", { instance: m });
            if (!m.hasOwnProperty("leaderName"))
                throw $util.ProtocolError("missing required 'leaderName'", { instance: m });
            if (!m.hasOwnProperty("memberCount"))
                throw $util.ProtocolError("missing required 'memberCount'", { instance: m });
            if (!m.hasOwnProperty("competitionLevel"))
                throw $util.ProtocolError("missing required 'competitionLevel'", { instance: m });
            return m;
        };
        return general_gang_info_p;
    })();
    $root.member_info_p = (function() {
        function member_info_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        member_info_p.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        member_info_p.prototype.roleName = "";
        member_info_p.prototype.level = 0;
        member_info_p.prototype.job = 0;
        member_info_p.prototype.contribution = 0;
        member_info_p.prototype.combat = 0;
        member_info_p.prototype.isOnline = 0;
        member_info_p.prototype.lastOnlineTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        member_info_p.prototype.contributionTot = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        member_info_p.prototype.vipLevel = 0;
        member_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.level);
            w.uint32(32).int32(m.job);
            w.uint32(40).int32(m.contribution);
            w.uint32(48).int32(m.combat);
            w.uint32(56).int32(m.isOnline);
            w.uint32(64).int64(m.lastOnlineTime);
            w.uint32(72).int64(m.contributionTot);
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(80).int32(m.vipLevel);
            return w;
        };
        member_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.member_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                case 4:
                    m.job = r.int32();
                    break;
                case 5:
                    m.contribution = r.int32();
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    m.isOnline = r.int32();
                    break;
                case 8:
                    m.lastOnlineTime = r.int64();
                    break;
                case 9:
                    m.contributionTot = r.int64();
                    break;
                case 10:
                    m.vipLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("job"))
                throw $util.ProtocolError("missing required 'job'", { instance: m });
            if (!m.hasOwnProperty("contribution"))
                throw $util.ProtocolError("missing required 'contribution'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("isOnline"))
                throw $util.ProtocolError("missing required 'isOnline'", { instance: m });
            if (!m.hasOwnProperty("lastOnlineTime"))
                throw $util.ProtocolError("missing required 'lastOnlineTime'", { instance: m });
            if (!m.hasOwnProperty("contributionTot"))
                throw $util.ProtocolError("missing required 'contributionTot'", { instance: m });
            return m;
        };
        return member_info_p;
    })();
    $root.c2s_query_gang_request = (function() {
        function c2s_query_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_gang_request.prototype.page = 0;
        c2s_query_gang_request.cmd = 7169;
        c2s_query_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.page);
            return w;
        };
        c2s_query_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.page = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("page"))
                throw $util.ProtocolError("missing required 'page'", { instance: m });
            return m;
        };
        return c2s_query_gang_request;
    })();
    $root.s2c_query_gang_reply = (function() {
        function s2c_query_gang_reply(p) {
            this.gangInfo = [];
            this.haveAppliedGangId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_gang_reply.prototype.gangInfo = $util.emptyArray;
        s2c_query_gang_reply.prototype.haveAppliedGangId = $util.emptyArray;
        s2c_query_gang_reply.cmd = 7170;
        s2c_query_gang_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.gangInfo != null && m.gangInfo.length) {
                for (var i = 0; i < m.gangInfo.length; ++i)
                    $root.general_gang_info_p.encode(m.gangInfo[i], w.uint32(10).fork()).ldelim();
            }
            if (m.haveAppliedGangId != null && m.haveAppliedGangId.length) {
                for (var i = 0; i < m.haveAppliedGangId.length; ++i)
                    w.uint32(16).int64(m.haveAppliedGangId[i]);
            }
            return w;
        };
        s2c_query_gang_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_gang_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.gangInfo && m.gangInfo.length))
                        m.gangInfo = [];
                    m.gangInfo.push($root.general_gang_info_p.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.haveAppliedGangId && m.haveAppliedGangId.length))
                        m.haveAppliedGangId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.haveAppliedGangId.push(r.int64());
                    } else
                        m.haveAppliedGangId.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_gang_reply;
    })();
    $root.c2s_search_gang_request = (function() {
        function c2s_search_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_search_gang_request.prototype.gangName = "";
        c2s_search_gang_request.cmd = 7171;
        c2s_search_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.gangName);
            return w;
        };
        c2s_search_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_search_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            return m;
        };
        return c2s_search_gang_request;
    })();
    $root.s2c_search_gang_reply = (function() {
        function s2c_search_gang_reply(p) {
            this.gangInfo = [];
            this.haveAppliedGangId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_search_gang_reply.prototype.gangInfo = $util.emptyArray;
        s2c_search_gang_reply.prototype.haveAppliedGangId = $util.emptyArray;
        s2c_search_gang_reply.cmd = 7172;
        s2c_search_gang_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.gangInfo != null && m.gangInfo.length) {
                for (var i = 0; i < m.gangInfo.length; ++i)
                    $root.general_gang_info_p.encode(m.gangInfo[i], w.uint32(10).fork()).ldelim();
            }
            if (m.haveAppliedGangId != null && m.haveAppliedGangId.length) {
                for (var i = 0; i < m.haveAppliedGangId.length; ++i)
                    w.uint32(16).int64(m.haveAppliedGangId[i]);
            }
            return w;
        };
        s2c_search_gang_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_search_gang_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.gangInfo && m.gangInfo.length))
                        m.gangInfo = [];
                    m.gangInfo.push($root.general_gang_info_p.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.haveAppliedGangId && m.haveAppliedGangId.length))
                        m.haveAppliedGangId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.haveAppliedGangId.push(r.int64());
                    } else
                        m.haveAppliedGangId.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_search_gang_reply;
    })();
    $root.applicant_info = (function() {
        function applicant_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        applicant_info.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        applicant_info.prototype.name = "";
        applicant_info.prototype.level = 0;
        applicant_info.prototype.vipLevel = 0;
        applicant_info.prototype.combat = 0;
        applicant_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.level);
            w.uint32(32).int32(m.vipLevel);
            w.uint32(40).int32(m.combat);
            return w;
        };
        applicant_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.applicant_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                case 4:
                    m.vipLevel = r.int32();
                    break;
                case 5:
                    m.combat = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("vipLevel"))
                throw $util.ProtocolError("missing required 'vipLevel'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return applicant_info;
    })();
    $root.c2s_query_own_gang_request = (function() {
        function c2s_query_own_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_own_gang_request.cmd = 7173;
        c2s_query_own_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_own_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_own_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_own_gang_request;
    })();
    $root.s2c_query_own_gang_reply = (function() {
        function s2c_query_own_gang_reply(p) {
            this.members = [];
            this.applicants = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_own_gang_reply.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_own_gang_reply.prototype.gangName = "";
        s2c_query_own_gang_reply.prototype.gangLevel = 0;
        s2c_query_own_gang_reply.prototype.leaderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_own_gang_reply.prototype.leaderName = "";
        s2c_query_own_gang_reply.prototype.memberCount = 0;
        s2c_query_own_gang_reply.prototype.competition = 0;
        s2c_query_own_gang_reply.prototype.totalCombat = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_own_gang_reply.prototype.fund = 0;
        s2c_query_own_gang_reply.prototype.board = "";
        s2c_query_own_gang_reply.prototype.members = $util.emptyArray;
        s2c_query_own_gang_reply.prototype.applicants = $util.emptyArray;
        s2c_query_own_gang_reply.prototype.isAutoAccept = 0;
        s2c_query_own_gang_reply.prototype.levelLimit = 0;
        s2c_query_own_gang_reply.prototype.combatLimit = 0;
        s2c_query_own_gang_reply.prototype.isReceivedWelfare = 0;
        s2c_query_own_gang_reply.cmd = 7174;
        s2c_query_own_gang_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(18).string(m.gangName);
            w.uint32(24).int32(m.gangLevel);
            w.uint32(32).int64(m.leaderId);
            w.uint32(42).string(m.leaderName);
            w.uint32(48).int32(m.memberCount);
            w.uint32(56).int32(m.competition);
            w.uint32(64).int64(m.totalCombat);
            w.uint32(72).int32(m.fund);
            w.uint32(82).string(m.board);
            if (m.members != null && m.members.length) {
                for (var i = 0; i < m.members.length; ++i)
                    $root.member_info_p.encode(m.members[i], w.uint32(90).fork()).ldelim();
            }
            if (m.applicants != null && m.applicants.length) {
                for (var i = 0; i < m.applicants.length; ++i)
                    $root.applicant_info.encode(m.applicants[i], w.uint32(98).fork()).ldelim();
            }
            w.uint32(104).int32(m.isAutoAccept);
            w.uint32(112).int32(m.levelLimit);
            w.uint32(120).int32(m.combatLimit);
            w.uint32(128).int32(m.isReceivedWelfare);
            return w;
        };
        s2c_query_own_gang_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_own_gang_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.gangName = r.string();
                    break;
                case 3:
                    m.gangLevel = r.int32();
                    break;
                case 4:
                    m.leaderId = r.int64();
                    break;
                case 5:
                    m.leaderName = r.string();
                    break;
                case 6:
                    m.memberCount = r.int32();
                    break;
                case 7:
                    m.competition = r.int32();
                    break;
                case 8:
                    m.totalCombat = r.int64();
                    break;
                case 9:
                    m.fund = r.int32();
                    break;
                case 10:
                    m.board = r.string();
                    break;
                case 11:
                    if (!(m.members && m.members.length))
                        m.members = [];
                    m.members.push($root.member_info_p.decode(r, r.uint32()));
                    break;
                case 12:
                    if (!(m.applicants && m.applicants.length))
                        m.applicants = [];
                    m.applicants.push($root.applicant_info.decode(r, r.uint32()));
                    break;
                case 13:
                    m.isAutoAccept = r.int32();
                    break;
                case 14:
                    m.levelLimit = r.int32();
                    break;
                case 15:
                    m.combatLimit = r.int32();
                    break;
                case 16:
                    m.isReceivedWelfare = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("gangLevel"))
                throw $util.ProtocolError("missing required 'gangLevel'", { instance: m });
            if (!m.hasOwnProperty("leaderId"))
                throw $util.ProtocolError("missing required 'leaderId'", { instance: m });
            if (!m.hasOwnProperty("leaderName"))
                throw $util.ProtocolError("missing required 'leaderName'", { instance: m });
            if (!m.hasOwnProperty("memberCount"))
                throw $util.ProtocolError("missing required 'memberCount'", { instance: m });
            if (!m.hasOwnProperty("competition"))
                throw $util.ProtocolError("missing required 'competition'", { instance: m });
            if (!m.hasOwnProperty("totalCombat"))
                throw $util.ProtocolError("missing required 'totalCombat'", { instance: m });
            if (!m.hasOwnProperty("fund"))
                throw $util.ProtocolError("missing required 'fund'", { instance: m });
            if (!m.hasOwnProperty("board"))
                throw $util.ProtocolError("missing required 'board'", { instance: m });
            if (!m.hasOwnProperty("isAutoAccept"))
                throw $util.ProtocolError("missing required 'isAutoAccept'", { instance: m });
            if (!m.hasOwnProperty("levelLimit"))
                throw $util.ProtocolError("missing required 'levelLimit'", { instance: m });
            if (!m.hasOwnProperty("combatLimit"))
                throw $util.ProtocolError("missing required 'combatLimit'", { instance: m });
            if (!m.hasOwnProperty("isReceivedWelfare"))
                throw $util.ProtocolError("missing required 'isReceivedWelfare'", { instance: m });
            return m;
        };
        return s2c_query_own_gang_reply;
    })();
    $root.c2s_create_gang_request = (function() {
        function c2s_create_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_create_gang_request.prototype.gangName = "";
        c2s_create_gang_request.cmd = 7175;
        c2s_create_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.gangName);
            return w;
        };
        c2s_create_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_create_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            return m;
        };
        return c2s_create_gang_request;
    })();
    $root.c2s_change_gang_condition_request = (function() {
        function c2s_change_gang_condition_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_gang_condition_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_change_gang_condition_request.prototype.levelLimit = 0;
        c2s_change_gang_condition_request.prototype.combatLimit = 0;
        c2s_change_gang_condition_request.prototype.isAuto = 0;
        c2s_change_gang_condition_request.cmd = 7176;
        c2s_change_gang_condition_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int32(m.levelLimit);
            w.uint32(24).int32(m.combatLimit);
            w.uint32(32).int32(m.isAuto);
            return w;
        };
        c2s_change_gang_condition_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_gang_condition_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.levelLimit = r.int32();
                    break;
                case 3:
                    m.combatLimit = r.int32();
                    break;
                case 4:
                    m.isAuto = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("levelLimit"))
                throw $util.ProtocolError("missing required 'levelLimit'", { instance: m });
            if (!m.hasOwnProperty("combatLimit"))
                throw $util.ProtocolError("missing required 'combatLimit'", { instance: m });
            if (!m.hasOwnProperty("isAuto"))
                throw $util.ProtocolError("missing required 'isAuto'", { instance: m });
            return m;
        };
        return c2s_change_gang_condition_request;
    })();
    $root.c2s_apply_gang_request = (function() {
        function c2s_apply_gang_request(p) {
            this.gangIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_apply_gang_request.prototype.gangIds = $util.emptyArray;
        c2s_apply_gang_request.cmd = 7177;
        c2s_apply_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.gangIds != null && m.gangIds.length) {
                for (var i = 0; i < m.gangIds.length; ++i)
                    w.uint32(8).int64(m.gangIds[i]);
            }
            return w;
        };
        c2s_apply_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_apply_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.gangIds && m.gangIds.length))
                        m.gangIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.gangIds.push(r.int64());
                    } else
                        m.gangIds.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_apply_gang_request;
    })();
    $root.s2c_apply_gang_reply = (function() {
        function s2c_apply_gang_reply(p) {
            this.appliedGangIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_apply_gang_reply.prototype.isAccepted = 0;
        s2c_apply_gang_reply.prototype.appliedGangIds = $util.emptyArray;
        s2c_apply_gang_reply.cmd = 7178;
        s2c_apply_gang_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isAccepted);
            if (m.appliedGangIds != null && m.appliedGangIds.length) {
                for (var i = 0; i < m.appliedGangIds.length; ++i)
                    w.uint32(16).int64(m.appliedGangIds[i]);
            }
            return w;
        };
        s2c_apply_gang_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_apply_gang_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isAccepted = r.int32();
                    break;
                case 2:
                    if (!(m.appliedGangIds && m.appliedGangIds.length))
                        m.appliedGangIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.appliedGangIds.push(r.int64());
                    } else
                        m.appliedGangIds.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isAccepted"))
                throw $util.ProtocolError("missing required 'isAccepted'", { instance: m });
            return m;
        };
        return s2c_apply_gang_reply;
    })();
    $root.s2c_apply_fail_notify = (function() {
        function s2c_apply_fail_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_apply_fail_notify.prototype.reason = 0;
        s2c_apply_fail_notify.prototype.extra = 0;
        s2c_apply_fail_notify.cmd = 7179;
        s2c_apply_fail_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.reason);
            w.uint32(16).int32(m.extra);
            return w;
        };
        s2c_apply_fail_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_apply_fail_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.reason = r.int32();
                    break;
                case 2:
                    m.extra = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("reason"))
                throw $util.ProtocolError("missing required 'reason'", { instance: m });
            if (!m.hasOwnProperty("extra"))
                throw $util.ProtocolError("missing required 'extra'", { instance: m });
            return m;
        };
        return s2c_apply_fail_notify;
    })();
    $root.s2c_have_applicant_notify = (function() {
        function s2c_have_applicant_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_have_applicant_notify.cmd = 7180;
        s2c_have_applicant_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_have_applicant_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_have_applicant_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_have_applicant_notify;
    })();
    $root.c2s_accept_gang_request = (function() {
        function c2s_accept_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_accept_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_accept_gang_request.prototype.applicant = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_accept_gang_request.cmd = 7181;
        c2s_accept_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int64(m.applicant);
            return w;
        };
        c2s_accept_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_accept_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.applicant = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("applicant"))
                throw $util.ProtocolError("missing required 'applicant'", { instance: m });
            return m;
        };
        return c2s_accept_gang_request;
    })();
    $root.c2s_accept_all_gang_request = (function() {
        function c2s_accept_all_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_accept_all_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_accept_all_gang_request.cmd = 7182;
        c2s_accept_all_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            return w;
        };
        c2s_accept_all_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_accept_all_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            return m;
        };
        return c2s_accept_all_gang_request;
    })();
    $root.s2c_accepted_notify = (function() {
        function s2c_accepted_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_accepted_notify.prototype.gangName = "";
        s2c_accepted_notify.cmd = 7183;
        s2c_accepted_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.gangName);
            return w;
        };
        s2c_accepted_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_accepted_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            return m;
        };
        return s2c_accepted_notify;
    })();
    $root.c2s_refuse_gang_request = (function() {
        function c2s_refuse_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_refuse_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_refuse_gang_request.prototype.applicant = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_refuse_gang_request.cmd = 7184;
        c2s_refuse_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int64(m.applicant);
            return w;
        };
        c2s_refuse_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_refuse_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.applicant = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("applicant"))
                throw $util.ProtocolError("missing required 'applicant'", { instance: m });
            return m;
        };
        return c2s_refuse_gang_request;
    })();
    $root.s2c_refused_notify = (function() {
        function s2c_refused_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_refused_notify.prototype.gangName = "";
        s2c_refused_notify.cmd = 7185;
        s2c_refused_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.gangName);
            return w;
        };
        s2c_refused_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_refused_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            return m;
        };
        return s2c_refused_notify;
    })();
    $root.c2s_refuse_all_gang_request = (function() {
        function c2s_refuse_all_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_refuse_all_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_refuse_all_gang_request.cmd = 7186;
        c2s_refuse_all_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            return w;
        };
        c2s_refuse_all_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_refuse_all_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            return m;
        };
        return c2s_refuse_all_gang_request;
    })();
    $root.c2s_appoint_gang_request = (function() {
        function c2s_appoint_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_appoint_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_appoint_gang_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_appoint_gang_request.prototype.jobId = 0;
        c2s_appoint_gang_request.cmd = 7187;
        c2s_appoint_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int64(m.roleId);
            w.uint32(24).int32(m.jobId);
            return w;
        };
        c2s_appoint_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_appoint_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                case 3:
                    m.jobId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("jobId"))
                throw $util.ProtocolError("missing required 'jobId'", { instance: m });
            return m;
        };
        return c2s_appoint_gang_request;
    })();
    $root.c2s_kick_out_gang_request = (function() {
        function c2s_kick_out_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_kick_out_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_kick_out_gang_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_kick_out_gang_request.cmd = 7188;
        c2s_kick_out_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int64(m.roleId);
            return w;
        };
        c2s_kick_out_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_kick_out_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_kick_out_gang_request;
    })();
    $root.s2c_kicked_out_notify = (function() {
        function s2c_kicked_out_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_kicked_out_notify.cmd = 7189;
        s2c_kicked_out_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_kicked_out_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_kicked_out_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_kicked_out_notify;
    })();
    $root.c2s_change_leader_request = (function() {
        function c2s_change_leader_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_leader_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_change_leader_request.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_change_leader_request.cmd = 7190;
        c2s_change_leader_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(16).int64(m.roleId);
            return w;
        };
        c2s_change_leader_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_leader_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return c2s_change_leader_request;
    })();
    $root.c2s_change_gang_board_request = (function() {
        function c2s_change_gang_board_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_gang_board_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_change_gang_board_request.prototype.board = "";
        c2s_change_gang_board_request.cmd = 7191;
        c2s_change_gang_board_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(18).string(m.board);
            return w;
        };
        c2s_change_gang_board_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_gang_board_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.board = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("board"))
                throw $util.ProtocolError("missing required 'board'", { instance: m });
            return m;
        };
        return c2s_change_gang_board_request;
    })();
    $root.c2s_leave_gang_request = (function() {
        function c2s_leave_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_leave_gang_request.cmd = 7192;
        c2s_leave_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            return w;
        };
        c2s_leave_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            return m;
        };
        return c2s_leave_gang_request;
    })();
    $root.c2s_upgrade_gang_request = (function() {
        function c2s_upgrade_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_upgrade_gang_request.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_upgrade_gang_request.cmd = 7193;
        c2s_upgrade_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            return w;
        };
        c2s_upgrade_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_upgrade_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            return m;
        };
        return c2s_upgrade_gang_request;
    })();
    $root.c2s_receive_gang_welfare_request = (function() {
        function c2s_receive_gang_welfare_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_receive_gang_welfare_request.cmd = 7194;
        c2s_receive_gang_welfare_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_receive_gang_welfare_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_receive_gang_welfare_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_receive_gang_welfare_request;
    })();
    $root.c2s_invite_join_gang_request = (function() {
        function c2s_invite_join_gang_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_invite_join_gang_request.prototype.target = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_invite_join_gang_request.cmd = 7195;
        c2s_invite_join_gang_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.target);
            return w;
        };
        c2s_invite_join_gang_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_invite_join_gang_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.target = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("target"))
                throw $util.ProtocolError("missing required 'target'", { instance: m });
            return m;
        };
        return c2s_invite_join_gang_request;
    })();
    $root.s2c_invite_join_gang_notify = (function() {
        function s2c_invite_join_gang_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_invite_join_gang_notify.prototype.roleName = "";
        s2c_invite_join_gang_notify.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_invite_join_gang_notify.prototype.gangName = "";
        s2c_invite_join_gang_notify.cmd = 7196;
        s2c_invite_join_gang_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.roleName);
            w.uint32(16).int64(m.gangId);
            w.uint32(26).string(m.gangName);
            return w;
        };
        s2c_invite_join_gang_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_invite_join_gang_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleName = r.string();
                    break;
                case 2:
                    m.gangId = r.int64();
                    break;
                case 3:
                    m.gangName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            return m;
        };
        return s2c_invite_join_gang_notify;
    })();
    $root.p_skill_pairs = (function() {
        function p_skill_pairs(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_skill_pairs.prototype.skillId = 0;
        p_skill_pairs.prototype.skillLevel = 0;
        p_skill_pairs.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillId);
            w.uint32(16).int32(m.skillLevel);
            return w;
        };
        p_skill_pairs.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_skill_pairs();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                case 2:
                    m.skillLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            if (!m.hasOwnProperty("skillLevel"))
                throw $util.ProtocolError("missing required 'skillLevel'", { instance: m });
            return m;
        };
        return p_skill_pairs;
    })();
    $root.c2s_query_gang_skill_request = (function() {
        function c2s_query_gang_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_gang_skill_request.cmd = 7197;
        c2s_query_gang_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_gang_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_gang_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_gang_skill_request;
    })();
    $root.s2c_query_gang_skill_reply = (function() {
        function s2c_query_gang_skill_reply(p) {
            this.info = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_gang_skill_reply.prototype.info = $util.emptyArray;
        s2c_query_gang_skill_reply.cmd = 7198;
        s2c_query_gang_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.info != null && m.info.length) {
                for (var i = 0; i < m.info.length; ++i)
                    $root.p_skill_pairs.encode(m.info[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_gang_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_gang_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.info && m.info.length))
                        m.info = [];
                    m.info.push($root.p_skill_pairs.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_gang_skill_reply;
    })();
    $root.c2s_learn_gang_skill_request = (function() {
        function c2s_learn_gang_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_learn_gang_skill_request.prototype.skillId = 0;
        c2s_learn_gang_skill_request.cmd = 7199;
        c2s_learn_gang_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillId);
            return w;
        };
        c2s_learn_gang_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_learn_gang_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            return m;
        };
        return c2s_learn_gang_skill_request;
    })();
    $root.p_store_house_record = (function() {
        function p_store_house_record(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_store_house_record.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_store_house_record.prototype.name = "";
        p_store_house_record.prototype.operateType = 0;
        p_store_house_record.prototype.equip = null;
        p_store_house_record.prototype.color = 0;
        p_store_house_record.prototype.timestamp = 0;
        p_store_house_record.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.operateType);
            $root.item_simple.encode(m.equip, w.uint32(34).fork()).ldelim();
            w.uint32(40).int32(m.color);
            w.uint32(48).int32(m.timestamp);
            return w;
        };
        p_store_house_record.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_store_house_record();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.operateType = r.int32();
                    break;
                case 4:
                    m.equip = $root.item_simple.decode(r, r.uint32());
                    break;
                case 5:
                    m.color = r.int32();
                    break;
                case 6:
                    m.timestamp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("operateType"))
                throw $util.ProtocolError("missing required 'operateType'", { instance: m });
            if (!m.hasOwnProperty("equip"))
                throw $util.ProtocolError("missing required 'equip'", { instance: m });
            if (!m.hasOwnProperty("color"))
                throw $util.ProtocolError("missing required 'color'", { instance: m });
            if (!m.hasOwnProperty("timestamp"))
                throw $util.ProtocolError("missing required 'timestamp'", { instance: m });
            return m;
        };
        return p_store_house_record;
    })();
    $root.c2s_query_gang_store_house_request = (function() {
        function c2s_query_gang_store_house_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_gang_store_house_request.cmd = 7200;
        c2s_query_gang_store_house_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_gang_store_house_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_gang_store_house_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_gang_store_house_request;
    })();
    $root.s2c_query_gang_store_house_reply = (function() {
        function s2c_query_gang_store_house_reply(p) {
            this.equips = [];
            this.records = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_gang_store_house_reply.prototype.storePoint = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_gang_store_house_reply.prototype.equips = $util.emptyArray;
        s2c_query_gang_store_house_reply.prototype.records = $util.emptyArray;
        s2c_query_gang_store_house_reply.cmd = 7201;
        s2c_query_gang_store_house_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.storePoint);
            if (m.equips != null && m.equips.length) {
                for (var i = 0; i < m.equips.length; ++i)
                    $root.p_item.encode(m.equips[i], w.uint32(18).fork()).ldelim();
            }
            if (m.records != null && m.records.length) {
                for (var i = 0; i < m.records.length; ++i)
                    $root.p_store_house_record.encode(m.records[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_query_gang_store_house_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_gang_store_house_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.storePoint = r.int64();
                    break;
                case 2:
                    if (!(m.equips && m.equips.length))
                        m.equips = [];
                    m.equips.push($root.p_item.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.records && m.records.length))
                        m.records = [];
                    m.records.push($root.p_store_house_record.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("storePoint"))
                throw $util.ProtocolError("missing required 'storePoint'", { instance: m });
            return m;
        };
        return s2c_query_gang_store_house_reply;
    })();
    $root.s2c_store_point_changed_notify = (function() {
        function s2c_store_point_changed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_store_point_changed_notify.prototype.storePoint = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_store_point_changed_notify.cmd = 7202;
        s2c_store_point_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.storePoint);
            return w;
        };
        s2c_store_point_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_store_point_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.storePoint = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("storePoint"))
                throw $util.ProtocolError("missing required 'storePoint'", { instance: m });
            return m;
        };
        return s2c_store_point_changed_notify;
    })();
    $root.s2c_gang_store_house_record_notify = (function() {
        function s2c_gang_store_house_record_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_store_house_record_notify.prototype.record = null;
        s2c_gang_store_house_record_notify.prototype.json = "";
        s2c_gang_store_house_record_notify.cmd = 7203;
        s2c_gang_store_house_record_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_store_house_record.encode(m.record, w.uint32(10).fork()).ldelim();
            w.uint32(18).string(m.json);
            return w;
        };
        s2c_gang_store_house_record_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_store_house_record_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.record = $root.p_store_house_record.decode(r, r.uint32());
                    break;
                case 2:
                    m.json = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("record"))
                throw $util.ProtocolError("missing required 'record'", { instance: m });
            if (!m.hasOwnProperty("json"))
                throw $util.ProtocolError("missing required 'json'", { instance: m });
            return m;
        };
        return s2c_gang_store_house_record_notify;
    })();
    $root.c2s_query_equipment_record_request = (function() {
        function c2s_query_equipment_record_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_equipment_record_request.prototype.equips = null;
        c2s_query_equipment_record_request.cmd = 7204;
        c2s_query_equipment_record_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.item_simple.encode(m.equips, w.uint32(10).fork()).ldelim();
            return w;
        };
        c2s_query_equipment_record_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_equipment_record_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equips = $root.item_simple.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("equips"))
                throw $util.ProtocolError("missing required 'equips'", { instance: m });
            return m;
        };
        return c2s_query_equipment_record_request;
    })();
    $root.s2c_query_equipment_record_reply = (function() {
        function s2c_query_equipment_record_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_equipment_record_reply.prototype.json = "";
        s2c_query_equipment_record_reply.cmd = 7205;
        s2c_query_equipment_record_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.json);
            return w;
        };
        s2c_query_equipment_record_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_equipment_record_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.json = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("json"))
                throw $util.ProtocolError("missing required 'json'", { instance: m });
            return m;
        };
        return s2c_query_equipment_record_reply;
    })();
    $root.c2s_contribute_equipment_request = (function() {
        function c2s_contribute_equipment_request(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_contribute_equipment_request.prototype.items = $util.emptyArray;
        c2s_contribute_equipment_request.cmd = 7206;
        c2s_contribute_equipment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_simple.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        c2s_contribute_equipment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_contribute_equipment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_simple.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_contribute_equipment_request;
    })();
    $root.c2s_exchange_equipment_request = (function() {
        function c2s_exchange_equipment_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_exchange_equipment_request.prototype.item = null;
        c2s_exchange_equipment_request.cmd = 7207;
        c2s_exchange_equipment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.item_simple.encode(m.item, w.uint32(10).fork()).ldelim();
            return w;
        };
        c2s_exchange_equipment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_exchange_equipment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.item = $root.item_simple.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("item"))
                throw $util.ProtocolError("missing required 'item'", { instance: m });
            return m;
        };
        return c2s_exchange_equipment_request;
    })();
    $root.c2s_destroy_equipment_request = (function() {
        function c2s_destroy_equipment_request(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_destroy_equipment_request.prototype.items = $util.emptyArray;
        c2s_destroy_equipment_request.cmd = 7208;
        c2s_destroy_equipment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.item_simple.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        c2s_destroy_equipment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_destroy_equipment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.item_simple.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_destroy_equipment_request;
    })();
    $root.war_situation = (function() {
        function war_situation(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        war_situation.prototype.gangId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        war_situation.prototype.gangName = "";
        war_situation.prototype.rank = 0;
        war_situation.prototype.warState = 0;
        war_situation.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.gangId);
            w.uint32(18).string(m.gangName);
            w.uint32(24).int32(m.rank);
            w.uint32(32).int32(m.warState);
            return w;
        };
        war_situation.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.war_situation();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int64();
                    break;
                case 2:
                    m.gangName = r.string();
                    break;
                case 3:
                    m.rank = r.int32();
                    break;
                case 4:
                    m.warState = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("warState"))
                throw $util.ProtocolError("missing required 'warState'", { instance: m });
            return m;
        };
        return war_situation;
    })();
    $root.c2s_query_gang_war_request = (function() {
        function c2s_query_gang_war_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_gang_war_request.cmd = 7209;
        c2s_query_gang_war_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_gang_war_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_gang_war_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_gang_war_request;
    })();
    $root.s2c_query_gang_war_reply = (function() {
        function s2c_query_gang_war_reply(p) {
            this.firstLevel = [];
            this.secondLevel = [];
            this.thirdLevel = [];
            this.fourthLevel = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_gang_war_reply.prototype.isFirstTime = 0;
        s2c_query_gang_war_reply.prototype.isBegin = 0;
        s2c_query_gang_war_reply.prototype.round = 0;
        s2c_query_gang_war_reply.prototype.finishTime = 0;
        s2c_query_gang_war_reply.prototype.firstLevel = $util.emptyArray;
        s2c_query_gang_war_reply.prototype.secondLevel = $util.emptyArray;
        s2c_query_gang_war_reply.prototype.thirdLevel = $util.emptyArray;
        s2c_query_gang_war_reply.prototype.fourthLevel = $util.emptyArray;
        s2c_query_gang_war_reply.prototype.lastWinner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_gang_war_reply.cmd = 7210;
        s2c_query_gang_war_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isFirstTime);
            w.uint32(16).int32(m.isBegin);
            w.uint32(24).int32(m.round);
            w.uint32(32).int32(m.finishTime);
            if (m.firstLevel != null && m.firstLevel.length) {
                for (var i = 0; i < m.firstLevel.length; ++i)
                    $root.war_situation.encode(m.firstLevel[i], w.uint32(42).fork()).ldelim();
            }
            if (m.secondLevel != null && m.secondLevel.length) {
                for (var i = 0; i < m.secondLevel.length; ++i)
                    $root.war_situation.encode(m.secondLevel[i], w.uint32(50).fork()).ldelim();
            }
            if (m.thirdLevel != null && m.thirdLevel.length) {
                for (var i = 0; i < m.thirdLevel.length; ++i)
                    $root.war_situation.encode(m.thirdLevel[i], w.uint32(58).fork()).ldelim();
            }
            if (m.fourthLevel != null && m.fourthLevel.length) {
                for (var i = 0; i < m.fourthLevel.length; ++i)
                    $root.war_situation.encode(m.fourthLevel[i], w.uint32(66).fork()).ldelim();
            }
            w.uint32(72).int64(m.lastWinner);
            return w;
        };
        s2c_query_gang_war_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_gang_war_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isFirstTime = r.int32();
                    break;
                case 2:
                    m.isBegin = r.int32();
                    break;
                case 3:
                    m.round = r.int32();
                    break;
                case 4:
                    m.finishTime = r.int32();
                    break;
                case 5:
                    if (!(m.firstLevel && m.firstLevel.length))
                        m.firstLevel = [];
                    m.firstLevel.push($root.war_situation.decode(r, r.uint32()));
                    break;
                case 6:
                    if (!(m.secondLevel && m.secondLevel.length))
                        m.secondLevel = [];
                    m.secondLevel.push($root.war_situation.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.thirdLevel && m.thirdLevel.length))
                        m.thirdLevel = [];
                    m.thirdLevel.push($root.war_situation.decode(r, r.uint32()));
                    break;
                case 8:
                    if (!(m.fourthLevel && m.fourthLevel.length))
                        m.fourthLevel = [];
                    m.fourthLevel.push($root.war_situation.decode(r, r.uint32()));
                    break;
                case 9:
                    m.lastWinner = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isFirstTime"))
                throw $util.ProtocolError("missing required 'isFirstTime'", { instance: m });
            if (!m.hasOwnProperty("isBegin"))
                throw $util.ProtocolError("missing required 'isBegin'", { instance: m });
            if (!m.hasOwnProperty("round"))
                throw $util.ProtocolError("missing required 'round'", { instance: m });
            if (!m.hasOwnProperty("finishTime"))
                throw $util.ProtocolError("missing required 'finishTime'", { instance: m });
            if (!m.hasOwnProperty("lastWinner"))
                throw $util.ProtocolError("missing required 'lastWinner'", { instance: m });
            return m;
        };
        return s2c_query_gang_war_reply;
    })();
    $root.c2s_enter_gang_war_request = (function() {
        function c2s_enter_gang_war_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_gang_war_request.cmd = 7211;
        c2s_enter_gang_war_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_gang_war_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_gang_war_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_gang_war_request;
    })();
    $root.c2s_leave_gang_war_request = (function() {
        function c2s_leave_gang_war_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_gang_war_request.cmd = 7212;
        c2s_leave_gang_war_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_leave_gang_war_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_gang_war_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_leave_gang_war_request;
    })();
    $root.s2c_gang_war_score_notify = (function() {
        function s2c_gang_war_score_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_war_score_notify.prototype.score = 0;
        s2c_gang_war_score_notify.cmd = 7213;
        s2c_gang_war_score_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.score);
            return w;
        };
        s2c_gang_war_score_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_war_score_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return s2c_gang_war_score_notify;
    })();
    $root.s2c_gang_war_enemy_score_notify = (function() {
        function s2c_gang_war_enemy_score_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_war_enemy_score_notify.prototype.score = 0;
        s2c_gang_war_enemy_score_notify.cmd = 7214;
        s2c_gang_war_enemy_score_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.score);
            return w;
        };
        s2c_gang_war_enemy_score_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_war_enemy_score_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return s2c_gang_war_enemy_score_notify;
    })();
    $root.c2s_occupy_crystal_request = (function() {
        function c2s_occupy_crystal_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_occupy_crystal_request.prototype.id = 0;
        c2s_occupy_crystal_request.cmd = 7215;
        c2s_occupy_crystal_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_occupy_crystal_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_occupy_crystal_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_occupy_crystal_request;
    })();
    $root.p_crystal = (function() {
        function p_crystal(p) {
            this.roleList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_crystal.prototype.id = 0;
        p_crystal.prototype.belong = 0;
        p_crystal.prototype.occupySide = 0;
        p_crystal.prototype.roleList = $util.emptyArray;
        p_crystal.prototype.process = 0;
        p_crystal.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.belong);
            w.uint32(24).int32(m.occupySide);
            if (m.roleList != null && m.roleList.length) {
                for (var i = 0; i < m.roleList.length; ++i)
                    w.uint32(32).int64(m.roleList[i]);
            }
            w.uint32(40).int32(m.process);
            return w;
        };
        p_crystal.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_crystal();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.belong = r.int32();
                    break;
                case 3:
                    m.occupySide = r.int32();
                    break;
                case 4:
                    if (!(m.roleList && m.roleList.length))
                        m.roleList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.roleList.push(r.int64());
                    } else
                        m.roleList.push(r.int64());
                    break;
                case 5:
                    m.process = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("belong"))
                throw $util.ProtocolError("missing required 'belong'", { instance: m });
            if (!m.hasOwnProperty("occupySide"))
                throw $util.ProtocolError("missing required 'occupySide'", { instance: m });
            if (!m.hasOwnProperty("process"))
                throw $util.ProtocolError("missing required 'process'", { instance: m });
            return m;
        };
        return p_crystal;
    })();
    $root.s2c_crystal_notify = (function() {
        function s2c_crystal_notify(p) {
            this.info = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_crystal_notify.prototype.info = $util.emptyArray;
        s2c_crystal_notify.cmd = 7216;
        s2c_crystal_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.info != null && m.info.length) {
                for (var i = 0; i < m.info.length; ++i)
                    $root.p_crystal.encode(m.info[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_crystal_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_crystal_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.info && m.info.length))
                        m.info = [];
                    m.info.push($root.p_crystal.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_crystal_notify;
    })();
    $root.p_result_rank = (function() {
        function p_result_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_result_rank.prototype.rank = 0;
        p_result_rank.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_result_rank.prototype.name = "";
        p_result_rank.prototype.occupyTimes = 0;
        p_result_rank.prototype.killTimes = 0;
        p_result_rank.prototype.contribution = 0;
        p_result_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            w.uint32(16).int64(m.id);
            w.uint32(26).string(m.name);
            w.uint32(32).int32(m.occupyTimes);
            w.uint32(40).int32(m.killTimes);
            w.uint32(48).int32(m.contribution);
            return w;
        };
        p_result_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_result_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.id = r.int64();
                    break;
                case 3:
                    m.name = r.string();
                    break;
                case 4:
                    m.occupyTimes = r.int32();
                    break;
                case 5:
                    m.killTimes = r.int32();
                    break;
                case 6:
                    m.contribution = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("occupyTimes"))
                throw $util.ProtocolError("missing required 'occupyTimes'", { instance: m });
            if (!m.hasOwnProperty("killTimes"))
                throw $util.ProtocolError("missing required 'killTimes'", { instance: m });
            if (!m.hasOwnProperty("contribution"))
                throw $util.ProtocolError("missing required 'contribution'", { instance: m });
            return m;
        };
        return p_result_rank;
    })();
    $root.s2c_result_notify = (function() {
        function s2c_result_notify(p) {
            this.result = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_result_notify.prototype.winOrLose = 0;
        s2c_result_notify.prototype.result = $util.emptyArray;
        s2c_result_notify.cmd = 7217;
        s2c_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.winOrLose);
            if (m.result != null && m.result.length) {
                for (var i = 0; i < m.result.length; ++i)
                    $root.p_result_rank.encode(m.result[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.winOrLose = r.int32();
                    break;
                case 2:
                    if (!(m.result && m.result.length))
                        m.result = [];
                    m.result.push($root.p_result_rank.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("winOrLose"))
                throw $util.ProtocolError("missing required 'winOrLose'", { instance: m });
            return m;
        };
        return s2c_result_notify;
    })();
    $root.c2s_query_gang_war_reward_request = (function() {
        function c2s_query_gang_war_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_gang_war_reward_request.cmd = 7218;
        c2s_query_gang_war_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_gang_war_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_gang_war_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_gang_war_reward_request;
    })();
    $root.s2c_query_gang_war_reward_reply = (function() {
        function s2c_query_gang_war_reward_reply(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_gang_war_reward_reply.prototype.gangName = "";
        s2c_query_gang_war_reward_reply.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_query_gang_war_reward_reply.prototype.type = 0;
        s2c_query_gang_war_reward_reply.prototype.winTimes = 0;
        s2c_query_gang_war_reward_reply.prototype.endTimes = 0;
        s2c_query_gang_war_reward_reply.prototype.rewards = $util.emptyArray;
        s2c_query_gang_war_reward_reply.prototype.isDistributed = 0;
        s2c_query_gang_war_reward_reply.prototype.isWelfareReceived = 0;
        s2c_query_gang_war_reward_reply.cmd = 7219;
        s2c_query_gang_war_reward_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.gangName);
            w.uint32(16).int64(m.roleId);
            w.uint32(24).int32(m.type);
            w.uint32(32).int32(m.winTimes);
            w.uint32(40).int32(m.endTimes);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.p_item.encode(m.rewards[i], w.uint32(50).fork()).ldelim();
            }
            w.uint32(56).int32(m.isDistributed);
            w.uint32(64).int32(m.isWelfareReceived);
            return w;
        };
        s2c_query_gang_war_reward_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_gang_war_reward_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangName = r.string();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                case 3:
                    m.type = r.int32();
                    break;
                case 4:
                    m.winTimes = r.int32();
                    break;
                case 5:
                    m.endTimes = r.int32();
                    break;
                case 6:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.p_item.decode(r, r.uint32()));
                    break;
                case 7:
                    m.isDistributed = r.int32();
                    break;
                case 8:
                    m.isWelfareReceived = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("winTimes"))
                throw $util.ProtocolError("missing required 'winTimes'", { instance: m });
            if (!m.hasOwnProperty("endTimes"))
                throw $util.ProtocolError("missing required 'endTimes'", { instance: m });
            if (!m.hasOwnProperty("isDistributed"))
                throw $util.ProtocolError("missing required 'isDistributed'", { instance: m });
            if (!m.hasOwnProperty("isWelfareReceived"))
                throw $util.ProtocolError("missing required 'isWelfareReceived'", { instance: m });
            return m;
        };
        return s2c_query_gang_war_reward_reply;
    })();
    $root.c2s_distribute_gang_war_reward_request = (function() {
        function c2s_distribute_gang_war_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_distribute_gang_war_reward_request.prototype.toWho = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_distribute_gang_war_reward_request.cmd = 7220;
        c2s_distribute_gang_war_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.toWho);
            return w;
        };
        c2s_distribute_gang_war_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_distribute_gang_war_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.toWho = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("toWho"))
                throw $util.ProtocolError("missing required 'toWho'", { instance: m });
            return m;
        };
        return c2s_distribute_gang_war_reward_request;
    })();
    $root.c2s_receive_gang_war_welfare_request = (function() {
        function c2s_receive_gang_war_welfare_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_receive_gang_war_welfare_request.cmd = 7221;
        c2s_receive_gang_war_welfare_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_receive_gang_war_welfare_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_receive_gang_war_welfare_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_receive_gang_war_welfare_request;
    })();
    $root.c2s_enter_gang_dinner_request = (function() {
        function c2s_enter_gang_dinner_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_gang_dinner_request.cmd = 7222;
        c2s_enter_gang_dinner_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_gang_dinner_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_gang_dinner_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_gang_dinner_request;
    })();
    $root.s2c_have_eat_chicken_notify = (function() {
        function s2c_have_eat_chicken_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_have_eat_chicken_notify.prototype.haveEatOrNot = 0;
        s2c_have_eat_chicken_notify.cmd = 7223;
        s2c_have_eat_chicken_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.haveEatOrNot);
            return w;
        };
        s2c_have_eat_chicken_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_have_eat_chicken_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.haveEatOrNot = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("haveEatOrNot"))
                throw $util.ProtocolError("missing required 'haveEatOrNot'", { instance: m });
            return m;
        };
        return s2c_have_eat_chicken_notify;
    })();
    $root.c2s_eat_chicken_request = (function() {
        function c2s_eat_chicken_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_eat_chicken_request.cmd = 7224;
        c2s_eat_chicken_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_eat_chicken_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_eat_chicken_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_eat_chicken_request;
    })();
    $root.c2s_leave_gang_dinner_request = (function() {
        function c2s_leave_gang_dinner_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_gang_dinner_request.cmd = 7225;
        c2s_leave_gang_dinner_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_leave_gang_dinner_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_gang_dinner_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_leave_gang_dinner_request;
    })();
    $root.s2c_gang_dinner_question_notify = (function() {
        function s2c_gang_dinner_question_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_dinner_question_notify.prototype.questionId = 0;
        s2c_gang_dinner_question_notify.cmd = 7226;
        s2c_gang_dinner_question_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.questionId);
            return w;
        };
        s2c_gang_dinner_question_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_dinner_question_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.questionId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("questionId"))
                throw $util.ProtocolError("missing required 'questionId'", { instance: m });
            return m;
        };
        return s2c_gang_dinner_question_notify;
    })();
    $root.s2c_gang_dinner_answer_notify = (function() {
        function s2c_gang_dinner_answer_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_dinner_answer_notify.prototype.isRight = 0;
        s2c_gang_dinner_answer_notify.cmd = 7227;
        s2c_gang_dinner_answer_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isRight);
            return w;
        };
        s2c_gang_dinner_answer_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_dinner_answer_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isRight = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isRight"))
                throw $util.ProtocolError("missing required 'isRight'", { instance: m });
            return m;
        };
        return s2c_gang_dinner_answer_notify;
    })();
    $root.p_rank = (function() {
        function p_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_rank.prototype.rank = 0;
        p_rank.prototype.gangName = "";
        p_rank.prototype.score = 0;
        p_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            w.uint32(18).string(m.gangName);
            w.uint32(24).int32(m.score);
            return w;
        };
        p_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.gangName = r.string();
                    break;
                case 3:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return p_rank;
    })();
    $root.s2c_gang_dinner_reward_notify = (function() {
        function s2c_gang_dinner_reward_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_dinner_reward_notify.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_gang_dinner_reward_notify.prototype.contribute = 0;
        s2c_gang_dinner_reward_notify.cmd = 7228;
        s2c_gang_dinner_reward_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.exp);
            w.uint32(16).int32(m.contribute);
            return w;
        };
        s2c_gang_dinner_reward_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_dinner_reward_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.exp = r.int64();
                    break;
                case 2:
                    m.contribute = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("contribute"))
                throw $util.ProtocolError("missing required 'contribute'", { instance: m });
            return m;
        };
        return s2c_gang_dinner_reward_notify;
    })();
    $root.s2c_gang_dinner_rank_notify = (function() {
        function s2c_gang_dinner_rank_notify(p) {
            this.rank = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_dinner_rank_notify.prototype.rank = $util.emptyArray;
        s2c_gang_dinner_rank_notify.cmd = 7229;
        s2c_gang_dinner_rank_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rank != null && m.rank.length) {
                for (var i = 0; i < m.rank.length; ++i)
                    $root.p_rank.encode(m.rank[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_gang_dinner_rank_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_dinner_rank_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rank && m.rank.length))
                        m.rank = [];
                    m.rank.push($root.p_rank.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_gang_dinner_rank_notify;
    })();
    $root.c2s_gang_beast_info = (function() {
        function c2s_gang_beast_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_gang_beast_info.cmd = 7230;
        c2s_gang_beast_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_gang_beast_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_gang_beast_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_gang_beast_info;
    })();
    $root.s2c_gang_beast_info = (function() {
        function s2c_gang_beast_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_beast_info.prototype.beastFood = 0;
        s2c_gang_beast_info.prototype.beastTimes = 0;
        s2c_gang_beast_info.prototype.beastCd = 0;
        s2c_gang_beast_info.prototype.beastInstanceStatus = 0;
        s2c_gang_beast_info.cmd = 7231;
        s2c_gang_beast_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beastFood);
            w.uint32(16).int32(m.beastTimes);
            w.uint32(24).int32(m.beastCd);
            w.uint32(32).int32(m.beastInstanceStatus);
            return w;
        };
        s2c_gang_beast_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_beast_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beastFood = r.int32();
                    break;
                case 2:
                    m.beastTimes = r.int32();
                    break;
                case 3:
                    m.beastCd = r.int32();
                    break;
                case 4:
                    m.beastInstanceStatus = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beastFood"))
                throw $util.ProtocolError("missing required 'beastFood'", { instance: m });
            if (!m.hasOwnProperty("beastTimes"))
                throw $util.ProtocolError("missing required 'beastTimes'", { instance: m });
            if (!m.hasOwnProperty("beastCd"))
                throw $util.ProtocolError("missing required 'beastCd'", { instance: m });
            if (!m.hasOwnProperty("beastInstanceStatus"))
                throw $util.ProtocolError("missing required 'beastInstanceStatus'", { instance: m });
            return m;
        };
        return s2c_gang_beast_info;
    })();
    $root.c2s_start_gang_beast_request = (function() {
        function c2s_start_gang_beast_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_start_gang_beast_request.cmd = 7232;
        c2s_start_gang_beast_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_start_gang_beast_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_start_gang_beast_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_start_gang_beast_request;
    })();
    $root.c2s_enter_gang_beast_request = (function() {
        function c2s_enter_gang_beast_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_gang_beast_request.cmd = 7233;
        c2s_enter_gang_beast_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_gang_beast_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_gang_beast_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_gang_beast_request;
    })();
    $root.s2c_gang_beast_open = (function() {
        function s2c_gang_beast_open(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_beast_open.prototype.isOpen = 0;
        s2c_gang_beast_open.cmd = 7234;
        s2c_gang_beast_open.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isOpen);
            return w;
        };
        s2c_gang_beast_open.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_beast_open();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isOpen = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isOpen"))
                throw $util.ProtocolError("missing required 'isOpen'", { instance: m });
            return m;
        };
        return s2c_gang_beast_open;
    })();
    $root.p_gangbattle_rank_reward = (function() {
        function p_gangbattle_rank_reward(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_gangbattle_rank_reward.prototype.rank = 0;
        p_gangbattle_rank_reward.prototype.gangId = 0;
        p_gangbattle_rank_reward.prototype.gangName = "";
        p_gangbattle_rank_reward.prototype.gangLeader = "";
        p_gangbattle_rank_reward.prototype.rewards = $util.emptyArray;
        p_gangbattle_rank_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            w.uint32(16).int32(m.gangId);
            w.uint32(26).string(m.gangName);
            w.uint32(34).string(m.gangLeader);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.p_reward_item.encode(m.rewards[i], w.uint32(42).fork()).ldelim();
            }
            return w;
        };
        p_gangbattle_rank_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_gangbattle_rank_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.gangId = r.int32();
                    break;
                case 3:
                    m.gangName = r.string();
                    break;
                case 4:
                    m.gangLeader = r.string();
                    break;
                case 5:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.p_reward_item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("gangLeader"))
                throw $util.ProtocolError("missing required 'gangLeader'", { instance: m });
            return m;
        };
        return p_gangbattle_rank_reward;
    })();
    $root.p_reward_item = (function() {
        function p_reward_item(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_reward_item.prototype.itemId = 0;
        p_reward_item.prototype.count = 0;
        p_reward_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.count);
            return w;
        };
        p_reward_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_reward_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return p_reward_item;
    })();
    $root.c2s_get_gangbattle_rank_reward_request = (function() {
        function c2s_get_gangbattle_rank_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_gangbattle_rank_reward_request.cmd = 7235;
        c2s_get_gangbattle_rank_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_gangbattle_rank_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_gangbattle_rank_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_gangbattle_rank_reward_request;
    })();
    $root.s2c_get_gangbattle_rank_reward_reply = (function() {
        function s2c_get_gangbattle_rank_reward_reply(p) {
            this.rank = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_gangbattle_rank_reward_reply.prototype.rank = $util.emptyArray;
        s2c_get_gangbattle_rank_reward_reply.cmd = 7236;
        s2c_get_gangbattle_rank_reward_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rank != null && m.rank.length) {
                for (var i = 0; i < m.rank.length; ++i)
                    $root.p_gangbattle_rank_reward.encode(m.rank[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_get_gangbattle_rank_reward_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_gangbattle_rank_reward_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rank && m.rank.length))
                        m.rank = [];
                    m.rank.push($root.p_gangbattle_rank_reward.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_get_gangbattle_rank_reward_reply;
    })();
    $root.p_gang_war_info = (function() {
        function p_gang_war_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_gang_war_info.prototype.gangId = 0;
        p_gang_war_info.prototype.rankId = 0;
        p_gang_war_info.prototype.score = 0;
        p_gang_war_info.prototype.gangName = "";
        p_gang_war_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.gangId);
            w.uint32(16).int32(m.rankId);
            w.uint32(24).int32(m.score);
            w.uint32(34).string(m.gangName);
            return w;
        };
        p_gang_war_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_gang_war_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangId = r.int32();
                    break;
                case 2:
                    m.rankId = r.int32();
                    break;
                case 3:
                    m.score = r.int32();
                    break;
                case 4:
                    m.gangName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangId"))
                throw $util.ProtocolError("missing required 'gangId'", { instance: m });
            if (!m.hasOwnProperty("rankId"))
                throw $util.ProtocolError("missing required 'rankId'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            return m;
        };
        return p_gang_war_info;
    })();
    $root.c2s_query_role_gang_tower_request = (function() {
        function c2s_query_role_gang_tower_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_role_gang_tower_request.cmd = 7237;
        c2s_query_role_gang_tower_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_role_gang_tower_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_role_gang_tower_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_role_gang_tower_request;
    })();
    $root.s2c_role_gang_tower_notify = (function() {
        function s2c_role_gang_tower_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_gang_tower_notify.prototype.curFloor = 0;
        s2c_role_gang_tower_notify.prototype.curKillCount = 0;
        s2c_role_gang_tower_notify.prototype.isFinish = 0;
        s2c_role_gang_tower_notify.cmd = 7238;
        s2c_role_gang_tower_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.curFloor);
            w.uint32(16).int32(m.curKillCount);
            w.uint32(24).int32(m.isFinish);
            return w;
        };
        s2c_role_gang_tower_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_gang_tower_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.curFloor = r.int32();
                    break;
                case 2:
                    m.curKillCount = r.int32();
                    break;
                case 3:
                    m.isFinish = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("curFloor"))
                throw $util.ProtocolError("missing required 'curFloor'", { instance: m });
            if (!m.hasOwnProperty("curKillCount"))
                throw $util.ProtocolError("missing required 'curKillCount'", { instance: m });
            if (!m.hasOwnProperty("isFinish"))
                throw $util.ProtocolError("missing required 'isFinish'", { instance: m });
            return m;
        };
        return s2c_role_gang_tower_notify;
    })();
    $root.s2c_gang_rank_info_notify = (function() {
        function s2c_gang_rank_info_notify(p) {
            this.gangWarList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_rank_info_notify.prototype.gangWarList = $util.emptyArray;
        s2c_gang_rank_info_notify.prototype.myGangInfo = null;
        s2c_gang_rank_info_notify.cmd = 7239;
        s2c_gang_rank_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.gangWarList != null && m.gangWarList.length) {
                for (var i = 0; i < m.gangWarList.length; ++i)
                    $root.p_gang_war_info.encode(m.gangWarList[i], w.uint32(10).fork()).ldelim();
            }
            $root.p_gang_war_info.encode(m.myGangInfo, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_gang_rank_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_rank_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.gangWarList && m.gangWarList.length))
                        m.gangWarList = [];
                    m.gangWarList.push($root.p_gang_war_info.decode(r, r.uint32()));
                    break;
                case 2:
                    m.myGangInfo = $root.p_gang_war_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("myGangInfo"))
                throw $util.ProtocolError("missing required 'myGangInfo'", { instance: m });
            return m;
        };
        return s2c_gang_rank_info_notify;
    })();
    $root.s2c_gang_rank_change_notify = (function() {
        function s2c_gang_rank_change_notify(p) {
            this.gangWarList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_rank_change_notify.prototype.gangWarList = $util.emptyArray;
        s2c_gang_rank_change_notify.prototype.myGangInfo = null;
        s2c_gang_rank_change_notify.cmd = 7240;
        s2c_gang_rank_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.gangWarList != null && m.gangWarList.length) {
                for (var i = 0; i < m.gangWarList.length; ++i)
                    $root.p_gang_war_info.encode(m.gangWarList[i], w.uint32(10).fork()).ldelim();
            }
            $root.p_gang_war_info.encode(m.myGangInfo, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_gang_rank_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_rank_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.gangWarList && m.gangWarList.length))
                        m.gangWarList = [];
                    m.gangWarList.push($root.p_gang_war_info.decode(r, r.uint32()));
                    break;
                case 2:
                    m.myGangInfo = $root.p_gang_war_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("myGangInfo"))
                throw $util.ProtocolError("missing required 'myGangInfo'", { instance: m });
            return m;
        };
        return s2c_gang_rank_change_notify;
    })();
    $root.s2c_gang_tower_result_notify = (function() {
        function s2c_gang_tower_result_notify(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_tower_result_notify.prototype.isFinish = 0;
        s2c_gang_tower_result_notify.prototype.items = $util.emptyArray;
        s2c_gang_tower_result_notify.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_gang_tower_result_notify.prototype.floor = 0;
        s2c_gang_tower_result_notify.prototype.time = 0;
        s2c_gang_tower_result_notify.cmd = 7241;
        s2c_gang_tower_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isFinish);
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_kv_pair.encode(m.items[i], w.uint32(18).fork()).ldelim();
            }
            w.uint32(24).int64(m.exp);
            if (m.floor != null && Object.hasOwnProperty.call(m, "floor"))
                w.uint32(32).int32(m.floor);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(40).int32(m.time);
            return w;
        };
        s2c_gang_tower_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_tower_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isFinish = r.int32();
                    break;
                case 2:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 3:
                    m.exp = r.int64();
                    break;
                case 4:
                    m.floor = r.int32();
                    break;
                case 5:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isFinish"))
                throw $util.ProtocolError("missing required 'isFinish'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            return m;
        };
        return s2c_gang_tower_result_notify;
    })();
    $root.c2s_enter_gang_guard_request = (function() {
        function c2s_enter_gang_guard_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_gang_guard_request.cmd = 7242;
        c2s_enter_gang_guard_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_gang_guard_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_gang_guard_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_gang_guard_request;
    })();
    $root.c2s_leave_gang_guard_request = (function() {
        function c2s_leave_gang_guard_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_gang_guard_request.cmd = 7243;
        c2s_leave_gang_guard_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_leave_gang_guard_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_gang_guard_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_leave_gang_guard_request;
    })();
    $root.s2c_gang_guard_info_notify = (function() {
        function s2c_gang_guard_info_notify(p) {
            this.rankList = [];
            this.hotRewardStatus = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_guard_info_notify.prototype.rankList = $util.emptyArray;
        s2c_gang_guard_info_notify.prototype.myRank = null;
        s2c_gang_guard_info_notify.prototype.expAddi = 0;
        s2c_gang_guard_info_notify.prototype.wave = 0;
        s2c_gang_guard_info_notify.prototype.hotDegree = 0;
        s2c_gang_guard_info_notify.prototype.roleNum = 0;
        s2c_gang_guard_info_notify.prototype.hotRewardStatus = $util.emptyArray;
        s2c_gang_guard_info_notify.prototype.encourageTimes = 0;
        s2c_gang_guard_info_notify.prototype.normalCrystalTimes = 0;
        s2c_gang_guard_info_notify.prototype.advanceCrystalTimes = 0;
        s2c_gang_guard_info_notify.cmd = 7244;
        s2c_gang_guard_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_gang_guard_info.encode(m.rankList[i], w.uint32(10).fork()).ldelim();
            }
            $root.p_gang_guard_info.encode(m.myRank, w.uint32(18).fork()).ldelim();
            w.uint32(24).int32(m.expAddi);
            w.uint32(32).int32(m.wave);
            w.uint32(40).int32(m.hotDegree);
            w.uint32(48).int32(m.roleNum);
            if (m.hotRewardStatus != null && m.hotRewardStatus.length) {
                for (var i = 0; i < m.hotRewardStatus.length; ++i)
                    w.uint32(56).int32(m.hotRewardStatus[i]);
            }
            w.uint32(64).int32(m.encourageTimes);
            w.uint32(72).int32(m.normalCrystalTimes);
            w.uint32(80).int32(m.advanceCrystalTimes);
            return w;
        };
        s2c_gang_guard_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_guard_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_gang_guard_info.decode(r, r.uint32()));
                    break;
                case 2:
                    m.myRank = $root.p_gang_guard_info.decode(r, r.uint32());
                    break;
                case 3:
                    m.expAddi = r.int32();
                    break;
                case 4:
                    m.wave = r.int32();
                    break;
                case 5:
                    m.hotDegree = r.int32();
                    break;
                case 6:
                    m.roleNum = r.int32();
                    break;
                case 7:
                    if (!(m.hotRewardStatus && m.hotRewardStatus.length))
                        m.hotRewardStatus = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.hotRewardStatus.push(r.int32());
                    } else
                        m.hotRewardStatus.push(r.int32());
                    break;
                case 8:
                    m.encourageTimes = r.int32();
                    break;
                case 9:
                    m.normalCrystalTimes = r.int32();
                    break;
                case 10:
                    m.advanceCrystalTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            if (!m.hasOwnProperty("expAddi"))
                throw $util.ProtocolError("missing required 'expAddi'", { instance: m });
            if (!m.hasOwnProperty("wave"))
                throw $util.ProtocolError("missing required 'wave'", { instance: m });
            if (!m.hasOwnProperty("hotDegree"))
                throw $util.ProtocolError("missing required 'hotDegree'", { instance: m });
            if (!m.hasOwnProperty("roleNum"))
                throw $util.ProtocolError("missing required 'roleNum'", { instance: m });
            if (!m.hasOwnProperty("encourageTimes"))
                throw $util.ProtocolError("missing required 'encourageTimes'", { instance: m });
            if (!m.hasOwnProperty("normalCrystalTimes"))
                throw $util.ProtocolError("missing required 'normalCrystalTimes'", { instance: m });
            if (!m.hasOwnProperty("advanceCrystalTimes"))
                throw $util.ProtocolError("missing required 'advanceCrystalTimes'", { instance: m });
            return m;
        };
        return s2c_gang_guard_info_notify;
    })();
    $root.p_gang_guard_info = (function() {
        function p_gang_guard_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_gang_guard_info.prototype.rankId = 0;
        p_gang_guard_info.prototype.accDamage = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_gang_guard_info.prototype.roleName = "";
        p_gang_guard_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rankId);
            w.uint32(16).int64(m.accDamage);
            w.uint32(26).string(m.roleName);
            return w;
        };
        p_gang_guard_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_gang_guard_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                case 2:
                    m.accDamage = r.int64();
                    break;
                case 3:
                    m.roleName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rankId"))
                throw $util.ProtocolError("missing required 'rankId'", { instance: m });
            if (!m.hasOwnProperty("accDamage"))
                throw $util.ProtocolError("missing required 'accDamage'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            return m;
        };
        return p_gang_guard_info;
    })();
    $root.c2s_query_gang_guard_reward_request = (function() {
        function c2s_query_gang_guard_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_gang_guard_reward_request.prototype.id = 0;
        c2s_query_gang_guard_reward_request.cmd = 7245;
        c2s_query_gang_guard_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_query_gang_guard_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_gang_guard_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_query_gang_guard_reward_request;
    })();
    $root.c2s_gang_guard_encourage_request = (function() {
        function c2s_gang_guard_encourage_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_gang_guard_encourage_request.cmd = 7246;
        c2s_gang_guard_encourage_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_gang_guard_encourage_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_gang_guard_encourage_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_gang_guard_encourage_request;
    })();
    $root.s2c_gang_guard_result_notify = (function() {
        function s2c_gang_guard_result_notify(p) {
            this.rankReward = [];
            this.finishReward = [];
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_gang_guard_result_notify.prototype.rankReward = $util.emptyArray;
        s2c_gang_guard_result_notify.prototype.finishReward = $util.emptyArray;
        s2c_gang_guard_result_notify.prototype.rankList = $util.emptyArray;
        s2c_gang_guard_result_notify.prototype.myRank = null;
        s2c_gang_guard_result_notify.prototype.wave = 0;
        s2c_gang_guard_result_notify.cmd = 7247;
        s2c_gang_guard_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankReward != null && m.rankReward.length) {
                for (var i = 0; i < m.rankReward.length; ++i)
                    $root.item_simple.encode(m.rankReward[i], w.uint32(10).fork()).ldelim();
            }
            if (m.finishReward != null && m.finishReward.length) {
                for (var i = 0; i < m.finishReward.length; ++i)
                    $root.item_simple.encode(m.finishReward[i], w.uint32(18).fork()).ldelim();
            }
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_gang_guard_info.encode(m.rankList[i], w.uint32(26).fork()).ldelim();
            }
            $root.p_gang_guard_info.encode(m.myRank, w.uint32(34).fork()).ldelim();
            w.uint32(40).int32(m.wave);
            return w;
        };
        s2c_gang_guard_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_gang_guard_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rankReward && m.rankReward.length))
                        m.rankReward = [];
                    m.rankReward.push($root.item_simple.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.finishReward && m.finishReward.length))
                        m.finishReward = [];
                    m.finishReward.push($root.item_simple.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_gang_guard_info.decode(r, r.uint32()));
                    break;
                case 4:
                    m.myRank = $root.p_gang_guard_info.decode(r, r.uint32());
                    break;
                case 5:
                    m.wave = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            if (!m.hasOwnProperty("wave"))
                throw $util.ProtocolError("missing required 'wave'", { instance: m });
            return m;
        };
        return s2c_gang_guard_result_notify;
    })();
    $root.c2s_escort_info = (function() {
        function c2s_escort_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_escort_info.cmd = 7425;
        c2s_escort_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_escort_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_escort_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_escort_info;
    })();
    $root.s2c_escort_info = (function() {
        function s2c_escort_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_escort_info.prototype.escortId = 0;
        s2c_escort_info.prototype.acceptNum = 0;
        s2c_escort_info.prototype.event = null;
        s2c_escort_info.prototype.escortPreviewId = 0;
        s2c_escort_info.cmd = 7426;
        s2c_escort_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.escortId);
            w.uint32(16).int32(m.acceptNum);
            $root.p_escort_event.encode(m.event, w.uint32(26).fork()).ldelim();
            w.uint32(32).int32(m.escortPreviewId);
            return w;
        };
        s2c_escort_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_escort_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.escortId = r.int32();
                    break;
                case 2:
                    m.acceptNum = r.int32();
                    break;
                case 3:
                    m.event = $root.p_escort_event.decode(r, r.uint32());
                    break;
                case 4:
                    m.escortPreviewId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("escortId"))
                throw $util.ProtocolError("missing required 'escortId'", { instance: m });
            if (!m.hasOwnProperty("acceptNum"))
                throw $util.ProtocolError("missing required 'acceptNum'", { instance: m });
            if (!m.hasOwnProperty("event"))
                throw $util.ProtocolError("missing required 'event'", { instance: m });
            if (!m.hasOwnProperty("escortPreviewId"))
                throw $util.ProtocolError("missing required 'escortPreviewId'", { instance: m });
            return m;
        };
        return s2c_escort_info;
    })();
    $root.p_escort_event = (function() {
        function p_escort_event(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_escort_event.prototype.id = 0;
        p_escort_event.prototype.npcPoints = 0;
        p_escort_event.prototype.rolePoints = 0;
        p_escort_event.prototype.addPoints = 0;
        p_escort_event.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.npcPoints);
            w.uint32(24).int32(m.rolePoints);
            w.uint32(32).int32(m.addPoints);
            return w;
        };
        p_escort_event.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_escort_event();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.npcPoints = r.int32();
                    break;
                case 3:
                    m.rolePoints = r.int32();
                    break;
                case 4:
                    m.addPoints = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("npcPoints"))
                throw $util.ProtocolError("missing required 'npcPoints'", { instance: m });
            if (!m.hasOwnProperty("rolePoints"))
                throw $util.ProtocolError("missing required 'rolePoints'", { instance: m });
            if (!m.hasOwnProperty("addPoints"))
                throw $util.ProtocolError("missing required 'addPoints'", { instance: m });
            return m;
        };
        return p_escort_event;
    })();
    $root.c2s_refresh_escort = (function() {
        function c2s_refresh_escort(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_refresh_escort.prototype.opType = 0;
        c2s_refresh_escort.prototype.useGold = 0;
        c2s_refresh_escort.cmd = 7427;
        c2s_refresh_escort.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.opType);
            w.uint32(16).int32(m.useGold);
            return w;
        };
        c2s_refresh_escort.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_refresh_escort();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opType = r.int32();
                    break;
                case 2:
                    m.useGold = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("opType"))
                throw $util.ProtocolError("missing required 'opType'", { instance: m });
            if (!m.hasOwnProperty("useGold"))
                throw $util.ProtocolError("missing required 'useGold'", { instance: m });
            return m;
        };
        return c2s_refresh_escort;
    })();
    $root.s2c_refresh_escort = (function() {
        function s2c_refresh_escort(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_refresh_escort.prototype.escortPreviewId = 0;
        s2c_refresh_escort.cmd = 7428;
        s2c_refresh_escort.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.escortPreviewId);
            return w;
        };
        s2c_refresh_escort.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_refresh_escort();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.escortPreviewId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("escortPreviewId"))
                throw $util.ProtocolError("missing required 'escortPreviewId'", { instance: m });
            return m;
        };
        return s2c_refresh_escort;
    })();
    $root.c2s_accept_escort = (function() {
        function c2s_accept_escort(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_accept_escort.cmd = 7429;
        c2s_accept_escort.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_accept_escort.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_accept_escort();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_accept_escort;
    })();
    $root.s2c_accept_escort = (function() {
        function s2c_accept_escort(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_accept_escort.prototype.escortId = 0;
        s2c_accept_escort.prototype.acceptNum = 0;
        s2c_accept_escort.prototype.escortPreviewId = 0;
        s2c_accept_escort.cmd = 7430;
        s2c_accept_escort.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.escortId);
            w.uint32(16).int32(m.acceptNum);
            w.uint32(24).int32(m.escortPreviewId);
            return w;
        };
        s2c_accept_escort.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_accept_escort();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.escortId = r.int32();
                    break;
                case 2:
                    m.acceptNum = r.int32();
                    break;
                case 3:
                    m.escortPreviewId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("escortId"))
                throw $util.ProtocolError("missing required 'escortId'", { instance: m });
            if (!m.hasOwnProperty("acceptNum"))
                throw $util.ProtocolError("missing required 'acceptNum'", { instance: m });
            if (!m.hasOwnProperty("escortPreviewId"))
                throw $util.ProtocolError("missing required 'escortPreviewId'", { instance: m });
            return m;
        };
        return s2c_accept_escort;
    })();
    $root.s2c_activity_escort_event = (function() {
        function s2c_activity_escort_event(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_activity_escort_event.prototype.event = null;
        s2c_activity_escort_event.cmd = 7431;
        s2c_activity_escort_event.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_escort_event.encode(m.event, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_activity_escort_event.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_activity_escort_event();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.event = $root.p_escort_event.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("event"))
                throw $util.ProtocolError("missing required 'event'", { instance: m });
            return m;
        };
        return s2c_activity_escort_event;
    })();
    $root.c2s_respond_escort_event = (function() {
        function c2s_respond_escort_event(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_respond_escort_event.prototype.arg = 0;
        c2s_respond_escort_event.cmd = 7432;
        c2s_respond_escort_event.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.arg);
            return w;
        };
        c2s_respond_escort_event.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_respond_escort_event();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.arg = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("arg"))
                throw $util.ProtocolError("missing required 'arg'", { instance: m });
            return m;
        };
        return c2s_respond_escort_event;
    })();
    $root.c2s_submit_escort = (function() {
        function c2s_submit_escort(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_submit_escort.cmd = 7433;
        c2s_submit_escort.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_submit_escort.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_submit_escort();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_submit_escort;
    })();
    $root.s2c_submit_escort = (function() {
        function s2c_submit_escort(p) {
            this.rw = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_submit_escort.prototype.finishEscortId = 0;
        s2c_submit_escort.prototype.isDouble = 0;
        s2c_submit_escort.prototype.restAcceptNum = 0;
        s2c_submit_escort.prototype.rw = $util.emptyArray;
        s2c_submit_escort.cmd = 7434;
        s2c_submit_escort.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.finishEscortId);
            w.uint32(16).int32(m.isDouble);
            w.uint32(24).int32(m.restAcceptNum);
            if (m.rw != null && m.rw.length) {
                for (var i = 0; i < m.rw.length; ++i)
                    $root.p_escort_rw.encode(m.rw[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        s2c_submit_escort.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_submit_escort();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.finishEscortId = r.int32();
                    break;
                case 2:
                    m.isDouble = r.int32();
                    break;
                case 3:
                    m.restAcceptNum = r.int32();
                    break;
                case 4:
                    if (!(m.rw && m.rw.length))
                        m.rw = [];
                    m.rw.push($root.p_escort_rw.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("finishEscortId"))
                throw $util.ProtocolError("missing required 'finishEscortId'", { instance: m });
            if (!m.hasOwnProperty("isDouble"))
                throw $util.ProtocolError("missing required 'isDouble'", { instance: m });
            if (!m.hasOwnProperty("restAcceptNum"))
                throw $util.ProtocolError("missing required 'restAcceptNum'", { instance: m });
            return m;
        };
        return s2c_submit_escort;
    })();
    $root.p_escort_rw = (function() {
        function p_escort_rw(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_escort_rw.prototype.itemId = 0;
        p_escort_rw.prototype.itemNum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_escort_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int64(m.itemNum);
            return w;
        };
        p_escort_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_escort_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.itemNum = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            return m;
        };
        return p_escort_rw;
    })();
    $root.s2c_marriage_info = (function() {
        function s2c_marriage_info(p) {
            this.typeList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_marriage_info.prototype.spouseId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_marriage_info.prototype.spouseName = "";
        s2c_marriage_info.prototype.typeList = $util.emptyArray;
        s2c_marriage_info.prototype.marriageTime = 0;
        s2c_marriage_info.prototype.loveBoxBuyTime = 0;
        s2c_marriage_info.prototype.coupleBoxBuyTime = 0;
        s2c_marriage_info.cmd = 7681;
        s2c_marriage_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.spouseId);
            w.uint32(18).string(m.spouseName);
            if (m.typeList != null && m.typeList.length) {
                for (var i = 0; i < m.typeList.length; ++i)
                    w.uint32(24).int32(m.typeList[i]);
            }
            if (m.marriageTime != null && Object.hasOwnProperty.call(m, "marriageTime"))
                w.uint32(32).int32(m.marriageTime);
            if (m.loveBoxBuyTime != null && Object.hasOwnProperty.call(m, "loveBoxBuyTime"))
                w.uint32(40).int32(m.loveBoxBuyTime);
            if (m.coupleBoxBuyTime != null && Object.hasOwnProperty.call(m, "coupleBoxBuyTime"))
                w.uint32(48).int32(m.coupleBoxBuyTime);
            return w;
        };
        s2c_marriage_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_marriage_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.spouseId = r.int64();
                    break;
                case 2:
                    m.spouseName = r.string();
                    break;
                case 3:
                    if (!(m.typeList && m.typeList.length))
                        m.typeList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.typeList.push(r.int32());
                    } else
                        m.typeList.push(r.int32());
                    break;
                case 4:
                    m.marriageTime = r.int32();
                    break;
                case 5:
                    m.loveBoxBuyTime = r.int32();
                    break;
                case 6:
                    m.coupleBoxBuyTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("spouseId"))
                throw $util.ProtocolError("missing required 'spouseId'", { instance: m });
            if (!m.hasOwnProperty("spouseName"))
                throw $util.ProtocolError("missing required 'spouseName'", { instance: m });
            return m;
        };
        return s2c_marriage_info;
    })();
    $root.c2s_make_proposal = (function() {
        function c2s_make_proposal(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_make_proposal.prototype.targetId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_make_proposal.prototype.type = 0;
        c2s_make_proposal.prototype.onlyCheck = 0;
        c2s_make_proposal.cmd = 7682;
        c2s_make_proposal.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.targetId);
            w.uint32(16).int32(m.type);
            w.uint32(24).int32(m.onlyCheck);
            return w;
        };
        c2s_make_proposal.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_make_proposal();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetId = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.onlyCheck = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("onlyCheck"))
                throw $util.ProtocolError("missing required 'onlyCheck'", { instance: m });
            return m;
        };
        return c2s_make_proposal;
    })();
    $root.s2c_be_proposed_notify = (function() {
        function s2c_be_proposed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_be_proposed_notify.prototype.fromId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_be_proposed_notify.prototype.fromName = "";
        s2c_be_proposed_notify.prototype.type = 0;
        s2c_be_proposed_notify.cmd = 7683;
        s2c_be_proposed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.fromId);
            w.uint32(18).string(m.fromName);
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(24).int32(m.type);
            return w;
        };
        s2c_be_proposed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_be_proposed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fromId = r.int64();
                    break;
                case 2:
                    m.fromName = r.string();
                    break;
                case 3:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fromId"))
                throw $util.ProtocolError("missing required 'fromId'", { instance: m });
            if (!m.hasOwnProperty("fromName"))
                throw $util.ProtocolError("missing required 'fromName'", { instance: m });
            return m;
        };
        return s2c_be_proposed_notify;
    })();
    $root.c2s_response_propose = (function() {
        function c2s_response_propose(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_response_propose.prototype.fromId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_response_propose.prototype.type = 0;
        c2s_response_propose.cmd = 7684;
        c2s_response_propose.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.fromId);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_response_propose.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_response_propose();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fromId = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fromId"))
                throw $util.ProtocolError("missing required 'fromId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_response_propose;
    })();
    $root.s2c_response_propose_notify = (function() {
        function s2c_response_propose_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_response_propose_notify.prototype.playerName = "";
        s2c_response_propose_notify.prototype.type = 0;
        s2c_response_propose_notify.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_response_propose_notify.cmd = 7685;
        s2c_response_propose_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.playerName);
            w.uint32(16).int32(m.type);
            w.uint32(24).int64(m.playerId);
            return w;
        };
        s2c_response_propose_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_response_propose_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.playerName = r.string();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.playerId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("playerName"))
                throw $util.ProtocolError("missing required 'playerName'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            return m;
        };
        return s2c_response_propose_notify;
    })();
    $root.c2s_divorce_request = (function() {
        function c2s_divorce_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_divorce_request.prototype.type = 0;
        c2s_divorce_request.cmd = 7686;
        c2s_divorce_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_divorce_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_divorce_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_divorce_request;
    })();
    $root.s2c_divorce_notify = (function() {
        function s2c_divorce_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_divorce_notify.cmd = 7687;
        s2c_divorce_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_divorce_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_divorce_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_divorce_notify;
    })();
    $root.c2s_response_divorce = (function() {
        function c2s_response_divorce(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_response_divorce.prototype.fromId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_response_divorce.prototype.type = 0;
        c2s_response_divorce.cmd = 7688;
        c2s_response_divorce.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.fromId);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_response_divorce.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_response_divorce();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fromId = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fromId"))
                throw $util.ProtocolError("missing required 'fromId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_response_divorce;
    })();
    $root.s2c_response_divorce_notify = (function() {
        function s2c_response_divorce_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_response_divorce_notify.prototype.type = 0;
        s2c_response_divorce_notify.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_response_divorce_notify.prototype.playerName = "";
        s2c_response_divorce_notify.cmd = 7689;
        s2c_response_divorce_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int64(m.playerId);
            w.uint32(26).string(m.playerName);
            return w;
        };
        s2c_response_divorce_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_response_divorce_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.playerId = r.int64();
                    break;
                case 3:
                    m.playerName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            if (!m.hasOwnProperty("playerName"))
                throw $util.ProtocolError("missing required 'playerName'", { instance: m });
            return m;
        };
        return s2c_response_divorce_notify;
    })();
    $root.c2s_list_single_friend = (function() {
        function c2s_list_single_friend(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_list_single_friend.cmd = 7690;
        c2s_list_single_friend.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_list_single_friend.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_list_single_friend();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_list_single_friend;
    })();
    $root.s2c_list_single_friend = (function() {
        function s2c_list_single_friend(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_list_single_friend.prototype.list = $util.emptyArray;
        s2c_list_single_friend.cmd = 7691;
        s2c_list_single_friend.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    w.uint32(8).int64(m.list[i]);
            }
            return w;
        };
        s2c_list_single_friend.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_list_single_friend();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.list.push(r.int64());
                    } else
                        m.list.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_list_single_friend;
    })();
    $root.c2s_wedding_panel = (function() {
        function c2s_wedding_panel(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_panel.cmd = 7692;
        c2s_wedding_panel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_panel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_panel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_panel;
    })();
    $root.s2c_wedding_panel = (function() {
        function s2c_wedding_panel(p) {
            this.wdIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_panel.prototype.weddingNum = 0;
        s2c_wedding_panel.prototype.wdIds = $util.emptyArray;
        s2c_wedding_panel.cmd = 7693;
        s2c_wedding_panel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.weddingNum);
            if (m.wdIds != null && m.wdIds.length) {
                for (var i = 0; i < m.wdIds.length; ++i)
                    w.uint32(16).int32(m.wdIds[i]);
            }
            return w;
        };
        s2c_wedding_panel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_panel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.weddingNum = r.int32();
                    break;
                case 2:
                    if (!(m.wdIds && m.wdIds.length))
                        m.wdIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.wdIds.push(r.int32());
                    } else
                        m.wdIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("weddingNum"))
                throw $util.ProtocolError("missing required 'weddingNum'", { instance: m });
            return m;
        };
        return s2c_wedding_panel;
    })();
    $root.c2s_reserve_wedding = (function() {
        function c2s_reserve_wedding(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_reserve_wedding.prototype.id = 0;
        c2s_reserve_wedding.cmd = 7694;
        c2s_reserve_wedding.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_reserve_wedding.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_reserve_wedding();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_reserve_wedding;
    })();
    $root.invite_role = (function() {
        function invite_role(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        invite_role.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        invite_role.prototype.playerName = "";
        invite_role.prototype.isOnline = 0;
        invite_role.prototype.vipLevel = 0;
        invite_role.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.playerId);
            w.uint32(18).string(m.playerName);
            if (m.isOnline != null && Object.hasOwnProperty.call(m, "isOnline"))
                w.uint32(24).int32(m.isOnline);
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(32).int32(m.vipLevel);
            return w;
        };
        invite_role.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.invite_role();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.playerId = r.int64();
                    break;
                case 2:
                    m.playerName = r.string();
                    break;
                case 3:
                    m.isOnline = r.int32();
                    break;
                case 4:
                    m.vipLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            if (!m.hasOwnProperty("playerName"))
                throw $util.ProtocolError("missing required 'playerName'", { instance: m });
            return m;
        };
        return invite_role;
    })();
    $root.c2s_invite_info = (function() {
        function c2s_invite_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_invite_info.cmd = 7695;
        c2s_invite_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_invite_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_invite_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_invite_info;
    })();
    $root.s2c_invite_info = (function() {
        function s2c_invite_info(p) {
            this.inviteList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_invite_info.prototype.totalNum = 0;
        s2c_invite_info.prototype.currUseNum = 0;
        s2c_invite_info.prototype.inviteList = $util.emptyArray;
        s2c_invite_info.cmd = 7696;
        s2c_invite_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.totalNum);
            w.uint32(16).int32(m.currUseNum);
            if (m.inviteList != null && m.inviteList.length) {
                for (var i = 0; i < m.inviteList.length; ++i)
                    $root.invite_role.encode(m.inviteList[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_invite_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_invite_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.totalNum = r.int32();
                    break;
                case 2:
                    m.currUseNum = r.int32();
                    break;
                case 3:
                    if (!(m.inviteList && m.inviteList.length))
                        m.inviteList = [];
                    m.inviteList.push($root.invite_role.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("totalNum"))
                throw $util.ProtocolError("missing required 'totalNum'", { instance: m });
            if (!m.hasOwnProperty("currUseNum"))
                throw $util.ProtocolError("missing required 'currUseNum'", { instance: m });
            return m;
        };
        return s2c_invite_info;
    })();
    $root.c2s_buy_invite_num = (function() {
        function c2s_buy_invite_num(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_buy_invite_num.prototype.num = 0;
        c2s_buy_invite_num.cmd = 7697;
        c2s_buy_invite_num.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            return w;
        };
        c2s_buy_invite_num.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_buy_invite_num();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_buy_invite_num;
    })();
    $root.s2c_buy_invite_num = (function() {
        function s2c_buy_invite_num(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_buy_invite_num.prototype.totalNum = 0;
        s2c_buy_invite_num.prototype.currUseNum = 0;
        s2c_buy_invite_num.cmd = 7698;
        s2c_buy_invite_num.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.totalNum);
            w.uint32(16).int32(m.currUseNum);
            return w;
        };
        s2c_buy_invite_num.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_buy_invite_num();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.totalNum = r.int32();
                    break;
                case 2:
                    m.currUseNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("totalNum"))
                throw $util.ProtocolError("missing required 'totalNum'", { instance: m });
            if (!m.hasOwnProperty("currUseNum"))
                throw $util.ProtocolError("missing required 'currUseNum'", { instance: m });
            return m;
        };
        return s2c_buy_invite_num;
    })();
    $root.c2s_invite_friend = (function() {
        function c2s_invite_friend(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_invite_friend.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_invite_friend.cmd = 7699;
        c2s_invite_friend.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.playerId);
            return w;
        };
        c2s_invite_friend.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_invite_friend();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.playerId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            return m;
        };
        return c2s_invite_friend;
    })();
    $root.c2s_wedding_helper = (function() {
        function c2s_wedding_helper(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_helper.cmd = 7700;
        c2s_wedding_helper.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_helper.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_helper();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_helper;
    })();
    $root.s2c_wedding_helper = (function() {
        function s2c_wedding_helper(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_helper.prototype.boyName = "";
        s2c_wedding_helper.prototype.boyTrans = 0;
        s2c_wedding_helper.prototype.girlName = "";
        s2c_wedding_helper.prototype.girlTrans = 0;
        s2c_wedding_helper.prototype.time = 0;
        s2c_wedding_helper.prototype.boyId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_helper.prototype.girlId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_helper.cmd = 7701;
        s2c_wedding_helper.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.boyName);
            w.uint32(16).int32(m.boyTrans);
            w.uint32(26).string(m.girlName);
            w.uint32(32).int32(m.girlTrans);
            w.uint32(40).uint32(m.time);
            if (m.boyId != null && Object.hasOwnProperty.call(m, "boyId"))
                w.uint32(48).int64(m.boyId);
            if (m.girlId != null && Object.hasOwnProperty.call(m, "girlId"))
                w.uint32(56).int64(m.girlId);
            return w;
        };
        s2c_wedding_helper.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_helper();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.boyName = r.string();
                    break;
                case 2:
                    m.boyTrans = r.int32();
                    break;
                case 3:
                    m.girlName = r.string();
                    break;
                case 4:
                    m.girlTrans = r.int32();
                    break;
                case 5:
                    m.time = r.uint32();
                    break;
                case 6:
                    m.boyId = r.int64();
                    break;
                case 7:
                    m.girlId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("boyName"))
                throw $util.ProtocolError("missing required 'boyName'", { instance: m });
            if (!m.hasOwnProperty("boyTrans"))
                throw $util.ProtocolError("missing required 'boyTrans'", { instance: m });
            if (!m.hasOwnProperty("girlName"))
                throw $util.ProtocolError("missing required 'girlName'", { instance: m });
            if (!m.hasOwnProperty("girlTrans"))
                throw $util.ProtocolError("missing required 'girlTrans'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            return m;
        };
        return s2c_wedding_helper;
    })();
    $root.c2s_wedding_passport = (function() {
        function c2s_wedding_passport(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_passport.cmd = 7702;
        c2s_wedding_passport.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_passport.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_passport();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_passport;
    })();
    $root.c2s_wedding_join = (function() {
        function c2s_wedding_join(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_join.cmd = 7703;
        c2s_wedding_join.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_join.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_join();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_join;
    })();
    $root.s2c_wedding_celebration = (function() {
        function s2c_wedding_celebration(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_celebration.prototype.state = 0;
        s2c_wedding_celebration.prototype.foodNum = 0;
        s2c_wedding_celebration.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_celebration.prototype.giftState = 0;
        s2c_wedding_celebration.prototype.hotScore = 0;
        s2c_wedding_celebration.prototype.endTime = 0;
        s2c_wedding_celebration.prototype.boyId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_celebration.prototype.girlId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_celebration.cmd = 7704;
        s2c_wedding_celebration.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.state);
            w.uint32(16).int32(m.foodNum);
            w.uint32(24).int64(m.exp);
            w.uint32(32).int32(m.giftState);
            w.uint32(40).int32(m.hotScore);
            w.uint32(48).uint32(m.endTime);
            w.uint32(56).int64(m.boyId);
            w.uint32(64).int64(m.girlId);
            return w;
        };
        s2c_wedding_celebration.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_celebration();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.state = r.int32();
                    break;
                case 2:
                    m.foodNum = r.int32();
                    break;
                case 3:
                    m.exp = r.int64();
                    break;
                case 4:
                    m.giftState = r.int32();
                    break;
                case 5:
                    m.hotScore = r.int32();
                    break;
                case 6:
                    m.endTime = r.uint32();
                    break;
                case 7:
                    m.boyId = r.int64();
                    break;
                case 8:
                    m.girlId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("state"))
                throw $util.ProtocolError("missing required 'state'", { instance: m });
            if (!m.hasOwnProperty("foodNum"))
                throw $util.ProtocolError("missing required 'foodNum'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("giftState"))
                throw $util.ProtocolError("missing required 'giftState'", { instance: m });
            if (!m.hasOwnProperty("hotScore"))
                throw $util.ProtocolError("missing required 'hotScore'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("boyId"))
                throw $util.ProtocolError("missing required 'boyId'", { instance: m });
            if (!m.hasOwnProperty("girlId"))
                throw $util.ProtocolError("missing required 'girlId'", { instance: m });
            return m;
        };
        return s2c_wedding_celebration;
    })();
    $root.c2s_wedding_salute = (function() {
        function c2s_wedding_salute(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_salute.prototype.type = 0;
        c2s_wedding_salute.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_wedding_salute.cmd = 7705;
        c2s_wedding_salute.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int64(m.playerId);
            return w;
        };
        c2s_wedding_salute.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_salute();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.playerId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            return m;
        };
        return c2s_wedding_salute;
    })();
    $root.s2c_wedding_salute = (function() {
        function s2c_wedding_salute(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_salute.prototype.type = 0;
        s2c_wedding_salute.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_salute.cmd = 7706;
        s2c_wedding_salute.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int64(m.playerId);
            return w;
        };
        s2c_wedding_salute.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_salute();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.playerId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            return m;
        };
        return s2c_wedding_salute;
    })();
    $root.c2s_wedding_quit = (function() {
        function c2s_wedding_quit(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_quit.cmd = 7707;
        c2s_wedding_quit.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_quit.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_quit();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_quit;
    })();
    $root.gift_report = (function() {
        function gift_report(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        gift_report.prototype.time = 0;
        gift_report.prototype.playerId1 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        gift_report.prototype.playerName1 = "";
        gift_report.prototype.playerId2 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        gift_report.prototype.playerName2 = "";
        gift_report.prototype.type = 0;
        gift_report.prototype.num = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        gift_report.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).uint32(m.time);
            w.uint32(16).int64(m.playerId1);
            w.uint32(26).string(m.playerName1);
            w.uint32(32).int64(m.playerId2);
            w.uint32(42).string(m.playerName2);
            w.uint32(48).int32(m.type);
            w.uint32(56).int64(m.num);
            return w;
        };
        gift_report.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.gift_report();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.time = r.uint32();
                    break;
                case 2:
                    m.playerId1 = r.int64();
                    break;
                case 3:
                    m.playerName1 = r.string();
                    break;
                case 4:
                    m.playerId2 = r.int64();
                    break;
                case 5:
                    m.playerName2 = r.string();
                    break;
                case 6:
                    m.type = r.int32();
                    break;
                case 7:
                    m.num = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            if (!m.hasOwnProperty("playerId1"))
                throw $util.ProtocolError("missing required 'playerId1'", { instance: m });
            if (!m.hasOwnProperty("playerName1"))
                throw $util.ProtocolError("missing required 'playerName1'", { instance: m });
            if (!m.hasOwnProperty("playerId2"))
                throw $util.ProtocolError("missing required 'playerId2'", { instance: m });
            if (!m.hasOwnProperty("playerName2"))
                throw $util.ProtocolError("missing required 'playerName2'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return gift_report;
    })();
    $root.c2s_wedding_present_gift_panel = (function() {
        function c2s_wedding_present_gift_panel(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_present_gift_panel.cmd = 7708;
        c2s_wedding_present_gift_panel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_present_gift_panel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_present_gift_panel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_present_gift_panel;
    })();
    $root.s2c_wedding_present_gift_panel = (function() {
        function s2c_wedding_present_gift_panel(p) {
            this.reportList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_present_gift_panel.prototype.reportList = $util.emptyArray;
        s2c_wedding_present_gift_panel.prototype.boyId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_present_gift_panel.prototype.boyName = "";
        s2c_wedding_present_gift_panel.prototype.boyTrans = 0;
        s2c_wedding_present_gift_panel.prototype.girlId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_wedding_present_gift_panel.prototype.girlName = "";
        s2c_wedding_present_gift_panel.prototype.girlTrans = 0;
        s2c_wedding_present_gift_panel.cmd = 7709;
        s2c_wedding_present_gift_panel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.reportList != null && m.reportList.length) {
                for (var i = 0; i < m.reportList.length; ++i)
                    $root.gift_report.encode(m.reportList[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int64(m.boyId);
            w.uint32(26).string(m.boyName);
            w.uint32(32).int32(m.boyTrans);
            w.uint32(40).int64(m.girlId);
            w.uint32(50).string(m.girlName);
            w.uint32(56).int32(m.girlTrans);
            return w;
        };
        s2c_wedding_present_gift_panel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_present_gift_panel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.reportList && m.reportList.length))
                        m.reportList = [];
                    m.reportList.push($root.gift_report.decode(r, r.uint32()));
                    break;
                case 2:
                    m.boyId = r.int64();
                    break;
                case 3:
                    m.boyName = r.string();
                    break;
                case 4:
                    m.boyTrans = r.int32();
                    break;
                case 5:
                    m.girlId = r.int64();
                    break;
                case 6:
                    m.girlName = r.string();
                    break;
                case 7:
                    m.girlTrans = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("boyId"))
                throw $util.ProtocolError("missing required 'boyId'", { instance: m });
            if (!m.hasOwnProperty("boyName"))
                throw $util.ProtocolError("missing required 'boyName'", { instance: m });
            if (!m.hasOwnProperty("boyTrans"))
                throw $util.ProtocolError("missing required 'boyTrans'", { instance: m });
            if (!m.hasOwnProperty("girlId"))
                throw $util.ProtocolError("missing required 'girlId'", { instance: m });
            if (!m.hasOwnProperty("girlName"))
                throw $util.ProtocolError("missing required 'girlName'", { instance: m });
            if (!m.hasOwnProperty("girlTrans"))
                throw $util.ProtocolError("missing required 'girlTrans'", { instance: m });
            return m;
        };
        return s2c_wedding_present_gift_panel;
    })();
    $root.c2s_wedding_present_gift = (function() {
        function c2s_wedding_present_gift(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_present_gift.prototype.playerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_wedding_present_gift.prototype.type = 0;
        c2s_wedding_present_gift.prototype.num = 0;
        c2s_wedding_present_gift.cmd = 7710;
        c2s_wedding_present_gift.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.playerId);
            w.uint32(16).int32(m.type);
            w.uint32(24).int32(m.num);
            return w;
        };
        c2s_wedding_present_gift.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_present_gift();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.playerId = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("playerId"))
                throw $util.ProtocolError("missing required 'playerId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_wedding_present_gift;
    })();
    $root.c2s_wedding_guest_manage_panel = (function() {
        function c2s_wedding_guest_manage_panel(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_guest_manage_panel.cmd = 7711;
        c2s_wedding_guest_manage_panel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_guest_manage_panel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_guest_manage_panel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_guest_manage_panel;
    })();
    $root.s2c_wedding_guest_manage_panel = (function() {
        function s2c_wedding_guest_manage_panel(p) {
            this.guestList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_guest_manage_panel.prototype.guestList = $util.emptyArray;
        s2c_wedding_guest_manage_panel.prototype.num = 0;
        s2c_wedding_guest_manage_panel.prototype.totalNum = 0;
        s2c_wedding_guest_manage_panel.cmd = 7712;
        s2c_wedding_guest_manage_panel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guestList != null && m.guestList.length) {
                for (var i = 0; i < m.guestList.length; ++i)
                    $root.invite_role.encode(m.guestList[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.num);
            w.uint32(24).int32(m.totalNum);
            return w;
        };
        s2c_wedding_guest_manage_panel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_guest_manage_panel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.guestList && m.guestList.length))
                        m.guestList = [];
                    m.guestList.push($root.invite_role.decode(r, r.uint32()));
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                case 3:
                    m.totalNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("totalNum"))
                throw $util.ProtocolError("missing required 'totalNum'", { instance: m });
            return m;
        };
        return s2c_wedding_guest_manage_panel;
    })();
    $root.c2s_wedding_guest_manage = (function() {
        function c2s_wedding_guest_manage(p) {
            this.playerIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_guest_manage.prototype.playerIds = $util.emptyArray;
        c2s_wedding_guest_manage.prototype.type = 0;
        c2s_wedding_guest_manage.cmd = 7713;
        c2s_wedding_guest_manage.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.playerIds != null && m.playerIds.length) {
                for (var i = 0; i < m.playerIds.length; ++i)
                    w.uint32(8).int64(m.playerIds[i]);
            }
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_wedding_guest_manage.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_guest_manage();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.playerIds && m.playerIds.length))
                        m.playerIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.playerIds.push(r.int64());
                    } else
                        m.playerIds.push(r.int64());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_wedding_guest_manage;
    })();
    $root.c2s_wedding_reserve_state = (function() {
        function c2s_wedding_reserve_state(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wedding_reserve_state.cmd = 7714;
        c2s_wedding_reserve_state.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_wedding_reserve_state.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wedding_reserve_state();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_wedding_reserve_state;
    })();
    $root.s2c_wedding_reserve_state = (function() {
        function s2c_wedding_reserve_state(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_reserve_state.prototype.type = 0;
        s2c_wedding_reserve_state.cmd = 7715;
        s2c_wedding_reserve_state.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        s2c_wedding_reserve_state.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_reserve_state();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_wedding_reserve_state;
    })();
    $root.s2c_wedding_fireworks = (function() {
        function s2c_wedding_fireworks(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_wedding_fireworks.prototype.hotScore = 0;
        s2c_wedding_fireworks.cmd = 7716;
        s2c_wedding_fireworks.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.hotScore);
            return w;
        };
        s2c_wedding_fireworks.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_wedding_fireworks();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.hotScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("hotScore"))
                throw $util.ProtocolError("missing required 'hotScore'", { instance: m });
            return m;
        };
        return s2c_wedding_fireworks;
    })();
    $root.c2s_ask_couple_buy_marriage_box = (function() {
        function c2s_ask_couple_buy_marriage_box(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_ask_couple_buy_marriage_box.cmd = 7717;
        c2s_ask_couple_buy_marriage_box.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_ask_couple_buy_marriage_box.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_ask_couple_buy_marriage_box();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_ask_couple_buy_marriage_box;
    })();
    $root.c2s_get_buy_marriage_box_reward = (function() {
        function c2s_get_buy_marriage_box_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_buy_marriage_box_reward.cmd = 7718;
        c2s_get_buy_marriage_box_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_buy_marriage_box_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_buy_marriage_box_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_buy_marriage_box_reward;
    })();
    $root.c2s_get_daily_marriage_box_reward = (function() {
        function c2s_get_daily_marriage_box_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_daily_marriage_box_reward.cmd = 7719;
        c2s_get_daily_marriage_box_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_daily_marriage_box_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_daily_marriage_box_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_daily_marriage_box_reward;
    })();
    $root.s2c_buy_marriage_box_notify = (function() {
        function s2c_buy_marriage_box_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_buy_marriage_box_notify.cmd = 7720;
        s2c_buy_marriage_box_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_buy_marriage_box_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_buy_marriage_box_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_buy_marriage_box_notify;
    })();
    $root.c2s_help_buy_marriage_box = (function() {
        function c2s_help_buy_marriage_box(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_help_buy_marriage_box.cmd = 7721;
        c2s_help_buy_marriage_box.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_help_buy_marriage_box.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_help_buy_marriage_box();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_help_buy_marriage_box;
    })();
    $root.lock_info_p = (function() {
        function lock_info_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        lock_info_p.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        lock_info_p.prototype.level = 0;
        lock_info_p.prototype.exp = 0;
        lock_info_p.prototype.weared = 0;
        lock_info_p.prototype.basicScore = 0;
        lock_info_p.prototype.allScore = 0;
        lock_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(16).int32(m.level);
            w.uint32(24).int32(m.exp);
            w.uint32(32).int32(m.weared);
            w.uint32(40).int32(m.basicScore);
            w.uint32(48).int32(m.allScore);
            return w;
        };
        lock_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.lock_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                case 3:
                    m.exp = r.int32();
                    break;
                case 4:
                    m.weared = r.int32();
                    break;
                case 5:
                    m.basicScore = r.int32();
                    break;
                case 6:
                    m.allScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("weared"))
                throw $util.ProtocolError("missing required 'weared'", { instance: m });
            if (!m.hasOwnProperty("basicScore"))
                throw $util.ProtocolError("missing required 'basicScore'", { instance: m });
            if (!m.hasOwnProperty("allScore"))
                throw $util.ProtocolError("missing required 'allScore'", { instance: m });
            return m;
        };
        return lock_info_p;
    })();
    $root.s2c_marriage_box_buy_time = (function() {
        function s2c_marriage_box_buy_time(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_marriage_box_buy_time.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_marriage_box_buy_time.prototype.buyTime = 0;
        s2c_marriage_box_buy_time.cmd = 7722;
        s2c_marriage_box_buy_time.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(16).int32(m.buyTime);
            return w;
        };
        s2c_marriage_box_buy_time.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_marriage_box_buy_time();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.buyTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("buyTime"))
                throw $util.ProtocolError("missing required 'buyTime'", { instance: m });
            return m;
        };
        return s2c_marriage_box_buy_time;
    })();
    $root.c2s_get_marriage_lock_info = (function() {
        function c2s_get_marriage_lock_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_marriage_lock_info.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_get_marriage_lock_info.cmd = 7723;
        c2s_get_marriage_lock_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(8).int64(m.roleId);
            return w;
        };
        c2s_get_marriage_lock_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_marriage_lock_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_marriage_lock_info;
    })();
    $root.s2c_get_marriage_lock_info = (function() {
        function s2c_get_marriage_lock_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_marriage_lock_info.prototype.lockInfo = null;
        s2c_get_marriage_lock_info.cmd = 7724;
        s2c_get_marriage_lock_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.lock_info_p.encode(m.lockInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_get_marriage_lock_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_marriage_lock_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.lockInfo = $root.lock_info_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("lockInfo"))
                throw $util.ProtocolError("missing required 'lockInfo'", { instance: m });
            return m;
        };
        return s2c_get_marriage_lock_info;
    })();
    $root.c2s_improve_marriage_lock = (function() {
        function c2s_improve_marriage_lock(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_improve_marriage_lock.prototype.count = 0;
        c2s_improve_marriage_lock.cmd = 7725;
        c2s_improve_marriage_lock.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.count);
            return w;
        };
        c2s_improve_marriage_lock.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_improve_marriage_lock();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return c2s_improve_marriage_lock;
    })();
    $root.s2c_improve_marriage_lock = (function() {
        function s2c_improve_marriage_lock(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_improve_marriage_lock.prototype.lockInfo = null;
        s2c_improve_marriage_lock.cmd = 7726;
        s2c_improve_marriage_lock.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.lock_info_p.encode(m.lockInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_improve_marriage_lock.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_improve_marriage_lock();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.lockInfo = $root.lock_info_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("lockInfo"))
                throw $util.ProtocolError("missing required 'lockInfo'", { instance: m });
            return m;
        };
        return s2c_improve_marriage_lock;
    })();
    $root.treasure_world_record_p = (function() {
        function treasure_world_record_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        treasure_world_record_p.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        treasure_world_record_p.prototype.roleName = "";
        treasure_world_record_p.prototype.itemId = 0;
        treasure_world_record_p.prototype.count = 0;
        treasure_world_record_p.prototype.extData = "";
        treasure_world_record_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.itemId);
            w.uint32(32).int32(m.count);
            w.uint32(42).string(m.extData);
            return w;
        };
        treasure_world_record_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.treasure_world_record_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.itemId = r.int32();
                    break;
                case 4:
                    m.count = r.int32();
                    break;
                case 5:
                    m.extData = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("extData"))
                throw $util.ProtocolError("missing required 'extData'", { instance: m });
            return m;
        };
        return treasure_world_record_p;
    })();
    $root.treasure_personal_record_p = (function() {
        function treasure_personal_record_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        treasure_personal_record_p.prototype.itemId = 0;
        treasure_personal_record_p.prototype.count = 0;
        treasure_personal_record_p.prototype.extData = "";
        treasure_personal_record_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.count);
            w.uint32(26).string(m.extData);
            return w;
        };
        treasure_personal_record_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.treasure_personal_record_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                case 3:
                    m.extData = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("extData"))
                throw $util.ProtocolError("missing required 'extData'", { instance: m });
            return m;
        };
        return treasure_personal_record_p;
    })();
    $root.c2s_query_world_record_request = (function() {
        function c2s_query_world_record_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_world_record_request.prototype.type = 0;
        c2s_query_world_record_request.cmd = 7937;
        c2s_query_world_record_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_query_world_record_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_world_record_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_query_world_record_request;
    })();
    $root.s2c_treasure_world_record_notify = (function() {
        function s2c_treasure_world_record_notify(p) {
            this.record = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_treasure_world_record_notify.prototype.type = 0;
        s2c_treasure_world_record_notify.prototype.record = $util.emptyArray;
        s2c_treasure_world_record_notify.cmd = 7938;
        s2c_treasure_world_record_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            if (m.record != null && m.record.length) {
                for (var i = 0; i < m.record.length; ++i)
                    $root.treasure_world_record_p.encode(m.record[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_treasure_world_record_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_treasure_world_record_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    if (!(m.record && m.record.length))
                        m.record = [];
                    m.record.push($root.treasure_world_record_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_treasure_world_record_notify;
    })();
    $root.c2s_query_personal_record_request = (function() {
        function c2s_query_personal_record_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_personal_record_request.prototype.type = 0;
        c2s_query_personal_record_request.cmd = 7939;
        c2s_query_personal_record_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_query_personal_record_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_personal_record_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_query_personal_record_request;
    })();
    $root.s2c_treasure_personal_record_notify = (function() {
        function s2c_treasure_personal_record_notify(p) {
            this.record = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_treasure_personal_record_notify.prototype.type = 0;
        s2c_treasure_personal_record_notify.prototype.record = $util.emptyArray;
        s2c_treasure_personal_record_notify.cmd = 7940;
        s2c_treasure_personal_record_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            if (m.record != null && m.record.length) {
                for (var i = 0; i < m.record.length; ++i)
                    $root.treasure_personal_record_p.encode(m.record[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_treasure_personal_record_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_treasure_personal_record_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    if (!(m.record && m.record.length))
                        m.record = [];
                    m.record.push($root.treasure_personal_record_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_treasure_personal_record_notify;
    })();
    $root.c2s_query_integral_request = (function() {
        function c2s_query_integral_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_integral_request.prototype.xunbaoType = 0;
        c2s_query_integral_request.cmd = 7941;
        c2s_query_integral_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.xunbaoType);
            return w;
        };
        c2s_query_integral_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_integral_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.xunbaoType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            return m;
        };
        return c2s_query_integral_request;
    })();
    $root.s2c_integral_changed_notify = (function() {
        function s2c_integral_changed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_integral_changed_notify.prototype.integral = 0;
        s2c_integral_changed_notify.prototype.xunbaoType = 0;
        s2c_integral_changed_notify.cmd = 7942;
        s2c_integral_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.integral);
            w.uint32(16).int32(m.xunbaoType);
            return w;
        };
        s2c_integral_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_integral_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.integral = r.int32();
                    break;
                case 2:
                    m.xunbaoType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("integral"))
                throw $util.ProtocolError("missing required 'integral'", { instance: m });
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            return m;
        };
        return s2c_integral_changed_notify;
    })();
    $root.c2s_find_treasure = (function() {
        function c2s_find_treasure(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_find_treasure.prototype.xunbaoType = 0;
        c2s_find_treasure.prototype.times = 0;
        c2s_find_treasure.prototype.useGold = 0;
        c2s_find_treasure.prototype.useFree = 0;
        c2s_find_treasure.prototype.adwatch = 0;
        c2s_find_treasure.cmd = 7943;
        c2s_find_treasure.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.xunbaoType);
            w.uint32(16).int32(m.times);
            w.uint32(24).int32(m.useGold);
            w.uint32(32).int32(m.useFree);
            w.uint32(40).int32(m.adwatch);
            return w;
        };
        c2s_find_treasure.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_find_treasure();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.xunbaoType = r.int32();
                    break;
                case 2:
                    m.times = r.int32();
                    break;
                case 3:
                    m.useGold = r.int32();
                    break;
                case 4:
                    m.useFree = r.int32();
                    break;
                case 5:
                    m.adwatch = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            if (!m.hasOwnProperty("times"))
                throw $util.ProtocolError("missing required 'times'", { instance: m });
            if (!m.hasOwnProperty("useGold"))
                throw $util.ProtocolError("missing required 'useGold'", { instance: m });
            if (!m.hasOwnProperty("useFree"))
                throw $util.ProtocolError("missing required 'useFree'", { instance: m });
            if (!m.hasOwnProperty("adwatch"))
                throw $util.ProtocolError("missing required 'adwatch'", { instance: m });
            return m;
        };
        return c2s_find_treasure;
    })();
    $root.s2c_find_treasure = (function() {
        function s2c_find_treasure(p) {
            this.reward = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_find_treasure.prototype.reward = $util.emptyArray;
        s2c_find_treasure.prototype.integralAdd = 0;
        s2c_find_treasure.prototype.chipsAdd = 0;
        s2c_find_treasure.prototype.xunbaoType = 0;
        s2c_find_treasure.prototype.times = 0;
        s2c_find_treasure.cmd = 7944;
        s2c_find_treasure.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.reward != null && m.reward.length) {
                for (var i = 0; i < m.reward.length; ++i)
                    $root.p_item.encode(m.reward[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.integralAdd);
            w.uint32(24).int32(m.chipsAdd);
            w.uint32(32).int32(m.xunbaoType);
            if (m.times != null && Object.hasOwnProperty.call(m, "times"))
                w.uint32(40).int32(m.times);
            return w;
        };
        s2c_find_treasure.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_find_treasure();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.reward && m.reward.length))
                        m.reward = [];
                    m.reward.push($root.p_item.decode(r, r.uint32()));
                    break;
                case 2:
                    m.integralAdd = r.int32();
                    break;
                case 3:
                    m.chipsAdd = r.int32();
                    break;
                case 4:
                    m.xunbaoType = r.int32();
                    break;
                case 5:
                    m.times = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("integralAdd"))
                throw $util.ProtocolError("missing required 'integralAdd'", { instance: m });
            if (!m.hasOwnProperty("chipsAdd"))
                throw $util.ProtocolError("missing required 'chipsAdd'", { instance: m });
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            return m;
        };
        return s2c_find_treasure;
    })();
    $root.c2s_query_rune_free_time = (function() {
        function c2s_query_rune_free_time(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_rune_free_time.prototype.xunbaoType = 0;
        c2s_query_rune_free_time.cmd = 7945;
        c2s_query_rune_free_time.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.xunbaoType);
            return w;
        };
        c2s_query_rune_free_time.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_rune_free_time();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.xunbaoType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            return m;
        };
        return c2s_query_rune_free_time;
    })();
    $root.s2c_query_rune_free_time = (function() {
        function s2c_query_rune_free_time(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_rune_free_time.prototype.time = 0;
        s2c_query_rune_free_time.prototype.type = 0;
        s2c_query_rune_free_time.cmd = 7946;
        s2c_query_rune_free_time.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.time);
            w.uint32(16).int32(m.type);
            return w;
        };
        s2c_query_rune_free_time.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_rune_free_time();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.time = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return s2c_query_rune_free_time;
    })();
    $root.c2s_take_from_bag = (function() {
        function c2s_take_from_bag(p) {
            this.itemList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_take_from_bag.prototype.xunbaoType = 0;
        c2s_take_from_bag.prototype.itemList = $util.emptyArray;
        c2s_take_from_bag.cmd = 7947;
        c2s_take_from_bag.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.xunbaoType);
            if (m.itemList != null && m.itemList.length) {
                for (var i = 0; i < m.itemList.length; ++i)
                    $root.item_simple.encode(m.itemList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        c2s_take_from_bag.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_take_from_bag();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.xunbaoType = r.int32();
                    break;
                case 2:
                    if (!(m.itemList && m.itemList.length))
                        m.itemList = [];
                    m.itemList.push($root.item_simple.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            return m;
        };
        return c2s_take_from_bag;
    })();
    $root.c2s_take_all_from_bag = (function() {
        function c2s_take_all_from_bag(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_take_all_from_bag.prototype.xunbaoType = 0;
        c2s_take_all_from_bag.cmd = 7948;
        c2s_take_all_from_bag.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.xunbaoType);
            return w;
        };
        c2s_take_all_from_bag.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_take_all_from_bag();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.xunbaoType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            return m;
        };
        return c2s_take_all_from_bag;
    })();
    $root.c2s_exchange_xunbao_shop = (function() {
        function c2s_exchange_xunbao_shop(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_exchange_xunbao_shop.prototype.xunbaoType = 0;
        c2s_exchange_xunbao_shop.prototype.itemId = 0;
        c2s_exchange_xunbao_shop.prototype.count = 0;
        c2s_exchange_xunbao_shop.cmd = 7949;
        c2s_exchange_xunbao_shop.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.xunbaoType);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.count);
            return w;
        };
        c2s_exchange_xunbao_shop.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_exchange_xunbao_shop();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.xunbaoType = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("xunbaoType"))
                throw $util.ProtocolError("missing required 'xunbaoType'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return c2s_exchange_xunbao_shop;
    })();
    $root.c2s_open_treasure = (function() {
        function c2s_open_treasure(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_open_treasure.prototype.type = 0;
        c2s_open_treasure.cmd = 7950;
        c2s_open_treasure.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_open_treasure.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_open_treasure();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_open_treasure;
    })();
    $root.s2c_open_treasure_reply = (function() {
        function s2c_open_treasure_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_treasure_reply.prototype.type = 0;
        s2c_open_treasure_reply.prototype.luckyVal = 0;
        s2c_open_treasure_reply.cmd = 7951;
        s2c_open_treasure_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.luckyVal);
            return w;
        };
        s2c_open_treasure_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_treasure_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.luckyVal = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("luckyVal"))
                throw $util.ProtocolError("missing required 'luckyVal'", { instance: m });
            return m;
        };
        return s2c_open_treasure_reply;
    })();
    $root.c2s_close_treasure = (function() {
        function c2s_close_treasure(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_close_treasure.prototype.type = 0;
        c2s_close_treasure.cmd = 7952;
        c2s_close_treasure.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_close_treasure.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_close_treasure();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_close_treasure;
    })();
    $root.c2s_treasure_times = (function() {
        function c2s_treasure_times(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_treasure_times.prototype.type = 0;
        c2s_treasure_times.cmd = 7953;
        c2s_treasure_times.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_treasure_times.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_treasure_times();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_treasure_times;
    })();
    $root.s2c_treasure_times_reply = (function() {
        function s2c_treasure_times_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_treasure_times_reply.prototype.type = 0;
        s2c_treasure_times_reply.prototype.times = 0;
        s2c_treasure_times_reply.cmd = 7954;
        s2c_treasure_times_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.times);
            return w;
        };
        s2c_treasure_times_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_treasure_times_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.times = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("times"))
                throw $util.ProtocolError("missing required 'times'", { instance: m });
            return m;
        };
        return s2c_treasure_times_reply;
    })();
    $root.p_arena_object = (function() {
        function p_arena_object(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_arena_object.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_arena_object.prototype.type = 0;
        p_arena_object.prototype.sex = 0;
        p_arena_object.prototype.ranking = 0;
        p_arena_object.prototype.name = "";
        p_arena_object.prototype.combat = 0;
        p_arena_object.prototype.level = 0;
        p_arena_object.prototype.petType = 0;
        p_arena_object.prototype.weaponId = 0;
        p_arena_object.prototype.horseType = 0;
        p_arena_object.prototype.wingType = 0;
        p_arena_object.prototype.talismanType = 0;
        p_arena_object.prototype.weaponType = 0;
        p_arena_object.prototype.cloakType = 0;
        p_arena_object.prototype.dressUpClothesType = 0;
        p_arena_object.prototype.dressUpWeaponType = 0;
        p_arena_object.prototype.dressUpLightType = 0;
        p_arena_object.prototype.hp = 0;
        p_arena_object.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.type);
            w.uint32(24).int32(m.sex);
            w.uint32(32).int32(m.ranking);
            w.uint32(42).string(m.name);
            w.uint32(48).int32(m.combat);
            w.uint32(56).int32(m.level);
            w.uint32(64).int32(m.petType);
            w.uint32(72).int32(m.weaponId);
            w.uint32(80).int32(m.horseType);
            w.uint32(88).int32(m.wingType);
            w.uint32(96).int32(m.talismanType);
            w.uint32(104).int32(m.weaponType);
            w.uint32(112).int32(m.cloakType);
            w.uint32(120).int32(m.dressUpClothesType);
            w.uint32(128).int32(m.dressUpWeaponType);
            w.uint32(136).int32(m.dressUpLightType);
            w.uint32(144).int32(m.hp);
            return w;
        };
        p_arena_object.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_arena_object();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.sex = r.int32();
                    break;
                case 4:
                    m.ranking = r.int32();
                    break;
                case 5:
                    m.name = r.string();
                    break;
                case 6:
                    m.combat = r.int32();
                    break;
                case 7:
                    m.level = r.int32();
                    break;
                case 8:
                    m.petType = r.int32();
                    break;
                case 9:
                    m.weaponId = r.int32();
                    break;
                case 10:
                    m.horseType = r.int32();
                    break;
                case 11:
                    m.wingType = r.int32();
                    break;
                case 12:
                    m.talismanType = r.int32();
                    break;
                case 13:
                    m.weaponType = r.int32();
                    break;
                case 14:
                    m.cloakType = r.int32();
                    break;
                case 15:
                    m.dressUpClothesType = r.int32();
                    break;
                case 16:
                    m.dressUpWeaponType = r.int32();
                    break;
                case 17:
                    m.dressUpLightType = r.int32();
                    break;
                case 18:
                    m.hp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("sex"))
                throw $util.ProtocolError("missing required 'sex'", { instance: m });
            if (!m.hasOwnProperty("ranking"))
                throw $util.ProtocolError("missing required 'ranking'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("petType"))
                throw $util.ProtocolError("missing required 'petType'", { instance: m });
            if (!m.hasOwnProperty("weaponId"))
                throw $util.ProtocolError("missing required 'weaponId'", { instance: m });
            if (!m.hasOwnProperty("horseType"))
                throw $util.ProtocolError("missing required 'horseType'", { instance: m });
            if (!m.hasOwnProperty("wingType"))
                throw $util.ProtocolError("missing required 'wingType'", { instance: m });
            if (!m.hasOwnProperty("talismanType"))
                throw $util.ProtocolError("missing required 'talismanType'", { instance: m });
            if (!m.hasOwnProperty("weaponType"))
                throw $util.ProtocolError("missing required 'weaponType'", { instance: m });
            if (!m.hasOwnProperty("cloakType"))
                throw $util.ProtocolError("missing required 'cloakType'", { instance: m });
            if (!m.hasOwnProperty("dressUpClothesType"))
                throw $util.ProtocolError("missing required 'dressUpClothesType'", { instance: m });
            if (!m.hasOwnProperty("dressUpWeaponType"))
                throw $util.ProtocolError("missing required 'dressUpWeaponType'", { instance: m });
            if (!m.hasOwnProperty("dressUpLightType"))
                throw $util.ProtocolError("missing required 'dressUpLightType'", { instance: m });
            if (!m.hasOwnProperty("hp"))
                throw $util.ProtocolError("missing required 'hp'", { instance: m });
            return m;
        };
        return p_arena_object;
    })();
    $root.p_arena = (function() {
        function p_arena(p) {
            this.objects = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_arena.prototype.ranking = 0;
        p_arena.prototype.combat = 0;
        p_arena.prototype.canChallengeTimes = 0;
        p_arena.prototype.canBuyChallengeTimes = 0;
        p_arena.prototype.alreadyEncourageTimes = 0;
        p_arena.prototype.objects = $util.emptyArray;
        p_arena.prototype.honor = 0;
        p_arena.prototype.lastRewardTime = 0;
        p_arena.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.ranking);
            w.uint32(16).int32(m.combat);
            w.uint32(24).int32(m.canChallengeTimes);
            w.uint32(32).int32(m.canBuyChallengeTimes);
            w.uint32(40).int32(m.alreadyEncourageTimes);
            if (m.objects != null && m.objects.length) {
                for (var i = 0; i < m.objects.length; ++i)
                    $root.p_arena_object.encode(m.objects[i], w.uint32(50).fork()).ldelim();
            }
            w.uint32(56).int32(m.honor);
            if (m.lastRewardTime != null && Object.hasOwnProperty.call(m, "lastRewardTime"))
                w.uint32(64).int32(m.lastRewardTime);
            return w;
        };
        p_arena.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_arena();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.ranking = r.int32();
                    break;
                case 2:
                    m.combat = r.int32();
                    break;
                case 3:
                    m.canChallengeTimes = r.int32();
                    break;
                case 4:
                    m.canBuyChallengeTimes = r.int32();
                    break;
                case 5:
                    m.alreadyEncourageTimes = r.int32();
                    break;
                case 6:
                    if (!(m.objects && m.objects.length))
                        m.objects = [];
                    m.objects.push($root.p_arena_object.decode(r, r.uint32()));
                    break;
                case 7:
                    m.honor = r.int32();
                    break;
                case 8:
                    m.lastRewardTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("ranking"))
                throw $util.ProtocolError("missing required 'ranking'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("canChallengeTimes"))
                throw $util.ProtocolError("missing required 'canChallengeTimes'", { instance: m });
            if (!m.hasOwnProperty("canBuyChallengeTimes"))
                throw $util.ProtocolError("missing required 'canBuyChallengeTimes'", { instance: m });
            if (!m.hasOwnProperty("alreadyEncourageTimes"))
                throw $util.ProtocolError("missing required 'alreadyEncourageTimes'", { instance: m });
            if (!m.hasOwnProperty("honor"))
                throw $util.ProtocolError("missing required 'honor'", { instance: m });
            return m;
        };
        return p_arena;
    })();
    $root.c2s_arena_info_request = (function() {
        function c2s_arena_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_arena_info_request.cmd = 8193;
        c2s_arena_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_arena_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_arena_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_arena_info_request;
    })();
    $root.s2c_arena_info_reply = (function() {
        function s2c_arena_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_arena_info_reply.prototype.arena = null;
        s2c_arena_info_reply.cmd = 8194;
        s2c_arena_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_arena.encode(m.arena, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_arena_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_arena_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.arena = $root.p_arena.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("arena"))
                throw $util.ProtocolError("missing required 'arena'", { instance: m });
            return m;
        };
        return s2c_arena_info_reply;
    })();
    $root.s2c_arena_info_change_notify = (function() {
        function s2c_arena_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_arena_info_change_notify.prototype.arena = null;
        s2c_arena_info_change_notify.cmd = 8195;
        s2c_arena_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_arena.encode(m.arena, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_arena_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_arena_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.arena = $root.p_arena.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("arena"))
                throw $util.ProtocolError("missing required 'arena'", { instance: m });
            return m;
        };
        return s2c_arena_info_change_notify;
    })();
    $root.c2s_change_challenge_list_request = (function() {
        function c2s_change_challenge_list_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_change_challenge_list_request.cmd = 8196;
        c2s_change_challenge_list_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_change_challenge_list_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_change_challenge_list_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_change_challenge_list_request;
    })();
    $root.c2s_challenge_request = (function() {
        function c2s_challenge_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_challenge_request.prototype.targetRank = 0;
        c2s_challenge_request.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_challenge_request.cmd = 8197;
        c2s_challenge_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.targetRank);
            w.uint32(16).int64(m.id);
            return w;
        };
        c2s_challenge_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_challenge_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetRank = r.int32();
                    break;
                case 2:
                    m.id = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetRank"))
                throw $util.ProtocolError("missing required 'targetRank'", { instance: m });
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_challenge_request;
    })();
    $root.s2c_challenge_reply = (function() {
        function s2c_challenge_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_challenge_reply.prototype.targetId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_challenge_reply.cmd = 8198;
        s2c_challenge_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.targetId);
            return w;
        };
        s2c_challenge_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_challenge_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.targetId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            return m;
        };
        return s2c_challenge_reply;
    })();
    $root.c2s_encourage_request = (function() {
        function c2s_encourage_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_encourage_request.cmd = 8199;
        c2s_encourage_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_encourage_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_encourage_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_encourage_request;
    })();
    $root.s2c_encourage_reply = (function() {
        function s2c_encourage_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_encourage_reply.prototype.alreadyEncourageTimes = 0;
        s2c_encourage_reply.prototype.combat = 0;
        s2c_encourage_reply.cmd = 8200;
        s2c_encourage_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.alreadyEncourageTimes);
            w.uint32(16).int32(m.combat);
            return w;
        };
        s2c_encourage_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_encourage_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.alreadyEncourageTimes = r.int32();
                    break;
                case 2:
                    m.combat = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("alreadyEncourageTimes"))
                throw $util.ProtocolError("missing required 'alreadyEncourageTimes'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return s2c_encourage_reply;
    })();
    $root.c2s_buy_challenge_times_request = (function() {
        function c2s_buy_challenge_times_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_buy_challenge_times_request.prototype.times = 0;
        c2s_buy_challenge_times_request.cmd = 8201;
        c2s_buy_challenge_times_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.times);
            return w;
        };
        c2s_buy_challenge_times_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_buy_challenge_times_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.times = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("times"))
                throw $util.ProtocolError("missing required 'times'", { instance: m });
            return m;
        };
        return c2s_buy_challenge_times_request;
    })();
    $root.s2c_buy_challenge_times_reply = (function() {
        function s2c_buy_challenge_times_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_buy_challenge_times_reply.prototype.canChallengeTimes = 0;
        s2c_buy_challenge_times_reply.prototype.canBuyChallengeTimes = 0;
        s2c_buy_challenge_times_reply.cmd = 8202;
        s2c_buy_challenge_times_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.canChallengeTimes);
            w.uint32(16).int32(m.canBuyChallengeTimes);
            return w;
        };
        s2c_buy_challenge_times_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_buy_challenge_times_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.canChallengeTimes = r.int32();
                    break;
                case 2:
                    m.canBuyChallengeTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("canChallengeTimes"))
                throw $util.ProtocolError("missing required 'canChallengeTimes'", { instance: m });
            if (!m.hasOwnProperty("canBuyChallengeTimes"))
                throw $util.ProtocolError("missing required 'canBuyChallengeTimes'", { instance: m });
            return m;
        };
        return s2c_buy_challenge_times_reply;
    })();
    $root.s2c_honor_change_notify = (function() {
        function s2c_honor_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_honor_change_notify.prototype.honor = 0;
        s2c_honor_change_notify.cmd = 8203;
        s2c_honor_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.honor);
            return w;
        };
        s2c_honor_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_honor_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.honor = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("honor"))
                throw $util.ProtocolError("missing required 'honor'", { instance: m });
            return m;
        };
        return s2c_honor_change_notify;
    })();
    $root.c2s_fetch_arena_reward_request = (function() {
        function c2s_fetch_arena_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_arena_reward_request.cmd = 8204;
        c2s_fetch_arena_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_fetch_arena_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_arena_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_fetch_arena_reward_request;
    })();
    $root.s2c_arena_fight_result_notify = (function() {
        function s2c_arena_fight_result_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_arena_fight_result_notify.prototype.result = 0;
        s2c_arena_fight_result_notify.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_arena_fight_result_notify.prototype.coin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_arena_fight_result_notify.prototype.newRanking = 0;
        s2c_arena_fight_result_notify.prototype.targetId = 0;
        s2c_arena_fight_result_notify.cmd = 8205;
        s2c_arena_fight_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.result);
            w.uint32(16).int64(m.exp);
            w.uint32(24).int64(m.coin);
            w.uint32(32).int32(m.newRanking);
            if (m.targetId != null && Object.hasOwnProperty.call(m, "targetId"))
                w.uint32(40).int32(m.targetId);
            return w;
        };
        s2c_arena_fight_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_arena_fight_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.result = r.int32();
                    break;
                case 2:
                    m.exp = r.int64();
                    break;
                case 3:
                    m.coin = r.int64();
                    break;
                case 4:
                    m.newRanking = r.int32();
                    break;
                case 5:
                    m.targetId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("coin"))
                throw $util.ProtocolError("missing required 'coin'", { instance: m });
            if (!m.hasOwnProperty("newRanking"))
                throw $util.ProtocolError("missing required 'newRanking'", { instance: m });
            return m;
        };
        return s2c_arena_fight_result_notify;
    })();
    $root.c2s_arena_quit_scene_request = (function() {
        function c2s_arena_quit_scene_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_arena_quit_scene_request.cmd = 8206;
        c2s_arena_quit_scene_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_arena_quit_scene_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_arena_quit_scene_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_arena_quit_scene_request;
    })();
    $root.c2s_arena_get_rank_reward_request = (function() {
        function c2s_arena_get_rank_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_arena_get_rank_reward_request.prototype.rank = 0;
        c2s_arena_get_rank_reward_request.cmd = 8207;
        c2s_arena_get_rank_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rank != null && Object.hasOwnProperty.call(m, "rank"))
                w.uint32(8).int32(m.rank);
            return w;
        };
        c2s_arena_get_rank_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_arena_get_rank_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_arena_get_rank_reward_request;
    })();
    $root.s2c_arena_get_rank_reward_reply = (function() {
        function s2c_arena_get_rank_reward_reply(p) {
            this.itemList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_arena_get_rank_reward_reply.prototype.rank = 0;
        s2c_arena_get_rank_reward_reply.prototype.itemList = $util.emptyArray;
        s2c_arena_get_rank_reward_reply.cmd = 8208;
        s2c_arena_get_rank_reward_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rank != null && Object.hasOwnProperty.call(m, "rank"))
                w.uint32(8).int32(m.rank);
            if (m.itemList != null && m.itemList.length) {
                for (var i = 0; i < m.itemList.length; ++i)
                    $root.item_simple.encode(m.itemList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_arena_get_rank_reward_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_arena_get_rank_reward_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    if (!(m.itemList && m.itemList.length))
                        m.itemList = [];
                    m.itemList.push($root.item_simple.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_arena_get_rank_reward_reply;
    })();
    $root.c2s_enter_demon_tower_request = (function() {
        function c2s_enter_demon_tower_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_enter_demon_tower_request.cmd = 8449;
        c2s_enter_demon_tower_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_enter_demon_tower_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_enter_demon_tower_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_enter_demon_tower_request;
    })();
    $root.c2s_leave_demon_tower_request = (function() {
        function c2s_leave_demon_tower_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_leave_demon_tower_request.cmd = 8450;
        c2s_leave_demon_tower_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_leave_demon_tower_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_leave_demon_tower_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_leave_demon_tower_request;
    })();
    $root.c2s_query_role_demon_tower_request = (function() {
        function c2s_query_role_demon_tower_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_role_demon_tower_request.cmd = 8451;
        c2s_query_role_demon_tower_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_role_demon_tower_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_role_demon_tower_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_role_demon_tower_request;
    })();
    $root.s2c_role_demon_tower_notify = (function() {
        function s2c_role_demon_tower_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_demon_tower_notify.prototype.curFloor = 0;
        s2c_role_demon_tower_notify.prototype.curKillCount = 0;
        s2c_role_demon_tower_notify.prototype.isFinish = 0;
        s2c_role_demon_tower_notify.cmd = 8452;
        s2c_role_demon_tower_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.curFloor);
            w.uint32(16).int32(m.curKillCount);
            w.uint32(24).int32(m.isFinish);
            return w;
        };
        s2c_role_demon_tower_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_demon_tower_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.curFloor = r.int32();
                    break;
                case 2:
                    m.curKillCount = r.int32();
                    break;
                case 3:
                    m.isFinish = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("curFloor"))
                throw $util.ProtocolError("missing required 'curFloor'", { instance: m });
            if (!m.hasOwnProperty("curKillCount"))
                throw $util.ProtocolError("missing required 'curKillCount'", { instance: m });
            if (!m.hasOwnProperty("isFinish"))
                throw $util.ProtocolError("missing required 'isFinish'", { instance: m });
            return m;
        };
        return s2c_role_demon_tower_notify;
    })();
    $root.s2c_demon_tower_result_notify = (function() {
        function s2c_demon_tower_result_notify(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_demon_tower_result_notify.prototype.isFinish = 0;
        s2c_demon_tower_result_notify.prototype.items = $util.emptyArray;
        s2c_demon_tower_result_notify.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_demon_tower_result_notify.prototype.floor = 0;
        s2c_demon_tower_result_notify.prototype.time = 0;
        s2c_demon_tower_result_notify.cmd = 8453;
        s2c_demon_tower_result_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isFinish);
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.p_kv_pair.encode(m.items[i], w.uint32(18).fork()).ldelim();
            }
            w.uint32(24).int64(m.exp);
            if (m.floor != null && Object.hasOwnProperty.call(m, "floor"))
                w.uint32(32).int32(m.floor);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(40).int32(m.time);
            return w;
        };
        s2c_demon_tower_result_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_demon_tower_result_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isFinish = r.int32();
                    break;
                case 2:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 3:
                    m.exp = r.int64();
                    break;
                case 4:
                    m.floor = r.int32();
                    break;
                case 5:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isFinish"))
                throw $util.ProtocolError("missing required 'isFinish'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            return m;
        };
        return s2c_demon_tower_result_notify;
    })();
    $root.want_sale_info_p = (function() {
        function want_sale_info_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        want_sale_info_p.prototype.wantSaleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        want_sale_info_p.prototype.itemId = 0;
        want_sale_info_p.prototype.itemNum = 0;
        want_sale_info_p.prototype.totalPrice = 0;
        want_sale_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.wantSaleId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.itemNum);
            w.uint32(32).int32(m.totalPrice);
            return w;
        };
        want_sale_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.want_sale_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.wantSaleId = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.itemNum = r.int32();
                    break;
                case 4:
                    m.totalPrice = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("wantSaleId"))
                throw $util.ProtocolError("missing required 'wantSaleId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            if (!m.hasOwnProperty("totalPrice"))
                throw $util.ProtocolError("missing required 'totalPrice'", { instance: m });
            return m;
        };
        return want_sale_info_p;
    })();
    $root.sale_info_p = (function() {
        function sale_info_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        sale_info_p.prototype.saleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        sale_info_p.prototype.type = 0;
        sale_info_p.prototype.status = 0;
        sale_info_p.prototype.itemId = 0;
        sale_info_p.prototype.itemUniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        sale_info_p.prototype.itemNum = 0;
        sale_info_p.prototype.totalPrice = 0;
        sale_info_p.prototype.marketId = 0;
        sale_info_p.prototype.ownerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        sale_info_p.prototype.putawayTime = 0;
        sale_info_p.prototype.expireTime = 0;
        sale_info_p.prototype.itemInfo = null;
        sale_info_p.prototype.hassPasswd = 0;
        sale_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.saleId);
            w.uint32(16).int32(m.type);
            w.uint32(24).int32(m.status);
            w.uint32(32).int32(m.itemId);
            w.uint32(40).int64(m.itemUniqId);
            w.uint32(48).int32(m.itemNum);
            w.uint32(56).int32(m.totalPrice);
            w.uint32(64).int32(m.marketId);
            w.uint32(72).int64(m.ownerId);
            w.uint32(80).int32(m.putawayTime);
            w.uint32(88).int32(m.expireTime);
            $root.p_item.encode(m.itemInfo, w.uint32(98).fork()).ldelim();
            w.uint32(104).int32(m.hassPasswd);
            return w;
        };
        sale_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.sale_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.saleId = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.status = r.int32();
                    break;
                case 4:
                    m.itemId = r.int32();
                    break;
                case 5:
                    m.itemUniqId = r.int64();
                    break;
                case 6:
                    m.itemNum = r.int32();
                    break;
                case 7:
                    m.totalPrice = r.int32();
                    break;
                case 8:
                    m.marketId = r.int32();
                    break;
                case 9:
                    m.ownerId = r.int64();
                    break;
                case 10:
                    m.putawayTime = r.int32();
                    break;
                case 11:
                    m.expireTime = r.int32();
                    break;
                case 12:
                    m.itemInfo = $root.p_item.decode(r, r.uint32());
                    break;
                case 13:
                    m.hassPasswd = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("saleId"))
                throw $util.ProtocolError("missing required 'saleId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("itemUniqId"))
                throw $util.ProtocolError("missing required 'itemUniqId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            if (!m.hasOwnProperty("totalPrice"))
                throw $util.ProtocolError("missing required 'totalPrice'", { instance: m });
            if (!m.hasOwnProperty("marketId"))
                throw $util.ProtocolError("missing required 'marketId'", { instance: m });
            if (!m.hasOwnProperty("ownerId"))
                throw $util.ProtocolError("missing required 'ownerId'", { instance: m });
            if (!m.hasOwnProperty("putawayTime"))
                throw $util.ProtocolError("missing required 'putawayTime'", { instance: m });
            if (!m.hasOwnProperty("expireTime"))
                throw $util.ProtocolError("missing required 'expireTime'", { instance: m });
            if (!m.hasOwnProperty("itemInfo"))
                throw $util.ProtocolError("missing required 'itemInfo'", { instance: m });
            if (!m.hasOwnProperty("hassPasswd"))
                throw $util.ProtocolError("missing required 'hassPasswd'", { instance: m });
            return m;
        };
        return sale_info_p;
    })();
    $root.c2s_look_role_sale_info = (function() {
        function c2s_look_role_sale_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_look_role_sale_info.prototype.type = 0;
        c2s_look_role_sale_info.cmd = 8705;
        c2s_look_role_sale_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_look_role_sale_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_look_role_sale_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_look_role_sale_info;
    })();
    $root.s2c_look_role_sale_info = (function() {
        function s2c_look_role_sale_info(p) {
            this.saleInfoList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_look_role_sale_info.prototype.saleInfoList = $util.emptyArray;
        s2c_look_role_sale_info.cmd = 8706;
        s2c_look_role_sale_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.saleInfoList != null && m.saleInfoList.length) {
                for (var i = 0; i < m.saleInfoList.length; ++i)
                    $root.sale_info_p.encode(m.saleInfoList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_look_role_sale_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_look_role_sale_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.saleInfoList && m.saleInfoList.length))
                        m.saleInfoList = [];
                    m.saleInfoList.push($root.sale_info_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_look_role_sale_info;
    })();
    $root.c2s_release_want_sale = (function() {
        function c2s_release_want_sale(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_release_want_sale.prototype.itemId = 0;
        c2s_release_want_sale.prototype.itemNum = 0;
        c2s_release_want_sale.prototype.totalPrice = 0;
        c2s_release_want_sale.cmd = 8707;
        c2s_release_want_sale.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.itemNum);
            w.uint32(24).int32(m.totalPrice);
            return w;
        };
        c2s_release_want_sale.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_release_want_sale();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.itemNum = r.int32();
                    break;
                case 3:
                    m.totalPrice = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            if (!m.hasOwnProperty("totalPrice"))
                throw $util.ProtocolError("missing required 'totalPrice'", { instance: m });
            return m;
        };
        return c2s_release_want_sale;
    })();
    $root.s2c_release_want_sale = (function() {
        function s2c_release_want_sale(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_release_want_sale.prototype.wantInfo = null;
        s2c_release_want_sale.cmd = 8708;
        s2c_release_want_sale.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.want_sale_info_p.encode(m.wantInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_release_want_sale.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_release_want_sale();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.wantInfo = $root.want_sale_info_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("wantInfo"))
                throw $util.ProtocolError("missing required 'wantInfo'", { instance: m });
            return m;
        };
        return s2c_release_want_sale;
    })();
    $root.c2s_sell_to_other_want = (function() {
        function c2s_sell_to_other_want(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_sell_to_other_want.prototype.wantSaleId = 0;
        c2s_sell_to_other_want.prototype.itemNum = 0;
        c2s_sell_to_other_want.cmd = 8709;
        c2s_sell_to_other_want.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.wantSaleId);
            w.uint32(16).int32(m.itemNum);
            return w;
        };
        c2s_sell_to_other_want.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_sell_to_other_want();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.wantSaleId = r.int32();
                    break;
                case 2:
                    m.itemNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("wantSaleId"))
                throw $util.ProtocolError("missing required 'wantSaleId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            return m;
        };
        return c2s_sell_to_other_want;
    })();
    $root.c2s_look_market = (function() {
        function c2s_look_market(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_look_market.prototype.marketId = 0;
        c2s_look_market.prototype.condition = null;
        c2s_look_market.prototype.pageIndex = 0;
        c2s_look_market.cmd = 8710;
        c2s_look_market.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.marketId);
            $root.sale_condition.encode(m.condition, w.uint32(18).fork()).ldelim();
            w.uint32(24).int32(m.pageIndex);
            return w;
        };
        c2s_look_market.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_look_market();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.marketId = r.int32();
                    break;
                case 2:
                    m.condition = $root.sale_condition.decode(r, r.uint32());
                    break;
                case 3:
                    m.pageIndex = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("marketId"))
                throw $util.ProtocolError("missing required 'marketId'", { instance: m });
            if (!m.hasOwnProperty("condition"))
                throw $util.ProtocolError("missing required 'condition'", { instance: m });
            if (!m.hasOwnProperty("pageIndex"))
                throw $util.ProtocolError("missing required 'pageIndex'", { instance: m });
            return m;
        };
        return c2s_look_market;
    })();
    $root.s2c_look_market = (function() {
        function s2c_look_market(p) {
            this.saleInfoList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_look_market.prototype.saleInfoList = $util.emptyArray;
        s2c_look_market.cmd = 8711;
        s2c_look_market.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.saleInfoList != null && m.saleInfoList.length) {
                for (var i = 0; i < m.saleInfoList.length; ++i)
                    $root.sale_info_p.encode(m.saleInfoList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_look_market.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_look_market();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.saleInfoList && m.saleInfoList.length))
                        m.saleInfoList = [];
                    m.saleInfoList.push($root.sale_info_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_look_market;
    })();
    $root.sale_condition = (function() {
        function sale_condition(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        sale_condition.prototype.type = 0;
        sale_condition.prototype.color = 0;
        sale_condition.prototype.stage = 0;
        sale_condition.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.color);
            w.uint32(24).int32(m.stage);
            return w;
        };
        sale_condition.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.sale_condition();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.color = r.int32();
                    break;
                case 3:
                    m.stage = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("color"))
                throw $util.ProtocolError("missing required 'color'", { instance: m });
            if (!m.hasOwnProperty("stage"))
                throw $util.ProtocolError("missing required 'stage'", { instance: m });
            return m;
        };
        return sale_condition;
    })();
    $root.c2s_search_all_by_name = (function() {
        function c2s_search_all_by_name(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_search_all_by_name.prototype.itemName = "";
        c2s_search_all_by_name.prototype.pageIndex = 0;
        c2s_search_all_by_name.cmd = 8712;
        c2s_search_all_by_name.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.itemName);
            w.uint32(16).int32(m.pageIndex);
            return w;
        };
        c2s_search_all_by_name.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_search_all_by_name();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemName = r.string();
                    break;
                case 2:
                    m.pageIndex = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemName"))
                throw $util.ProtocolError("missing required 'itemName'", { instance: m });
            if (!m.hasOwnProperty("pageIndex"))
                throw $util.ProtocolError("missing required 'pageIndex'", { instance: m });
            return m;
        };
        return c2s_search_all_by_name;
    })();
    $root.s2c_search_all_by_name = (function() {
        function s2c_search_all_by_name(p) {
            this.saleInfoList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_search_all_by_name.prototype.saleInfoList = $util.emptyArray;
        s2c_search_all_by_name.cmd = 8713;
        s2c_search_all_by_name.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.saleInfoList != null && m.saleInfoList.length) {
                for (var i = 0; i < m.saleInfoList.length; ++i)
                    $root.sale_info_p.encode(m.saleInfoList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_search_all_by_name.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_search_all_by_name();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.saleInfoList && m.saleInfoList.length))
                        m.saleInfoList = [];
                    m.saleInfoList.push($root.sale_info_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_search_all_by_name;
    })();
    $root.c2s_put_away = (function() {
        function c2s_put_away(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_put_away.prototype.itemId = 0;
        c2s_put_away.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_put_away.prototype.itemNum = 0;
        c2s_put_away.prototype.price = 0;
        c2s_put_away.prototype.passwd = "";
        c2s_put_away.cmd = 8714;
        c2s_put_away.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int64(m.uniqId);
            w.uint32(24).int32(m.itemNum);
            w.uint32(32).int32(m.price);
            w.uint32(42).string(m.passwd);
            return w;
        };
        c2s_put_away.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_put_away();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.uniqId = r.int64();
                    break;
                case 3:
                    m.itemNum = r.int32();
                    break;
                case 4:
                    m.price = r.int32();
                    break;
                case 5:
                    m.passwd = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            if (!m.hasOwnProperty("price"))
                throw $util.ProtocolError("missing required 'price'", { instance: m });
            if (!m.hasOwnProperty("passwd"))
                throw $util.ProtocolError("missing required 'passwd'", { instance: m });
            return m;
        };
        return c2s_put_away;
    })();
    $root.s2c_put_away = (function() {
        function s2c_put_away(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_put_away.prototype.saleInfo = null;
        s2c_put_away.cmd = 8715;
        s2c_put_away.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.sale_info_p.encode(m.saleInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_put_away.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_put_away();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.saleInfo = $root.sale_info_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("saleInfo"))
                throw $util.ProtocolError("missing required 'saleInfo'", { instance: m });
            return m;
        };
        return s2c_put_away;
    })();
    $root.c2s_buy = (function() {
        function c2s_buy(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_buy.prototype.saleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_buy.prototype.itemNum = 0;
        c2s_buy.prototype.passwd = "";
        c2s_buy.cmd = 8716;
        c2s_buy.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.saleId);
            w.uint32(16).int32(m.itemNum);
            w.uint32(26).string(m.passwd);
            return w;
        };
        c2s_buy.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_buy();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.saleId = r.int64();
                    break;
                case 2:
                    m.itemNum = r.int32();
                    break;
                case 3:
                    m.passwd = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("saleId"))
                throw $util.ProtocolError("missing required 'saleId'", { instance: m });
            if (!m.hasOwnProperty("itemNum"))
                throw $util.ProtocolError("missing required 'itemNum'", { instance: m });
            if (!m.hasOwnProperty("passwd"))
                throw $util.ProtocolError("missing required 'passwd'", { instance: m });
            return m;
        };
        return c2s_buy;
    })();
    $root.c2s_take_down = (function() {
        function c2s_take_down(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_take_down.prototype.saleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_take_down.cmd = 8717;
        c2s_take_down.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.saleId);
            return w;
        };
        c2s_take_down.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_take_down();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.saleId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("saleId"))
                throw $util.ProtocolError("missing required 'saleId'", { instance: m });
            return m;
        };
        return c2s_take_down;
    })();
    $root.c2s_query_market_list = (function() {
        function c2s_query_market_list(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_market_list.cmd = 8718;
        c2s_query_market_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_market_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_market_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_market_list;
    })();
    $root.s2c_query_market_list = (function() {
        function s2c_query_market_list(p) {
            this.goodsNumList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_market_list.prototype.goodsNumList = $util.emptyArray;
        s2c_query_market_list.cmd = 8719;
        s2c_query_market_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.goodsNumList != null && m.goodsNumList.length) {
                for (var i = 0; i < m.goodsNumList.length; ++i)
                    $root.p_kv_pair.encode(m.goodsNumList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_market_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_market_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.goodsNumList && m.goodsNumList.length))
                        m.goodsNumList = [];
                    m.goodsNumList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_market_list;
    })();
    $root.c2s_peak_match_request = (function() {
        function c2s_peak_match_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_request.prototype.machineName = "";
        c2s_peak_match_request.cmd = 8961;
        c2s_peak_match_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.machineName);
            return w;
        };
        c2s_peak_match_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.machineName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("machineName"))
                throw $util.ProtocolError("missing required 'machineName'", { instance: m });
            return m;
        };
        return c2s_peak_match_request;
    })();
    $root.s2c_peak_match_success_notify = (function() {
        function s2c_peak_match_success_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_peak_match_success_notify.prototype.enterTime = 0;
        s2c_peak_match_success_notify.cmd = 8962;
        s2c_peak_match_success_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).uint32(m.enterTime);
            return w;
        };
        s2c_peak_match_success_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_peak_match_success_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.enterTime = r.uint32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("enterTime"))
                throw $util.ProtocolError("missing required 'enterTime'", { instance: m });
            return m;
        };
        return s2c_peak_match_success_notify;
    })();
    $root.s2c_peak_match_fight_notify = (function() {
        function s2c_peak_match_fight_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_peak_match_fight_notify.prototype.beginFightTime = 0;
        s2c_peak_match_fight_notify.prototype.endFightTime = 0;
        s2c_peak_match_fight_notify.cmd = 8963;
        s2c_peak_match_fight_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).uint32(m.beginFightTime);
            w.uint32(16).uint32(m.endFightTime);
            return w;
        };
        s2c_peak_match_fight_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_peak_match_fight_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beginFightTime = r.uint32();
                    break;
                case 2:
                    m.endFightTime = r.uint32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beginFightTime"))
                throw $util.ProtocolError("missing required 'beginFightTime'", { instance: m });
            if (!m.hasOwnProperty("endFightTime"))
                throw $util.ProtocolError("missing required 'endFightTime'", { instance: m });
            return m;
        };
        return s2c_peak_match_fight_notify;
    })();
    $root.c2s_peak_match_cancel = (function() {
        function c2s_peak_match_cancel(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_cancel.cmd = 8964;
        c2s_peak_match_cancel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_peak_match_cancel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_cancel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_peak_match_cancel;
    })();
    $root.c2s_peak_match_rank = (function() {
        function c2s_peak_match_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_rank.cmd = 8965;
        c2s_peak_match_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_peak_match_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_peak_match_rank;
    })();
    $root.p_peak_match_rank = (function() {
        function p_peak_match_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_peak_match_rank.prototype.rank = 0;
        p_peak_match_rank.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_peak_match_rank.prototype.point = 0;
        p_peak_match_rank.prototype.roleName = "";
        p_peak_match_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            w.uint32(16).int64(m.roleId);
            w.uint32(24).int32(m.point);
            w.uint32(34).string(m.roleName);
            return w;
        };
        p_peak_match_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_peak_match_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.roleId = r.int64();
                    break;
                case 3:
                    m.point = r.int32();
                    break;
                case 4:
                    m.roleName = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("point"))
                throw $util.ProtocolError("missing required 'point'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            return m;
        };
        return p_peak_match_rank;
    })();
    $root.s2c_peak_match_rank = (function() {
        function s2c_peak_match_rank(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_peak_match_rank.prototype.list = $util.emptyArray;
        s2c_peak_match_rank.cmd = 8966;
        s2c_peak_match_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.p_peak_match_rank.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_peak_match_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_peak_match_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.p_peak_match_rank.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_peak_match_rank;
    })();
    $root.s2c_peak_match_fight_end = (function() {
        function s2c_peak_match_fight_end(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_peak_match_fight_end.prototype.winId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_peak_match_fight_end.prototype.loseId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_peak_match_fight_end.prototype.addExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_peak_match_fight_end.prototype.addPoint = 0;
        s2c_peak_match_fight_end.prototype.point = 0;
        s2c_peak_match_fight_end.cmd = 8967;
        s2c_peak_match_fight_end.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.winId);
            w.uint32(16).int64(m.loseId);
            w.uint32(24).int64(m.addExp);
            w.uint32(32).int32(m.addPoint);
            w.uint32(40).int32(m.point);
            return w;
        };
        s2c_peak_match_fight_end.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_peak_match_fight_end();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.winId = r.int64();
                    break;
                case 2:
                    m.loseId = r.int64();
                    break;
                case 3:
                    m.addExp = r.int64();
                    break;
                case 4:
                    m.addPoint = r.int32();
                    break;
                case 5:
                    m.point = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("winId"))
                throw $util.ProtocolError("missing required 'winId'", { instance: m });
            if (!m.hasOwnProperty("loseId"))
                throw $util.ProtocolError("missing required 'loseId'", { instance: m });
            if (!m.hasOwnProperty("addExp"))
                throw $util.ProtocolError("missing required 'addExp'", { instance: m });
            if (!m.hasOwnProperty("addPoint"))
                throw $util.ProtocolError("missing required 'addPoint'", { instance: m });
            if (!m.hasOwnProperty("point"))
                throw $util.ProtocolError("missing required 'point'", { instance: m });
            return m;
        };
        return s2c_peak_match_fight_end;
    })();
    $root.c2s_peak_match_info = (function() {
        function c2s_peak_match_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_info.cmd = 8968;
        c2s_peak_match_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_peak_match_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_peak_match_info;
    })();
    $root.s2c_peak_match_info = (function() {
        function s2c_peak_match_info(p) {
            this.joinRewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_peak_match_info.prototype.point = 0;
        s2c_peak_match_info.prototype.honor = 0;
        s2c_peak_match_info.prototype.joinRewards = $util.emptyArray;
        s2c_peak_match_info.cmd = 8969;
        s2c_peak_match_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.point);
            w.uint32(16).int32(m.honor);
            if (m.joinRewards != null && m.joinRewards.length) {
                for (var i = 0; i < m.joinRewards.length; ++i)
                    w.uint32(24).int32(m.joinRewards[i]);
            }
            return w;
        };
        s2c_peak_match_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_peak_match_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.point = r.int32();
                    break;
                case 2:
                    m.honor = r.int32();
                    break;
                case 3:
                    if (!(m.joinRewards && m.joinRewards.length))
                        m.joinRewards = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.joinRewards.push(r.int32());
                    } else
                        m.joinRewards.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("point"))
                throw $util.ProtocolError("missing required 'point'", { instance: m });
            if (!m.hasOwnProperty("honor"))
                throw $util.ProtocolError("missing required 'honor'", { instance: m });
            return m;
        };
        return s2c_peak_match_info;
    })();
    $root.c2s_peak_match_join_reward = (function() {
        function c2s_peak_match_join_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_join_reward.prototype.count = 0;
        c2s_peak_match_join_reward.cmd = 8970;
        c2s_peak_match_join_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.count);
            return w;
        };
        c2s_peak_match_join_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_join_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            return m;
        };
        return c2s_peak_match_join_reward;
    })();
    $root.c2s_peak_match_grade_reward = (function() {
        function c2s_peak_match_grade_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_grade_reward.cmd = 8971;
        c2s_peak_match_grade_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_peak_match_grade_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_grade_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_peak_match_grade_reward;
    })();
    $root.c2s_peak_match_quit = (function() {
        function c2s_peak_match_quit(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_peak_match_quit.cmd = 8972;
        c2s_peak_match_quit.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_peak_match_quit.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_peak_match_quit();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_peak_match_quit;
    })();
    $root.c2s_elf_info = (function() {
        function c2s_elf_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_elf_info.cmd = 9217;
        c2s_elf_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_elf_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_elf_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_elf_info;
    })();
    $root.s2c_elf_info = (function() {
        function s2c_elf_info(p) {
            this.elfs = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_elf_info.prototype.elfs = $util.emptyArray;
        s2c_elf_info.prototype.battleMaxNum = 0;
        s2c_elf_info.cmd = 9218;
        s2c_elf_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.elfs != null && m.elfs.length) {
                for (var i = 0; i < m.elfs.length; ++i)
                    $root.p_elf.encode(m.elfs[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.battleMaxNum);
            return w;
        };
        s2c_elf_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_elf_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.elfs && m.elfs.length))
                        m.elfs = [];
                    m.elfs.push($root.p_elf.decode(r, r.uint32()));
                    break;
                case 2:
                    m.battleMaxNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("battleMaxNum"))
                throw $util.ProtocolError("missing required 'battleMaxNum'", { instance: m });
            return m;
        };
        return s2c_elf_info;
    })();
    $root.p_elf = (function() {
        function p_elf(p) {
            this.skill = [];
            this.equips = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_elf.prototype.elfId = 0;
        p_elf.prototype.isBattle = 0;
        p_elf.prototype.skill = $util.emptyArray;
        p_elf.prototype.equips = $util.emptyArray;
        p_elf.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.elfId);
            w.uint32(16).int32(m.isBattle);
            if (m.skill != null && m.skill.length) {
                for (var i = 0; i < m.skill.length; ++i)
                    $root.p_elf_skill.encode(m.skill[i], w.uint32(34).fork()).ldelim();
            }
            if (m.equips != null && m.equips.length) {
                for (var i = 0; i < m.equips.length; ++i)
                    $root.p_elf_equip.encode(m.equips[i], w.uint32(42).fork()).ldelim();
            }
            return w;
        };
        p_elf.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_elf();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.elfId = r.int32();
                    break;
                case 2:
                    m.isBattle = r.int32();
                    break;
                case 4:
                    if (!(m.skill && m.skill.length))
                        m.skill = [];
                    m.skill.push($root.p_elf_skill.decode(r, r.uint32()));
                    break;
                case 5:
                    if (!(m.equips && m.equips.length))
                        m.equips = [];
                    m.equips.push($root.p_elf_equip.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("elfId"))
                throw $util.ProtocolError("missing required 'elfId'", { instance: m });
            if (!m.hasOwnProperty("isBattle"))
                throw $util.ProtocolError("missing required 'isBattle'", { instance: m });
            return m;
        };
        return p_elf;
    })();
    $root.p_elf_skill = (function() {
        function p_elf_skill(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_elf_skill.prototype.skillId = 0;
        p_elf_skill.prototype.score = 0;
        p_elf_skill.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillId);
            w.uint32(16).int32(m.score);
            return w;
        };
        p_elf_skill.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_elf_skill();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                case 2:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return p_elf_skill;
    })();
    $root.c2s_elf_op = (function() {
        function c2s_elf_op(p) {
            this.consumeItems = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_elf_op.prototype.opType = 0;
        c2s_elf_op.prototype.elfId = 0;
        c2s_elf_op.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_elf_op.prototype.consumeItems = $util.emptyArray;
        c2s_elf_op.cmd = 9219;
        c2s_elf_op.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.opType);
            w.uint32(16).int32(m.elfId);
            w.uint32(24).int64(m.uniqId);
            if (m.consumeItems != null && m.consumeItems.length) {
                for (var i = 0; i < m.consumeItems.length; ++i)
                    $root.item_simple.encode(m.consumeItems[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };
        c2s_elf_op.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_elf_op();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opType = r.int32();
                    break;
                case 2:
                    m.elfId = r.int32();
                    break;
                case 3:
                    m.uniqId = r.int64();
                    break;
                case 4:
                    if (!(m.consumeItems && m.consumeItems.length))
                        m.consumeItems = [];
                    m.consumeItems.push($root.item_simple.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("opType"))
                throw $util.ProtocolError("missing required 'opType'", { instance: m });
            if (!m.hasOwnProperty("elfId"))
                throw $util.ProtocolError("missing required 'elfId'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_elf_op;
    })();
    $root.s2c_elf_op = (function() {
        function s2c_elf_op(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_elf_op.prototype.opType = 0;
        s2c_elf_op.prototype.elf = null;
        s2c_elf_op.cmd = 9220;
        s2c_elf_op.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.opType);
            $root.p_elf.encode(m.elf, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_elf_op.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_elf_op();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opType = r.int32();
                    break;
                case 2:
                    m.elf = $root.p_elf.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("opType"))
                throw $util.ProtocolError("missing required 'opType'", { instance: m });
            if (!m.hasOwnProperty("elf"))
                throw $util.ProtocolError("missing required 'elf'", { instance: m });
            return m;
        };
        return s2c_elf_op;
    })();
    $root.c2s_elf_add_battle_pos = (function() {
        function c2s_elf_add_battle_pos(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_elf_add_battle_pos.cmd = 9221;
        c2s_elf_add_battle_pos.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_elf_add_battle_pos.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_elf_add_battle_pos();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_elf_add_battle_pos;
    })();
    $root.s2c_elf_add_battle_pos = (function() {
        function s2c_elf_add_battle_pos(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_elf_add_battle_pos.prototype.battleMaxNum = 0;
        s2c_elf_add_battle_pos.cmd = 9222;
        s2c_elf_add_battle_pos.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.battleMaxNum);
            return w;
        };
        s2c_elf_add_battle_pos.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_elf_add_battle_pos();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.battleMaxNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("battleMaxNum"))
                throw $util.ProtocolError("missing required 'battleMaxNum'", { instance: m });
            return m;
        };
        return s2c_elf_add_battle_pos;
    })();
    $root.c2s_achi_info = (function() {
        function c2s_achi_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_achi_info.cmd = 9473;
        c2s_achi_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_achi_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_achi_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_achi_info;
    })();
    $root.s2c_achi_info = (function() {
        function s2c_achi_info(p) {
            this.getPointsRw = [];
            this.progress = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_achi_info.prototype.getPointsRw = $util.emptyArray;
        s2c_achi_info.prototype.progress = $util.emptyArray;
        s2c_achi_info.cmd = 9474;
        s2c_achi_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.getPointsRw != null && m.getPointsRw.length) {
                for (var i = 0; i < m.getPointsRw.length; ++i)
                    w.uint32(8).int32(m.getPointsRw[i]);
            }
            if (m.progress != null && m.progress.length) {
                for (var i = 0; i < m.progress.length; ++i)
                    $root.p_achi_progress.encode(m.progress[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_achi_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_achi_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.getPointsRw && m.getPointsRw.length))
                        m.getPointsRw = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.getPointsRw.push(r.int32());
                    } else
                        m.getPointsRw.push(r.int32());
                    break;
                case 2:
                    if (!(m.progress && m.progress.length))
                        m.progress = [];
                    m.progress.push($root.p_achi_progress.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_achi_info;
    })();
    $root.p_achi_progress = (function() {
        function p_achi_progress(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_achi_progress.prototype.id = 0;
        p_achi_progress.prototype.flag = 0;
        p_achi_progress.prototype.collectNum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_achi_progress.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.flag);
            w.uint32(24).int64(m.collectNum);
            return w;
        };
        p_achi_progress.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_achi_progress();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.flag = r.int32();
                    break;
                case 3:
                    m.collectNum = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("flag"))
                throw $util.ProtocolError("missing required 'flag'", { instance: m });
            if (!m.hasOwnProperty("collectNum"))
                throw $util.ProtocolError("missing required 'collectNum'", { instance: m });
            return m;
        };
        return p_achi_progress;
    })();
    $root.c2s_fetch_achi_points_rw = (function() {
        function c2s_fetch_achi_points_rw(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_achi_points_rw.prototype.rwId = 0;
        c2s_fetch_achi_points_rw.cmd = 9475;
        c2s_fetch_achi_points_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rwId);
            return w;
        };
        c2s_fetch_achi_points_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_achi_points_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rwId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rwId"))
                throw $util.ProtocolError("missing required 'rwId'", { instance: m });
            return m;
        };
        return c2s_fetch_achi_points_rw;
    })();
    $root.c2s_fetch_achi_rw = (function() {
        function c2s_fetch_achi_rw(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_fetch_achi_rw.prototype.id = 0;
        c2s_fetch_achi_rw.cmd = 9476;
        c2s_fetch_achi_rw.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_fetch_achi_rw.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_fetch_achi_rw();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_fetch_achi_rw;
    })();
    $root.s2c_achi_progress_notify = (function() {
        function s2c_achi_progress_notify(p) {
            this.progress = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_achi_progress_notify.prototype.progress = $util.emptyArray;
        s2c_achi_progress_notify.cmd = 9477;
        s2c_achi_progress_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.progress != null && m.progress.length) {
                for (var i = 0; i < m.progress.length; ++i)
                    $root.p_achi_progress.encode(m.progress[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_achi_progress_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_achi_progress_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.progress && m.progress.length))
                        m.progress = [];
                    m.progress.push($root.p_achi_progress.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_achi_progress_notify;
    })();
    $root.c2s_state_info_request = (function() {
        function c2s_state_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_state_info_request.cmd = 9729;
        c2s_state_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_state_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_state_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_state_info_request;
    })();
    $root.s2c_state_info_reply = (function() {
        function s2c_state_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_state_info_reply.prototype.stateId = 0;
        s2c_state_info_reply.prototype.combat = 0;
        s2c_state_info_reply.prototype.nextCombat = 0;
        s2c_state_info_reply.prototype.isAlreadyGetReward = 0;
        s2c_state_info_reply.cmd = 9730;
        s2c_state_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.stateId);
            w.uint32(16).int32(m.combat);
            w.uint32(24).int32(m.nextCombat);
            w.uint32(32).int32(m.isAlreadyGetReward);
            return w;
        };
        s2c_state_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_state_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stateId = r.int32();
                    break;
                case 2:
                    m.combat = r.int32();
                    break;
                case 3:
                    m.nextCombat = r.int32();
                    break;
                case 4:
                    m.isAlreadyGetReward = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("nextCombat"))
                throw $util.ProtocolError("missing required 'nextCombat'", { instance: m });
            if (!m.hasOwnProperty("isAlreadyGetReward"))
                throw $util.ProtocolError("missing required 'isAlreadyGetReward'", { instance: m });
            return m;
        };
        return s2c_state_info_reply;
    })();
    $root.s2c_state_info_change_notify = (function() {
        function s2c_state_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_state_info_change_notify.prototype.stateId = 0;
        s2c_state_info_change_notify.prototype.combat = 0;
        s2c_state_info_change_notify.prototype.nextCombat = 0;
        s2c_state_info_change_notify.cmd = 9731;
        s2c_state_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.stateId);
            w.uint32(16).int32(m.combat);
            w.uint32(24).int32(m.nextCombat);
            return w;
        };
        s2c_state_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_state_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stateId = r.int32();
                    break;
                case 2:
                    m.combat = r.int32();
                    break;
                case 3:
                    m.nextCombat = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("nextCombat"))
                throw $util.ProtocolError("missing required 'nextCombat'", { instance: m });
            return m;
        };
        return s2c_state_info_change_notify;
    })();
    $root.c2s_state_increase_request = (function() {
        function c2s_state_increase_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_state_increase_request.cmd = 9732;
        c2s_state_increase_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_state_increase_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_state_increase_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_state_increase_request;
    })();
    $root.c2s_state_get_daily_reward_request = (function() {
        function c2s_state_get_daily_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_state_get_daily_reward_request.cmd = 9733;
        c2s_state_get_daily_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_state_get_daily_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_state_get_daily_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_state_get_daily_reward_request;
    })();
    $root.c2s_state_reward_info_request = (function() {
        function c2s_state_reward_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_state_reward_info_request.cmd = 9734;
        c2s_state_reward_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_state_reward_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_state_reward_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_state_reward_info_request;
    })();
    $root.s2c_state_reward_info_request = (function() {
        function s2c_state_reward_info_request(p) {
            this.stateList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_state_reward_info_request.prototype.stateList = $util.emptyArray;
        s2c_state_reward_info_request.cmd = 9735;
        s2c_state_reward_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stateList != null && m.stateList.length) {
                for (var i = 0; i < m.stateList.length; ++i)
                    $root.p_kv_pair.encode(m.stateList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_state_reward_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_state_reward_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.stateList && m.stateList.length))
                        m.stateList = [];
                    m.stateList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_state_reward_info_request;
    })();
    $root.c2s_state_get_reward_request = (function() {
        function c2s_state_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_state_get_reward_request.prototype.stateId = 0;
        c2s_state_get_reward_request.cmd = 9736;
        c2s_state_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.stateId);
            return w;
        };
        c2s_state_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_state_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stateId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            return m;
        };
        return c2s_state_get_reward_request;
    })();
    $root.s2c_state_get_reward_request = (function() {
        function s2c_state_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_state_get_reward_request.prototype.stateId = 0;
        s2c_state_get_reward_request.cmd = 9737;
        s2c_state_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.stateId);
            return w;
        };
        s2c_state_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_state_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stateId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("stateId"))
                throw $util.ProtocolError("missing required 'stateId'", { instance: m });
            return m;
        };
        return s2c_state_get_reward_request;
    })();
    $root.anno_info = (function() {
        function anno_info(p) {
            this.rewardItems = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        anno_info.prototype.id = 0;
        anno_info.prototype.title = "";
        anno_info.prototype.content = "";
        anno_info.prototype.rewardItems = $util.emptyArray;
        anno_info.prototype.recvState = 0;
        anno_info.prototype.annoType = 0;
        anno_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(18).string(m.title);
            w.uint32(26).string(m.content);
            if (m.rewardItems != null && m.rewardItems.length) {
                for (var i = 0; i < m.rewardItems.length; ++i)
                    $root.item_simple.encode(m.rewardItems[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.recvState);
            w.uint32(48).int32(m.annoType);
            return w;
        };
        anno_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.anno_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.title = r.string();
                    break;
                case 3:
                    m.content = r.string();
                    break;
                case 4:
                    if (!(m.rewardItems && m.rewardItems.length))
                        m.rewardItems = [];
                    m.rewardItems.push($root.item_simple.decode(r, r.uint32()));
                    break;
                case 5:
                    m.recvState = r.int32();
                    break;
                case 6:
                    m.annoType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("title"))
                throw $util.ProtocolError("missing required 'title'", { instance: m });
            if (!m.hasOwnProperty("content"))
                throw $util.ProtocolError("missing required 'content'", { instance: m });
            if (!m.hasOwnProperty("recvState"))
                throw $util.ProtocolError("missing required 'recvState'", { instance: m });
            if (!m.hasOwnProperty("annoType"))
                throw $util.ProtocolError("missing required 'annoType'", { instance: m });
            return m;
        };
        return anno_info;
    })();
    $root.c2s_get_update_anno = (function() {
        function c2s_get_update_anno(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_update_anno.cmd = 9985;
        c2s_get_update_anno.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_update_anno.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_update_anno();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_update_anno;
    })();
    $root.s2c_get_update_anno = (function() {
        function s2c_get_update_anno(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_update_anno.prototype.data = $util.emptyArray;
        s2c_get_update_anno.cmd = 9986;
        s2c_get_update_anno.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.anno_info.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_get_update_anno.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_update_anno();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.anno_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_get_update_anno;
    })();
    $root.c2s_get_update_anno_reward = (function() {
        function c2s_get_update_anno_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_update_anno_reward.cmd = 9987;
        c2s_get_update_anno_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_update_anno_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_update_anno_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_update_anno_reward;
    })();
    $root.c2s_excode_request = (function() {
        function c2s_excode_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_excode_request.prototype.excode = "";
        c2s_excode_request.cmd = 10241;
        c2s_excode_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.excode);
            return w;
        };
        c2s_excode_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_excode_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.excode = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("excode"))
                throw $util.ProtocolError("missing required 'excode'", { instance: m });
            return m;
        };
        return c2s_excode_request;
    })();
    $root.c2s_query_seven_day_reward = (function() {
        function c2s_query_seven_day_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_seven_day_reward.cmd = 10497;
        c2s_query_seven_day_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_seven_day_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_seven_day_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_seven_day_reward;
    })();
    $root.s2c_query_seven_day_reward = (function() {
        function s2c_query_seven_day_reward(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_seven_day_reward.prototype.data = $util.emptyArray;
        s2c_query_seven_day_reward.cmd = 10498;
        s2c_query_seven_day_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.seven_day_reward_p.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_seven_day_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_seven_day_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.seven_day_reward_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_seven_day_reward;
    })();
    $root.c2s_get_seven_day_reward = (function() {
        function c2s_get_seven_day_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_seven_day_reward.prototype.id = 0;
        c2s_get_seven_day_reward.cmd = 10499;
        c2s_get_seven_day_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_get_seven_day_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_seven_day_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_get_seven_day_reward;
    })();
    $root.s2c_seven_day_reward_notify = (function() {
        function s2c_seven_day_reward_notify(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_seven_day_reward_notify.prototype.data = $util.emptyArray;
        s2c_seven_day_reward_notify.cmd = 10500;
        s2c_seven_day_reward_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.seven_day_reward_p.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_seven_day_reward_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_seven_day_reward_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.seven_day_reward_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_seven_day_reward_notify;
    })();
    $root.seven_day_reward_p = (function() {
        function seven_day_reward_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        seven_day_reward_p.prototype.id = 0;
        seven_day_reward_p.prototype.endTime = 0;
        seven_day_reward_p.prototype.rewardType = 0;
        seven_day_reward_p.prototype.receiveState = 0;
        seven_day_reward_p.prototype.myRank = 0;
        seven_day_reward_p.prototype.myScore = 0;
        seven_day_reward_p.prototype.rankFlag = 0;
        seven_day_reward_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.endTime);
            w.uint32(24).int32(m.rewardType);
            w.uint32(32).int32(m.receiveState);
            w.uint32(40).int32(m.myRank);
            w.uint32(48).int32(m.myScore);
            w.uint32(56).int32(m.rankFlag);
            return w;
        };
        seven_day_reward_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.seven_day_reward_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.endTime = r.int32();
                    break;
                case 3:
                    m.rewardType = r.int32();
                    break;
                case 4:
                    m.receiveState = r.int32();
                    break;
                case 5:
                    m.myRank = r.int32();
                    break;
                case 6:
                    m.myScore = r.int32();
                    break;
                case 7:
                    m.rankFlag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("rewardType"))
                throw $util.ProtocolError("missing required 'rewardType'", { instance: m });
            if (!m.hasOwnProperty("receiveState"))
                throw $util.ProtocolError("missing required 'receiveState'", { instance: m });
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            if (!m.hasOwnProperty("myScore"))
                throw $util.ProtocolError("missing required 'myScore'", { instance: m });
            if (!m.hasOwnProperty("rankFlag"))
                throw $util.ProtocolError("missing required 'rankFlag'", { instance: m });
            return m;
        };
        return seven_day_reward_p;
    })();
    $root.s2c_server_opened_day_notify = (function() {
        function s2c_server_opened_day_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_server_opened_day_notify.prototype.day = 0;
        s2c_server_opened_day_notify.cmd = 10501;
        s2c_server_opened_day_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.day);
            return w;
        };
        s2c_server_opened_day_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_server_opened_day_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.day = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("day"))
                throw $util.ProtocolError("missing required 'day'", { instance: m });
            return m;
        };
        return s2c_server_opened_day_notify;
    })();
    $root.c2s_get_seven_day_list = (function() {
        function c2s_get_seven_day_list(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_seven_day_list.cmd = 10502;
        c2s_get_seven_day_list.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_seven_day_list.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_seven_day_list();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_seven_day_list;
    })();
    $root.s2c_get_seven_day_list_reply = (function() {
        function s2c_get_seven_day_list_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_seven_day_list_reply.prototype.list = $util.emptyArray;
        s2c_get_seven_day_list_reply.cmd = 10503;
        s2c_get_seven_day_list_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    w.uint32(8).int32(m.list[i]);
            }
            return w;
        };
        s2c_get_seven_day_list_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_seven_day_list_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.list.push(r.int32());
                    } else
                        m.list.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_get_seven_day_list_reply;
    })();
    $root.p_task_struct = (function() {
        function p_task_struct(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_task_struct.prototype.taskId = 0;
        p_task_struct.prototype.process = 0;
        p_task_struct.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.taskId);
            w.uint32(16).int32(m.process);
            return w;
        };
        p_task_struct.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_task_struct();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                case 2:
                    m.process = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("taskId"))
                throw $util.ProtocolError("missing required 'taskId'", { instance: m });
            if (!m.hasOwnProperty("process"))
                throw $util.ProtocolError("missing required 'process'", { instance: m });
            return m;
        };
        return p_task_struct;
    })();
    $root.s2c_seven_day_task_change_notify = (function() {
        function s2c_seven_day_task_change_notify(p) {
            this.taskList = [];
            this.finishList = [];
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_seven_day_task_change_notify.prototype.taskList = $util.emptyArray;
        s2c_seven_day_task_change_notify.prototype.finishList = $util.emptyArray;
        s2c_seven_day_task_change_notify.prototype.rewardList = $util.emptyArray;
        s2c_seven_day_task_change_notify.cmd = 10504;
        s2c_seven_day_task_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskList != null && m.taskList.length) {
                for (var i = 0; i < m.taskList.length; ++i)
                    $root.p_task_struct.encode(m.taskList[i], w.uint32(10).fork()).ldelim();
            }
            if (m.finishList != null && m.finishList.length) {
                for (var i = 0; i < m.finishList.length; ++i)
                    w.uint32(16).int32(m.finishList[i]);
            }
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    w.uint32(24).int32(m.rewardList[i]);
            }
            return w;
        };
        s2c_seven_day_task_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_seven_day_task_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskList && m.taskList.length))
                        m.taskList = [];
                    m.taskList.push($root.p_task_struct.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.finishList && m.finishList.length))
                        m.finishList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.finishList.push(r.int32());
                    } else
                        m.finishList.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardList.push(r.int32());
                    } else
                        m.rewardList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_seven_day_task_change_notify;
    })();
    $root.c2s_get_seven_day_task_reward_request = (function() {
        function c2s_get_seven_day_task_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_seven_day_task_reward_request.prototype.taskId = 0;
        c2s_get_seven_day_task_reward_request.cmd = 10505;
        c2s_get_seven_day_task_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.taskId);
            return w;
        };
        c2s_get_seven_day_task_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_seven_day_task_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("taskId"))
                throw $util.ProtocolError("missing required 'taskId'", { instance: m });
            return m;
        };
        return c2s_get_seven_day_task_reward_request;
    })();
    $root.five_ele_mission = (function() {
        function five_ele_mission(p) {
            this.collectIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        five_ele_mission.prototype.missionId = 0;
        five_ele_mission.prototype.collectValue = 0;
        five_ele_mission.prototype.collectIds = $util.emptyArray;
        five_ele_mission.prototype.flag = 0;
        five_ele_mission.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.missionId);
            w.uint32(16).int32(m.collectValue);
            if (m.collectIds != null && m.collectIds.length) {
                for (var i = 0; i < m.collectIds.length; ++i)
                    w.uint32(24).int64(m.collectIds[i]);
            }
            w.uint32(32).int32(m.flag);
            return w;
        };
        five_ele_mission.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.five_ele_mission();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.missionId = r.int32();
                    break;
                case 2:
                    m.collectValue = r.int32();
                    break;
                case 3:
                    if (!(m.collectIds && m.collectIds.length))
                        m.collectIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.collectIds.push(r.int64());
                    } else
                        m.collectIds.push(r.int64());
                    break;
                case 4:
                    m.flag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("missionId"))
                throw $util.ProtocolError("missing required 'missionId'", { instance: m });
            if (!m.hasOwnProperty("collectValue"))
                throw $util.ProtocolError("missing required 'collectValue'", { instance: m });
            if (!m.hasOwnProperty("flag"))
                throw $util.ProtocolError("missing required 'flag'", { instance: m });
            return m;
        };
        return five_ele_mission;
    })();
    $root.c2s_five_ele_panel_req = (function() {
        function c2s_five_ele_panel_req(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_five_ele_panel_req.cmd = 10753;
        c2s_five_ele_panel_req.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_five_ele_panel_req.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_five_ele_panel_req();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_five_ele_panel_req;
    })();
    $root.s2c_five_ele_panel_rep = (function() {
        function s2c_five_ele_panel_rep(p) {
            this.fiveEleMissions = [];
            this.skillIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_five_ele_panel_rep.prototype.fiveEleMissions = $util.emptyArray;
        s2c_five_ele_panel_rep.prototype.skillIds = $util.emptyArray;
        s2c_five_ele_panel_rep.cmd = 10754;
        s2c_five_ele_panel_rep.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.fiveEleMissions != null && m.fiveEleMissions.length) {
                for (var i = 0; i < m.fiveEleMissions.length; ++i)
                    $root.five_ele_mission.encode(m.fiveEleMissions[i], w.uint32(10).fork()).ldelim();
            }
            if (m.skillIds != null && m.skillIds.length) {
                for (var i = 0; i < m.skillIds.length; ++i)
                    w.uint32(16).int32(m.skillIds[i]);
            }
            return w;
        };
        s2c_five_ele_panel_rep.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_five_ele_panel_rep();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.fiveEleMissions && m.fiveEleMissions.length))
                        m.fiveEleMissions = [];
                    m.fiveEleMissions.push($root.five_ele_mission.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.skillIds && m.skillIds.length))
                        m.skillIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skillIds.push(r.int32());
                    } else
                        m.skillIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_five_ele_panel_rep;
    })();
    $root.c2s_get_award_req = (function() {
        function c2s_get_award_req(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_award_req.prototype.missionId = 0;
        c2s_get_award_req.cmd = 10755;
        c2s_get_award_req.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.missionId);
            return w;
        };
        c2s_get_award_req.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_award_req();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.missionId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("missionId"))
                throw $util.ProtocolError("missing required 'missionId'", { instance: m });
            return m;
        };
        return c2s_get_award_req;
    })();
    $root.s2c_get_award_rep = (function() {
        function s2c_get_award_rep(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_award_rep.prototype.fiveEleMission = null;
        s2c_get_award_rep.cmd = 10756;
        s2c_get_award_rep.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.five_ele_mission.encode(m.fiveEleMission, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_get_award_rep.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_award_rep();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fiveEleMission = $root.five_ele_mission.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fiveEleMission"))
                throw $util.ProtocolError("missing required 'fiveEleMission'", { instance: m });
            return m;
        };
        return s2c_get_award_rep;
    })();
    $root.c2s_get_skill_req = (function() {
        function c2s_get_skill_req(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_skill_req.prototype.skillId = 0;
        c2s_get_skill_req.cmd = 10757;
        c2s_get_skill_req.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillId);
            return w;
        };
        c2s_get_skill_req.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_skill_req();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillId"))
                throw $util.ProtocolError("missing required 'skillId'", { instance: m });
            return m;
        };
        return c2s_get_skill_req;
    })();
    $root.s2c_get_skill_rep = (function() {
        function s2c_get_skill_rep(p) {
            this.skillIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_skill_rep.prototype.skillIds = $util.emptyArray;
        s2c_get_skill_rep.cmd = 10758;
        s2c_get_skill_rep.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.skillIds != null && m.skillIds.length) {
                for (var i = 0; i < m.skillIds.length; ++i)
                    w.uint32(8).int32(m.skillIds[i]);
            }
            return w;
        };
        s2c_get_skill_rep.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_skill_rep();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.skillIds && m.skillIds.length))
                        m.skillIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skillIds.push(r.int32());
                    } else
                        m.skillIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_get_skill_rep;
    })();
    $root.c2s_query_charge_order_request = (function() {
        function c2s_query_charge_order_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_charge_order_request.cmd = 11009;
        c2s_query_charge_order_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_charge_order_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_charge_order_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_charge_order_request;
    })();
    $root.s2c_query_charge_order_reply = (function() {
        function s2c_query_charge_order_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_charge_order_reply.prototype.order = "";
        s2c_query_charge_order_reply.cmd = 11010;
        s2c_query_charge_order_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.order);
            return w;
        };
        s2c_query_charge_order_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_charge_order_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.order = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("order"))
                throw $util.ProtocolError("missing required 'order'", { instance: m });
            return m;
        };
        return s2c_query_charge_order_reply;
    })();
    $root.c2s_query_charge_md5_request = (function() {
        function c2s_query_charge_md5_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_charge_md5_request.prototype.info = "";
        c2s_query_charge_md5_request.cmd = 11011;
        c2s_query_charge_md5_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.info);
            return w;
        };
        c2s_query_charge_md5_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_charge_md5_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.info = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("info"))
                throw $util.ProtocolError("missing required 'info'", { instance: m });
            return m;
        };
        return c2s_query_charge_md5_request;
    })();
    $root.s2c_query_charge_md5_reply = (function() {
        function s2c_query_charge_md5_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_charge_md5_reply.prototype.md5 = "";
        s2c_query_charge_md5_reply.cmd = 11012;
        s2c_query_charge_md5_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.md5);
            return w;
        };
        s2c_query_charge_md5_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_charge_md5_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.md5 = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("md5"))
                throw $util.ProtocolError("missing required 'md5'", { instance: m });
            return m;
        };
        return s2c_query_charge_md5_reply;
    })();
    $root.c2s_query_total_charge_reward_request = (function() {
        function c2s_query_total_charge_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_total_charge_reward_request.cmd = 11013;
        c2s_query_total_charge_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_total_charge_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_total_charge_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_total_charge_reward_request;
    })();
    $root.s2c_query_total_charge_reward_reply = (function() {
        function s2c_query_total_charge_reward_reply(p) {
            this.receivedRewardIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_total_charge_reward_reply.prototype.totalCharge = 0;
        s2c_query_total_charge_reward_reply.prototype.receivedRewardIds = $util.emptyArray;
        s2c_query_total_charge_reward_reply.prototype.endTimestamp = 0;
        s2c_query_total_charge_reward_reply.cmd = 11014;
        s2c_query_total_charge_reward_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.totalCharge);
            if (m.receivedRewardIds != null && m.receivedRewardIds.length) {
                for (var i = 0; i < m.receivedRewardIds.length; ++i)
                    w.uint32(16).int32(m.receivedRewardIds[i]);
            }
            w.uint32(24).int32(m.endTimestamp);
            return w;
        };
        s2c_query_total_charge_reward_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_total_charge_reward_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.totalCharge = r.int32();
                    break;
                case 2:
                    if (!(m.receivedRewardIds && m.receivedRewardIds.length))
                        m.receivedRewardIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedRewardIds.push(r.int32());
                    } else
                        m.receivedRewardIds.push(r.int32());
                    break;
                case 3:
                    m.endTimestamp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("totalCharge"))
                throw $util.ProtocolError("missing required 'totalCharge'", { instance: m });
            if (!m.hasOwnProperty("endTimestamp"))
                throw $util.ProtocolError("missing required 'endTimestamp'", { instance: m });
            return m;
        };
        return s2c_query_total_charge_reward_reply;
    })();
    $root.c2s_receive_total_charge_reward_request = (function() {
        function c2s_receive_total_charge_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_receive_total_charge_reward_request.prototype.rewardId = 0;
        c2s_receive_total_charge_reward_request.cmd = 11015;
        c2s_receive_total_charge_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rewardId);
            return w;
        };
        c2s_receive_total_charge_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_receive_total_charge_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rewardId"))
                throw $util.ProtocolError("missing required 'rewardId'", { instance: m });
            return m;
        };
        return c2s_receive_total_charge_reward_request;
    })();
    $root.week_card_info = (function() {
        function week_card_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        week_card_info.prototype.remainDays = 0;
        week_card_info.prototype.isReceivedToday = 0;
        week_card_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.remainDays);
            w.uint32(16).int32(m.isReceivedToday);
            return w;
        };
        week_card_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.week_card_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.remainDays = r.int32();
                    break;
                case 2:
                    m.isReceivedToday = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("remainDays"))
                throw $util.ProtocolError("missing required 'remainDays'", { instance: m });
            if (!m.hasOwnProperty("isReceivedToday"))
                throw $util.ProtocolError("missing required 'isReceivedToday'", { instance: m });
            return m;
        };
        return week_card_info;
    })();
    $root.c2s_query_charge_request = (function() {
        function c2s_query_charge_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_charge_request.cmd = 11016;
        c2s_query_charge_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_charge_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_charge_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_charge_request;
    })();
    $root.s2c_query_charge_reply = (function() {
        function s2c_query_charge_reply(p) {
            this.chargeIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_charge_reply.prototype.chargeIdList = $util.emptyArray;
        s2c_query_charge_reply.prototype.info = null;
        s2c_query_charge_reply.cmd = 11017;
        s2c_query_charge_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.chargeIdList != null && m.chargeIdList.length) {
                for (var i = 0; i < m.chargeIdList.length; ++i)
                    w.uint32(8).int32(m.chargeIdList[i]);
            }
            $root.week_card_info.encode(m.info, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_query_charge_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_charge_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.chargeIdList && m.chargeIdList.length))
                        m.chargeIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.chargeIdList.push(r.int32());
                    } else
                        m.chargeIdList.push(r.int32());
                    break;
                case 2:
                    m.info = $root.week_card_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("info"))
                throw $util.ProtocolError("missing required 'info'", { instance: m });
            return m;
        };
        return s2c_query_charge_reply;
    })();
    $root.s2c_total_charge_changed_notify = (function() {
        function s2c_total_charge_changed_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_total_charge_changed_notify.prototype.totalCharge = 0;
        s2c_total_charge_changed_notify.prototype.gold = 0;
        s2c_total_charge_changed_notify.prototype.chargeId = 0;
        s2c_total_charge_changed_notify.prototype.firstCharge = 0;
        s2c_total_charge_changed_notify.cmd = 11018;
        s2c_total_charge_changed_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.totalCharge);
            w.uint32(16).int32(m.gold);
            w.uint32(24).int32(m.chargeId);
            w.uint32(32).int32(m.firstCharge);
            return w;
        };
        s2c_total_charge_changed_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_total_charge_changed_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.totalCharge = r.int32();
                    break;
                case 2:
                    m.gold = r.int32();
                    break;
                case 3:
                    m.chargeId = r.int32();
                    break;
                case 4:
                    m.firstCharge = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("totalCharge"))
                throw $util.ProtocolError("missing required 'totalCharge'", { instance: m });
            if (!m.hasOwnProperty("gold"))
                throw $util.ProtocolError("missing required 'gold'", { instance: m });
            if (!m.hasOwnProperty("chargeId"))
                throw $util.ProtocolError("missing required 'chargeId'", { instance: m });
            if (!m.hasOwnProperty("firstCharge"))
                throw $util.ProtocolError("missing required 'firstCharge'", { instance: m });
            return m;
        };
        return s2c_total_charge_changed_notify;
    })();
    $root.s2c_week_card_notify = (function() {
        function s2c_week_card_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_week_card_notify.prototype.days = 0;
        s2c_week_card_notify.cmd = 11019;
        s2c_week_card_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.days);
            return w;
        };
        s2c_week_card_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_week_card_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.days = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("days"))
                throw $util.ProtocolError("missing required 'days'", { instance: m });
            return m;
        };
        return s2c_week_card_notify;
    })();
    $root.c2s_received_week_card_request = (function() {
        function c2s_received_week_card_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_received_week_card_request.cmd = 11020;
        c2s_received_week_card_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_received_week_card_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_received_week_card_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_received_week_card_request;
    })();
    $root.c2s_get_first_charge_reward = (function() {
        function c2s_get_first_charge_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_first_charge_reward.cmd = 11021;
        c2s_get_first_charge_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_first_charge_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_first_charge_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_first_charge_reward;
    })();
    $root.c2s_get_daily_charge_reward = (function() {
        function c2s_get_daily_charge_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_daily_charge_reward.prototype.rewardId = 0;
        c2s_get_daily_charge_reward.cmd = 11022;
        c2s_get_daily_charge_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rewardId);
            return w;
        };
        c2s_get_daily_charge_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_daily_charge_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rewardId"))
                throw $util.ProtocolError("missing required 'rewardId'", { instance: m });
            return m;
        };
        return c2s_get_daily_charge_reward;
    })();
    $root.c2s_get_continuous_charge_reward = (function() {
        function c2s_get_continuous_charge_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_continuous_charge_reward.prototype.rewardId = 0;
        c2s_get_continuous_charge_reward.cmd = 11023;
        c2s_get_continuous_charge_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rewardId);
            return w;
        };
        c2s_get_continuous_charge_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_continuous_charge_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rewardId"))
                throw $util.ProtocolError("missing required 'rewardId'", { instance: m });
            return m;
        };
        return c2s_get_continuous_charge_reward;
    })();
    $root.c2s_get_wx_balance = (function() {
        function c2s_get_wx_balance(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_wx_balance.prototype.buyDefend = 0;
        c2s_get_wx_balance.prototype.xbuyLimit = 0;
        c2s_get_wx_balance.prototype.xbuyLimitType = 0;
        c2s_get_wx_balance.cmd = 11024;
        c2s_get_wx_balance.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.buyDefend != null && Object.hasOwnProperty.call(m, "buyDefend"))
                w.uint32(8).int32(m.buyDefend);
            if (m.xbuyLimit != null && Object.hasOwnProperty.call(m, "xbuyLimit"))
                w.uint32(16).int32(m.xbuyLimit);
            if (m.xbuyLimitType != null && Object.hasOwnProperty.call(m, "xbuyLimitType"))
                w.uint32(24).int32(m.xbuyLimitType);
            return w;
        };
        c2s_get_wx_balance.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_wx_balance();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.buyDefend = r.int32();
                    break;
                case 2:
                    m.xbuyLimit = r.int32();
                    break;
                case 3:
                    m.xbuyLimitType = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_wx_balance;
    })();
    $root.c2s_get_buy_defend_reward = (function() {
        function c2s_get_buy_defend_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_buy_defend_reward.cmd = 11025;
        c2s_get_buy_defend_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_buy_defend_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_buy_defend_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_buy_defend_reward;
    })();
    $root.c2s_create_pay_order = (function() {
        function c2s_create_pay_order(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_create_pay_order.prototype.type = 0;
        c2s_create_pay_order.prototype.typeKey = 0;
        c2s_create_pay_order.prototype.money = 0;
        c2s_create_pay_order.prototype.ver = "";
        c2s_create_pay_order.prototype.ext = "";
        c2s_create_pay_order.cmd = 11026;
        c2s_create_pay_order.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.typeKey);
            w.uint32(24).int32(m.money);
            if (m.ver != null && Object.hasOwnProperty.call(m, "ver"))
                w.uint32(34).string(m.ver);
            if (m.ext != null && Object.hasOwnProperty.call(m, "ext"))
                w.uint32(42).string(m.ext);
            return w;
        };
        c2s_create_pay_order.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_create_pay_order();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.typeKey = r.int32();
                    break;
                case 3:
                    m.money = r.int32();
                    break;
                case 4:
                    m.ver = r.string();
                    break;
                case 5:
                    m.ext = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("typeKey"))
                throw $util.ProtocolError("missing required 'typeKey'", { instance: m });
            if (!m.hasOwnProperty("money"))
                throw $util.ProtocolError("missing required 'money'", { instance: m });
            return m;
        };
        return c2s_create_pay_order;
    })();
    $root.s2c_create_pay_order_reply = (function() {
        function s2c_create_pay_order_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_create_pay_order_reply.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_create_pay_order_reply.prototype.orderId = "";
        s2c_create_pay_order_reply.prototype.type = 0;
        s2c_create_pay_order_reply.prototype.typeKey = 0;
        s2c_create_pay_order_reply.prototype.money = 0;
        s2c_create_pay_order_reply.prototype.name = "";
        s2c_create_pay_order_reply.prototype.sign = "";
        s2c_create_pay_order_reply.prototype.productName = "";
        s2c_create_pay_order_reply.prototype.productDecs = "";
        s2c_create_pay_order_reply.prototype.notifyUrl = "";
        s2c_create_pay_order_reply.prototype.expireTime = "";
        s2c_create_pay_order_reply.prototype.extInfo = "";
        s2c_create_pay_order_reply.prototype.count = 0;
        s2c_create_pay_order_reply.cmd = 11027;
        s2c_create_pay_order_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(18).string(m.orderId);
            w.uint32(24).int32(m.type);
            w.uint32(32).int32(m.typeKey);
            w.uint32(40).int32(m.money);
            w.uint32(50).string(m.name);
            if (m.sign != null && Object.hasOwnProperty.call(m, "sign"))
                w.uint32(58).string(m.sign);
            if (m.productName != null && Object.hasOwnProperty.call(m, "productName"))
                w.uint32(66).string(m.productName);
            if (m.productDecs != null && Object.hasOwnProperty.call(m, "productDecs"))
                w.uint32(74).string(m.productDecs);
            if (m.notifyUrl != null && Object.hasOwnProperty.call(m, "notifyUrl"))
                w.uint32(82).string(m.notifyUrl);
            if (m.expireTime != null && Object.hasOwnProperty.call(m, "expireTime"))
                w.uint32(90).string(m.expireTime);
            if (m.extInfo != null && Object.hasOwnProperty.call(m, "extInfo"))
                w.uint32(98).string(m.extInfo);
            if (m.count != null && Object.hasOwnProperty.call(m, "count"))
                w.uint32(104).int32(m.count);
            return w;
        };
        s2c_create_pay_order_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_create_pay_order_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.orderId = r.string();
                    break;
                case 3:
                    m.type = r.int32();
                    break;
                case 4:
                    m.typeKey = r.int32();
                    break;
                case 5:
                    m.money = r.int32();
                    break;
                case 6:
                    m.name = r.string();
                    break;
                case 7:
                    m.sign = r.string();
                    break;
                case 8:
                    m.productName = r.string();
                    break;
                case 9:
                    m.productDecs = r.string();
                    break;
                case 10:
                    m.notifyUrl = r.string();
                    break;
                case 11:
                    m.expireTime = r.string();
                    break;
                case 12:
                    m.extInfo = r.string();
                    break;
                case 13:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("orderId"))
                throw $util.ProtocolError("missing required 'orderId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("typeKey"))
                throw $util.ProtocolError("missing required 'typeKey'", { instance: m });
            if (!m.hasOwnProperty("money"))
                throw $util.ProtocolError("missing required 'money'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            return m;
        };
        return s2c_create_pay_order_reply;
    })();
    $root.c2s_pay_order_complete = (function() {
        function c2s_pay_order_complete(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_pay_order_complete.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_pay_order_complete.prototype.result = 0;
        c2s_pay_order_complete.cmd = 11028;
        c2s_pay_order_complete.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            w.uint32(16).int32(m.result);
            return w;
        };
        c2s_pay_order_complete.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_pay_order_complete();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.result = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            return m;
        };
        return c2s_pay_order_complete;
    })();
    $root.c2s_proxy_pay_lock = (function() {
        function c2s_proxy_pay_lock(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_proxy_pay_lock.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_proxy_pay_lock.cmd = 11029;
        c2s_proxy_pay_lock.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.id);
            return w;
        };
        c2s_proxy_pay_lock.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_proxy_pay_lock();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_proxy_pay_lock;
    })();
    $root.c2s_use_cash_coupon = (function() {
        function c2s_use_cash_coupon(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_use_cash_coupon.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_use_cash_coupon.prototype.type = 0;
        c2s_use_cash_coupon.cmd = 11030;
        c2s_use_cash_coupon.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_use_cash_coupon.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_use_cash_coupon();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_use_cash_coupon;
    })();
    $root.c2s_charge_daily_charge_request = (function() {
        function c2s_charge_daily_charge_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_charge_daily_charge_request.cmd = 11031;
        c2s_charge_daily_charge_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_charge_daily_charge_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_charge_daily_charge_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_charge_daily_charge_request;
    })();
    $root.s2c_charge_daily_charge_response = (function() {
        function s2c_charge_daily_charge_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_charge_daily_charge_response.prototype.firstCharge = 0;
        s2c_charge_daily_charge_response.prototype.dailyCharge = 0;
        s2c_charge_daily_charge_response.prototype.chargeNum = 0;
        s2c_charge_daily_charge_response.cmd = 11032;
        s2c_charge_daily_charge_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.firstCharge);
            w.uint32(16).int32(m.dailyCharge);
            w.uint32(24).int32(m.chargeNum);
            return w;
        };
        s2c_charge_daily_charge_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_charge_daily_charge_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.firstCharge = r.int32();
                    break;
                case 2:
                    m.dailyCharge = r.int32();
                    break;
                case 3:
                    m.chargeNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("firstCharge"))
                throw $util.ProtocolError("missing required 'firstCharge'", { instance: m });
            if (!m.hasOwnProperty("dailyCharge"))
                throw $util.ProtocolError("missing required 'dailyCharge'", { instance: m });
            if (!m.hasOwnProperty("chargeNum"))
                throw $util.ProtocolError("missing required 'chargeNum'", { instance: m });
            return m;
        };
        return s2c_charge_daily_charge_response;
    })();
    $root.s2c_charge_success_notify = (function() {
        function s2c_charge_success_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_charge_success_notify.cmd = 11033;
        s2c_charge_success_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_charge_success_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_charge_success_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_charge_success_notify;
    })();
    $root.soul_equip_info_p = (function() {
        function soul_equip_info_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        soul_equip_info_p.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        soul_equip_info_p.prototype.itemId = 0;
        soul_equip_info_p.prototype.bound = 0;
        soul_equip_info_p.prototype.grade = 0;
        soul_equip_info_p.prototype.exp = 0;
        soul_equip_info_p.prototype.site = 0;
        soul_equip_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            w.uint32(16).int32(m.itemId);
            w.uint32(24).int32(m.bound);
            w.uint32(32).int32(m.grade);
            w.uint32(40).int32(m.exp);
            w.uint32(48).int32(m.site);
            return w;
        };
        soul_equip_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.soul_equip_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.bound = r.int32();
                    break;
                case 4:
                    m.grade = r.int32();
                    break;
                case 5:
                    m.exp = r.int32();
                    break;
                case 6:
                    m.site = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("bound"))
                throw $util.ProtocolError("missing required 'bound'", { instance: m });
            if (!m.hasOwnProperty("grade"))
                throw $util.ProtocolError("missing required 'grade'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("site"))
                throw $util.ProtocolError("missing required 'site'", { instance: m });
            return m;
        };
        return soul_equip_info_p;
    })();
    $root.c2s_role_soul_wear = (function() {
        function c2s_role_soul_wear(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_role_soul_wear.cmd = 11265;
        c2s_role_soul_wear.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_role_soul_wear.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_role_soul_wear();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_role_soul_wear;
    })();
    $root.s2c_role_soul_wear = (function() {
        function s2c_role_soul_wear(p) {
            this.info = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_role_soul_wear.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_role_soul_wear.prototype.info = $util.emptyArray;
        s2c_role_soul_wear.cmd = 11266;
        s2c_role_soul_wear.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            if (m.info != null && m.info.length) {
                for (var i = 0; i < m.info.length; ++i)
                    $root.soul_equip_info_p.encode(m.info[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_role_soul_wear.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_role_soul_wear();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    if (!(m.info && m.info.length))
                        m.info = [];
                    m.info.push($root.soul_equip_info_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return s2c_role_soul_wear;
    })();
    $root.c2s_wear_soul_equip = (function() {
        function c2s_wear_soul_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_wear_soul_equip.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_wear_soul_equip.cmd = 11267;
        c2s_wear_soul_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_wear_soul_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_wear_soul_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_wear_soul_equip;
    })();
    $root.c2s_take_off_soul_equip = (function() {
        function c2s_take_off_soul_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_take_off_soul_equip.prototype.site = 0;
        c2s_take_off_soul_equip.cmd = 11268;
        c2s_take_off_soul_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.site);
            return w;
        };
        c2s_take_off_soul_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_take_off_soul_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.site = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("site"))
                throw $util.ProtocolError("missing required 'site'", { instance: m });
            return m;
        };
        return c2s_take_off_soul_equip;
    })();
    $root.c2s_upgrade_soul_equip = (function() {
        function c2s_upgrade_soul_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_upgrade_soul_equip.prototype.site = 0;
        c2s_upgrade_soul_equip.cmd = 11269;
        c2s_upgrade_soul_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.site);
            return w;
        };
        c2s_upgrade_soul_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_upgrade_soul_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.site = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("site"))
                throw $util.ProtocolError("missing required 'site'", { instance: m });
            return m;
        };
        return c2s_upgrade_soul_equip;
    })();
    $root.s2c_upgrade_soul_equip = (function() {
        function s2c_upgrade_soul_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_upgrade_soul_equip.prototype.site = 0;
        s2c_upgrade_soul_equip.prototype.newSoul = null;
        s2c_upgrade_soul_equip.cmd = 11270;
        s2c_upgrade_soul_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.site);
            $root.soul_equip_info_p.encode(m.newSoul, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_upgrade_soul_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_upgrade_soul_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.site = r.int32();
                    break;
                case 2:
                    m.newSoul = $root.soul_equip_info_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("site"))
                throw $util.ProtocolError("missing required 'site'", { instance: m });
            if (!m.hasOwnProperty("newSoul"))
                throw $util.ProtocolError("missing required 'newSoul'", { instance: m });
            return m;
        };
        return s2c_upgrade_soul_equip;
    })();
    $root.c2s_decompose_all = (function() {
        function c2s_decompose_all(p) {
            this.uniqidList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_decompose_all.prototype.uniqidList = $util.emptyArray;
        c2s_decompose_all.cmd = 11271;
        c2s_decompose_all.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.uniqidList != null && m.uniqidList.length) {
                for (var i = 0; i < m.uniqidList.length; ++i)
                    w.uint32(8).int64(m.uniqidList[i]);
            }
            return w;
        };
        c2s_decompose_all.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_decompose_all();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.uniqidList && m.uniqidList.length))
                        m.uniqidList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.uniqidList.push(r.int64());
                    } else
                        m.uniqidList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_decompose_all;
    })();
    $root.c2s_decompose_soul_equip = (function() {
        function c2s_decompose_soul_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_decompose_soul_equip.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_decompose_soul_equip.cmd = 11272;
        c2s_decompose_soul_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_decompose_soul_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_decompose_soul_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_decompose_soul_equip;
    })();
    $root.c2s_remove_soul_equip = (function() {
        function c2s_remove_soul_equip(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_remove_soul_equip.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_remove_soul_equip.cmd = 11273;
        c2s_remove_soul_equip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.uniqId);
            return w;
        };
        c2s_remove_soul_equip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_remove_soul_equip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_remove_soul_equip;
    })();
    $root.s2c_soul_equip_money = (function() {
        function s2c_soul_equip_money(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_soul_equip_money.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_soul_equip_money.prototype.essence = 0;
        s2c_soul_equip_money.prototype.juhun = 0;
        s2c_soul_equip_money.prototype.shenhun = 0;
        s2c_soul_equip_money.cmd = 11274;
        s2c_soul_equip_money.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            if (m.essence != null && Object.hasOwnProperty.call(m, "essence"))
                w.uint32(16).int32(m.essence);
            if (m.juhun != null && Object.hasOwnProperty.call(m, "juhun"))
                w.uint32(24).int32(m.juhun);
            if (m.shenhun != null && Object.hasOwnProperty.call(m, "shenhun"))
                w.uint32(32).int32(m.shenhun);
            return w;
        };
        s2c_soul_equip_money.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_soul_equip_money();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.essence = r.int32();
                    break;
                case 3:
                    m.juhun = r.int32();
                    break;
                case 4:
                    m.shenhun = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            return m;
        };
        return s2c_soul_equip_money;
    })();
    $root.s2c_soul_equip_login_info = (function() {
        function s2c_soul_equip_login_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_soul_equip_login_info.prototype.autoDecompose = 0;
        s2c_soul_equip_login_info.prototype.essence = 0;
        s2c_soul_equip_login_info.prototype.juhun = 0;
        s2c_soul_equip_login_info.prototype.shenhun = 0;
        s2c_soul_equip_login_info.cmd = 11275;
        s2c_soul_equip_login_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.autoDecompose);
            w.uint32(16).int32(m.essence);
            w.uint32(24).int32(m.juhun);
            w.uint32(32).int32(m.shenhun);
            return w;
        };
        s2c_soul_equip_login_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_soul_equip_login_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.autoDecompose = r.int32();
                    break;
                case 2:
                    m.essence = r.int32();
                    break;
                case 3:
                    m.juhun = r.int32();
                    break;
                case 4:
                    m.shenhun = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("autoDecompose"))
                throw $util.ProtocolError("missing required 'autoDecompose'", { instance: m });
            if (!m.hasOwnProperty("essence"))
                throw $util.ProtocolError("missing required 'essence'", { instance: m });
            if (!m.hasOwnProperty("juhun"))
                throw $util.ProtocolError("missing required 'juhun'", { instance: m });
            if (!m.hasOwnProperty("shenhun"))
                throw $util.ProtocolError("missing required 'shenhun'", { instance: m });
            return m;
        };
        return s2c_soul_equip_login_info;
    })();
    $root.c2s_set_auto_decompose = (function() {
        function c2s_set_auto_decompose(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_set_auto_decompose.prototype.type = 0;
        c2s_set_auto_decompose.cmd = 11276;
        c2s_set_auto_decompose.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_set_auto_decompose.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_set_auto_decompose();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_set_auto_decompose;
    })();
    $root.s2c_soul_equip_wear_changed = (function() {
        function s2c_soul_equip_wear_changed(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_soul_equip_wear_changed.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_soul_equip_wear_changed.prototype.site = 0;
        s2c_soul_equip_wear_changed.prototype.info = null;
        s2c_soul_equip_wear_changed.cmd = 11277;
        s2c_soul_equip_wear_changed.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(16).int32(m.site);
            $root.soul_equip_info_p.encode(m.info, w.uint32(26).fork()).ldelim();
            return w;
        };
        s2c_soul_equip_wear_changed.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_soul_equip_wear_changed();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.site = r.int32();
                    break;
                case 3:
                    m.info = $root.soul_equip_info_p.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("site"))
                throw $util.ProtocolError("missing required 'site'", { instance: m });
            if (!m.hasOwnProperty("info"))
                throw $util.ProtocolError("missing required 'info'", { instance: m });
            return m;
        };
        return s2c_soul_equip_wear_changed;
    })();
    $root.c2s_checkpoint_info_request = (function() {
        function c2s_checkpoint_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_checkpoint_info_request.cmd = 11521;
        c2s_checkpoint_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_checkpoint_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_checkpoint_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_checkpoint_info_request;
    })();
    $root.s2c_checkpoint_info_reply = (function() {
        function s2c_checkpoint_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_checkpoint_info_reply.prototype.checkpoint = 0;
        s2c_checkpoint_info_reply.prototype.currKillMonster = 0;
        s2c_checkpoint_info_reply.prototype.autoChallenge = 0;
        s2c_checkpoint_info_reply.prototype.isOpen = 0;
        s2c_checkpoint_info_reply.cmd = 11522;
        s2c_checkpoint_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.checkpoint);
            w.uint32(16).int32(m.currKillMonster);
            w.uint32(24).int32(m.autoChallenge);
            if (m.isOpen != null && Object.hasOwnProperty.call(m, "isOpen"))
                w.uint32(32).int32(m.isOpen);
            return w;
        };
        s2c_checkpoint_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_checkpoint_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.checkpoint = r.int32();
                    break;
                case 2:
                    m.currKillMonster = r.int32();
                    break;
                case 3:
                    m.autoChallenge = r.int32();
                    break;
                case 4:
                    m.isOpen = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("checkpoint"))
                throw $util.ProtocolError("missing required 'checkpoint'", { instance: m });
            if (!m.hasOwnProperty("currKillMonster"))
                throw $util.ProtocolError("missing required 'currKillMonster'", { instance: m });
            if (!m.hasOwnProperty("autoChallenge"))
                throw $util.ProtocolError("missing required 'autoChallenge'", { instance: m });
            return m;
        };
        return s2c_checkpoint_info_reply;
    })();
    $root.s2c_checkpoint_monster_count_notify = (function() {
        function s2c_checkpoint_monster_count_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_checkpoint_monster_count_notify.prototype.checkpoint = 0;
        s2c_checkpoint_monster_count_notify.prototype.currKillMonster = 0;
        s2c_checkpoint_monster_count_notify.cmd = 11523;
        s2c_checkpoint_monster_count_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.checkpoint);
            w.uint32(16).int32(m.currKillMonster);
            return w;
        };
        s2c_checkpoint_monster_count_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_checkpoint_monster_count_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.checkpoint = r.int32();
                    break;
                case 2:
                    m.currKillMonster = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("checkpoint"))
                throw $util.ProtocolError("missing required 'checkpoint'", { instance: m });
            if (!m.hasOwnProperty("currKillMonster"))
                throw $util.ProtocolError("missing required 'currKillMonster'", { instance: m });
            return m;
        };
        return s2c_checkpoint_monster_count_notify;
    })();
    $root.c2s_checkpoint_set_auto_challenge_request = (function() {
        function c2s_checkpoint_set_auto_challenge_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_checkpoint_set_auto_challenge_request.prototype.autoChallenge = 0;
        c2s_checkpoint_set_auto_challenge_request.cmd = 11524;
        c2s_checkpoint_set_auto_challenge_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.autoChallenge);
            return w;
        };
        c2s_checkpoint_set_auto_challenge_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_checkpoint_set_auto_challenge_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.autoChallenge = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("autoChallenge"))
                throw $util.ProtocolError("missing required 'autoChallenge'", { instance: m });
            return m;
        };
        return c2s_checkpoint_set_auto_challenge_request;
    })();
    $root.s2c_checkpoint_set_auto_challenge_reply = (function() {
        function s2c_checkpoint_set_auto_challenge_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_checkpoint_set_auto_challenge_reply.prototype.autoChallenge = 0;
        s2c_checkpoint_set_auto_challenge_reply.cmd = 11525;
        s2c_checkpoint_set_auto_challenge_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.autoChallenge);
            return w;
        };
        s2c_checkpoint_set_auto_challenge_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_checkpoint_set_auto_challenge_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.autoChallenge = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("autoChallenge"))
                throw $util.ProtocolError("missing required 'autoChallenge'", { instance: m });
            return m;
        };
        return s2c_checkpoint_set_auto_challenge_reply;
    })();
    $root.c2s_checkpoint_challenge_request = (function() {
        function c2s_checkpoint_challenge_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_checkpoint_challenge_request.prototype.checkpoint = 0;
        c2s_checkpoint_challenge_request.cmd = 11526;
        c2s_checkpoint_challenge_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.checkpoint);
            return w;
        };
        c2s_checkpoint_challenge_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_checkpoint_challenge_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.checkpoint = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("checkpoint"))
                throw $util.ProtocolError("missing required 'checkpoint'", { instance: m });
            return m;
        };
        return c2s_checkpoint_challenge_request;
    })();
    $root.s2c_checkpoint_challenge_reply = (function() {
        function s2c_checkpoint_challenge_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_checkpoint_challenge_reply.prototype.checkpoint = 0;
        s2c_checkpoint_challenge_reply.prototype.startTime = 0;
        s2c_checkpoint_challenge_reply.prototype.endTime = 0;
        s2c_checkpoint_challenge_reply.cmd = 11527;
        s2c_checkpoint_challenge_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.checkpoint);
            w.uint32(16).int32(m.startTime);
            w.uint32(24).int32(m.endTime);
            return w;
        };
        s2c_checkpoint_challenge_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_checkpoint_challenge_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.checkpoint = r.int32();
                    break;
                case 2:
                    m.startTime = r.int32();
                    break;
                case 3:
                    m.endTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("checkpoint"))
                throw $util.ProtocolError("missing required 'checkpoint'", { instance: m });
            if (!m.hasOwnProperty("startTime"))
                throw $util.ProtocolError("missing required 'startTime'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            return m;
        };
        return s2c_checkpoint_challenge_reply;
    })();
    $root.c2s_checkpoint_leave_request = (function() {
        function c2s_checkpoint_leave_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_checkpoint_leave_request.cmd = 11528;
        c2s_checkpoint_leave_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_checkpoint_leave_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_checkpoint_leave_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_checkpoint_leave_request;
    })();
    $root.s2c_checkpoint_result_reply = (function() {
        function s2c_checkpoint_result_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_checkpoint_result_reply.prototype.checkpoint = 0;
        s2c_checkpoint_result_reply.prototype.result = 0;
        s2c_checkpoint_result_reply.cmd = 11529;
        s2c_checkpoint_result_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.checkpoint);
            w.uint32(16).int32(m.result);
            return w;
        };
        s2c_checkpoint_result_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_checkpoint_result_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.checkpoint = r.int32();
                    break;
                case 2:
                    m.result = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("checkpoint"))
                throw $util.ProtocolError("missing required 'checkpoint'", { instance: m });
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            return m;
        };
        return s2c_checkpoint_result_reply;
    })();
    $root.kv_sign = (function() {
        function kv_sign(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        kv_sign.prototype.id = 0;
        kv_sign.prototype.value = 0;
        kv_sign.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.value);
            return w;
        };
        kv_sign.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.kv_sign();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.value = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            return m;
        };
        return kv_sign;
    })();
    $root.activity_info_p = (function() {
        function activity_info_p(p) {
            this.multiSign = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        activity_info_p.prototype.activityId = 0;
        activity_info_p.prototype.mainId = 0;
        activity_info_p.prototype.state = 0;
        activity_info_p.prototype.keyCount = 0;
        activity_info_p.prototype.singleSign = 0;
        activity_info_p.prototype.multiSign = $util.emptyArray;
        activity_info_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.mainId);
            w.uint32(24).int32(m.state);
            if (m.keyCount != null && Object.hasOwnProperty.call(m, "keyCount"))
                w.uint32(32).int32(m.keyCount);
            if (m.singleSign != null && Object.hasOwnProperty.call(m, "singleSign"))
                w.uint32(40).int32(m.singleSign);
            if (m.multiSign != null && m.multiSign.length) {
                for (var i = 0; i < m.multiSign.length; ++i)
                    $root.kv_sign.encode(m.multiSign[i], w.uint32(50).fork()).ldelim();
            }
            return w;
        };
        activity_info_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.activity_info_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.mainId = r.int32();
                    break;
                case 3:
                    m.state = r.int32();
                    break;
                case 4:
                    m.keyCount = r.int32();
                    break;
                case 5:
                    m.singleSign = r.int32();
                    break;
                case 6:
                    if (!(m.multiSign && m.multiSign.length))
                        m.multiSign = [];
                    m.multiSign.push($root.kv_sign.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("mainId"))
                throw $util.ProtocolError("missing required 'mainId'", { instance: m });
            if (!m.hasOwnProperty("state"))
                throw $util.ProtocolError("missing required 'state'", { instance: m });
            return m;
        };
        return activity_info_p;
    })();
    $root.c2s_get_activity_info = (function() {
        function c2s_get_activity_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_activity_info.cmd = 11777;
        c2s_get_activity_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_get_activity_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_activity_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_get_activity_info;
    })();
    $root.s2c_get_activity_info = (function() {
        function s2c_get_activity_info(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_activity_info.prototype.data = $util.emptyArray;
        s2c_get_activity_info.cmd = 11778;
        s2c_get_activity_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.activity_info_p.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_get_activity_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_activity_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.activity_info_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_get_activity_info;
    })();
    $root.s2c_activity_change_notify = (function() {
        function s2c_activity_change_notify(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_activity_change_notify.prototype.data = $util.emptyArray;
        s2c_activity_change_notify.cmd = 11779;
        s2c_activity_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.activity_info_p.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_activity_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_activity_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.activity_info_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_activity_change_notify;
    })();
    $root.c2s_get_login_reward = (function() {
        function c2s_get_login_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_login_reward.prototype.activityId = 0;
        c2s_get_login_reward.prototype.day = 0;
        c2s_get_login_reward.cmd = 11780;
        c2s_get_login_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.day);
            return w;
        };
        c2s_get_login_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_login_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.day = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("day"))
                throw $util.ProtocolError("missing required 'day'", { instance: m });
            return m;
        };
        return c2s_get_login_reward;
    })();
    $root.c2s_get_charge_reward = (function() {
        function c2s_get_charge_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_charge_reward.prototype.activityId = 0;
        c2s_get_charge_reward.prototype.index = 0;
        c2s_get_charge_reward.cmd = 11781;
        c2s_get_charge_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.index);
            return w;
        };
        c2s_get_charge_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_charge_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.index = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("index"))
                throw $util.ProtocolError("missing required 'index'", { instance: m });
            return m;
        };
        return c2s_get_charge_reward;
    })();
    $root.c2s_get_crazy_reward = (function() {
        function c2s_get_crazy_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_crazy_reward.prototype.activityId = 0;
        c2s_get_crazy_reward.prototype.index = 0;
        c2s_get_crazy_reward.cmd = 11782;
        c2s_get_crazy_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.index);
            return w;
        };
        c2s_get_crazy_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_crazy_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.index = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("index"))
                throw $util.ProtocolError("missing required 'index'", { instance: m });
            return m;
        };
        return c2s_get_crazy_reward;
    })();
    $root.c2s_exchange_item = (function() {
        function c2s_exchange_item(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_exchange_item.prototype.activityId = 0;
        c2s_exchange_item.prototype.targetId = 0;
        c2s_exchange_item.prototype.num = 0;
        c2s_exchange_item.cmd = 11783;
        c2s_exchange_item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.targetId);
            w.uint32(24).int32(m.num);
            return w;
        };
        c2s_exchange_item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_exchange_item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.targetId = r.int32();
                    break;
                case 3:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("targetId"))
                throw $util.ProtocolError("missing required 'targetId'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_exchange_item;
    })();
    $root.c2s_seek_sign = (function() {
        function c2s_seek_sign(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_seek_sign.prototype.activityId = 0;
        c2s_seek_sign.prototype.cnt = 0;
        c2s_seek_sign.cmd = 11784;
        c2s_seek_sign.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.cnt);
            return w;
        };
        c2s_seek_sign.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_seek_sign();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.cnt = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("cnt"))
                throw $util.ProtocolError("missing required 'cnt'", { instance: m });
            return m;
        };
        return c2s_seek_sign;
    })();
    $root.c2s_buy_fireworks = (function() {
        function c2s_buy_fireworks(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_buy_fireworks.prototype.activityId = 0;
        c2s_buy_fireworks.prototype.num = 0;
        c2s_buy_fireworks.cmd = 11785;
        c2s_buy_fireworks.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.num);
            return w;
        };
        c2s_buy_fireworks.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_buy_fireworks();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_buy_fireworks;
    })();
    $root.c2s_query_fireworks_integral = (function() {
        function c2s_query_fireworks_integral(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_fireworks_integral.cmd = 11786;
        c2s_query_fireworks_integral.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_fireworks_integral.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_fireworks_integral();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_fireworks_integral;
    })();
    $root.s2c_query_fireworks_integral_reply = (function() {
        function s2c_query_fireworks_integral_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_fireworks_integral_reply.prototype.fireworksIntegral = 0;
        s2c_query_fireworks_integral_reply.cmd = 11787;
        s2c_query_fireworks_integral_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.fireworksIntegral);
            return w;
        };
        s2c_query_fireworks_integral_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_fireworks_integral_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fireworksIntegral = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("fireworksIntegral"))
                throw $util.ProtocolError("missing required 'fireworksIntegral'", { instance: m });
            return m;
        };
        return s2c_query_fireworks_integral_reply;
    })();
    $root.s2c_use_fireworks_reply = (function() {
        function s2c_use_fireworks_reply(p) {
            this.reward = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_use_fireworks_reply.prototype.reward = $util.emptyArray;
        s2c_use_fireworks_reply.prototype.isMail = 0;
        s2c_use_fireworks_reply.prototype.fireworksIntegral = 0;
        s2c_use_fireworks_reply.cmd = 11788;
        s2c_use_fireworks_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.reward != null && m.reward.length) {
                for (var i = 0; i < m.reward.length; ++i)
                    $root.p_item.encode(m.reward[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.isMail);
            w.uint32(24).int32(m.fireworksIntegral);
            return w;
        };
        s2c_use_fireworks_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_use_fireworks_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.reward && m.reward.length))
                        m.reward = [];
                    m.reward.push($root.p_item.decode(r, r.uint32()));
                    break;
                case 2:
                    m.isMail = r.int32();
                    break;
                case 3:
                    m.fireworksIntegral = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isMail"))
                throw $util.ProtocolError("missing required 'isMail'", { instance: m });
            if (!m.hasOwnProperty("fireworksIntegral"))
                throw $util.ProtocolError("missing required 'fireworksIntegral'", { instance: m });
            return m;
        };
        return s2c_use_fireworks_reply;
    })();
    $root.fireworks_world_record_p = (function() {
        function fireworks_world_record_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        fireworks_world_record_p.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        fireworks_world_record_p.prototype.roleName = "";
        fireworks_world_record_p.prototype.itemId = 0;
        fireworks_world_record_p.prototype.count = 0;
        fireworks_world_record_p.prototype.extData = "";
        fireworks_world_record_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.itemId);
            w.uint32(32).int32(m.count);
            w.uint32(42).string(m.extData);
            return w;
        };
        fireworks_world_record_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.fireworks_world_record_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.itemId = r.int32();
                    break;
                case 4:
                    m.count = r.int32();
                    break;
                case 5:
                    m.extData = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("count"))
                throw $util.ProtocolError("missing required 'count'", { instance: m });
            if (!m.hasOwnProperty("extData"))
                throw $util.ProtocolError("missing required 'extData'", { instance: m });
            return m;
        };
        return fireworks_world_record_p;
    })();
    $root.c2s_query_fireworks_record = (function() {
        function c2s_query_fireworks_record(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_fireworks_record.cmd = 11789;
        c2s_query_fireworks_record.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_fireworks_record.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_fireworks_record();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_fireworks_record;
    })();
    $root.s2c_fireworks_world_record_notify = (function() {
        function s2c_fireworks_world_record_notify(p) {
            this.record = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_fireworks_world_record_notify.prototype.record = $util.emptyArray;
        s2c_fireworks_world_record_notify.cmd = 11790;
        s2c_fireworks_world_record_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.record != null && m.record.length) {
                for (var i = 0; i < m.record.length; ++i)
                    $root.fireworks_world_record_p.encode(m.record[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_fireworks_world_record_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_fireworks_world_record_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.record && m.record.length))
                        m.record = [];
                    m.record.push($root.fireworks_world_record_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_fireworks_world_record_notify;
    })();
    $root.c2s_query_activity_rank_reward = (function() {
        function c2s_query_activity_rank_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_activity_rank_reward.cmd = 11791;
        c2s_query_activity_rank_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_activity_rank_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_activity_rank_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_activity_rank_reward;
    })();
    $root.s2c_query_activity_rank_reward = (function() {
        function s2c_query_activity_rank_reward(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_activity_rank_reward.prototype.data = $util.emptyArray;
        s2c_query_activity_rank_reward.cmd = 11792;
        s2c_query_activity_rank_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.activity_rank_reward_p.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_activity_rank_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_activity_rank_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.activity_rank_reward_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_activity_rank_reward;
    })();
    $root.c2s_get_activity_rank_reward = (function() {
        function c2s_get_activity_rank_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_activity_rank_reward.prototype.id = 0;
        c2s_get_activity_rank_reward.cmd = 11793;
        c2s_get_activity_rank_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_get_activity_rank_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_activity_rank_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_get_activity_rank_reward;
    })();
    $root.s2c_activity_rank_reward_notify = (function() {
        function s2c_activity_rank_reward_notify(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_activity_rank_reward_notify.prototype.data = $util.emptyArray;
        s2c_activity_rank_reward_notify.cmd = 11794;
        s2c_activity_rank_reward_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.activity_rank_reward_p.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_activity_rank_reward_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_activity_rank_reward_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.activity_rank_reward_p.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_activity_rank_reward_notify;
    })();
    $root.activity_rank_reward_p = (function() {
        function activity_rank_reward_p(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        activity_rank_reward_p.prototype.id = 0;
        activity_rank_reward_p.prototype.endTime = 0;
        activity_rank_reward_p.prototype.rewardType = 0;
        activity_rank_reward_p.prototype.receiveState = 0;
        activity_rank_reward_p.prototype.myRank = 0;
        activity_rank_reward_p.prototype.myScore = 0;
        activity_rank_reward_p.prototype.rankFlag = 0;
        activity_rank_reward_p.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.endTime);
            w.uint32(24).int32(m.rewardType);
            w.uint32(32).int32(m.receiveState);
            w.uint32(40).int32(m.myRank);
            w.uint32(48).int32(m.myScore);
            w.uint32(56).int32(m.rankFlag);
            return w;
        };
        activity_rank_reward_p.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.activity_rank_reward_p();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.endTime = r.int32();
                    break;
                case 3:
                    m.rewardType = r.int32();
                    break;
                case 4:
                    m.receiveState = r.int32();
                    break;
                case 5:
                    m.myRank = r.int32();
                    break;
                case 6:
                    m.myScore = r.int32();
                    break;
                case 7:
                    m.rankFlag = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("rewardType"))
                throw $util.ProtocolError("missing required 'rewardType'", { instance: m });
            if (!m.hasOwnProperty("receiveState"))
                throw $util.ProtocolError("missing required 'receiveState'", { instance: m });
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            if (!m.hasOwnProperty("myScore"))
                throw $util.ProtocolError("missing required 'myScore'", { instance: m });
            if (!m.hasOwnProperty("rankFlag"))
                throw $util.ProtocolError("missing required 'rankFlag'", { instance: m });
            return m;
        };
        return activity_rank_reward_p;
    })();
    $root.p_invit_info = (function() {
        function p_invit_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_invit_info.prototype.seqId = 0;
        p_invit_info.prototype.head = "";
        p_invit_info.prototype.status = 0;
        p_invit_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            w.uint32(18).string(m.head);
            w.uint32(24).int32(m.status);
            return w;
        };
        p_invit_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_invit_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                case 2:
                    m.head = r.string();
                    break;
                case 3:
                    m.status = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            if (!m.hasOwnProperty("head"))
                throw $util.ProtocolError("missing required 'head'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            return m;
        };
        return p_invit_info;
    })();
    $root.p_invit_recharge = (function() {
        function p_invit_recharge(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_invit_recharge.prototype.seqId = 0;
        p_invit_recharge.prototype.awardGold = 0;
        p_invit_recharge.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            w.uint32(16).int32(m.awardGold);
            return w;
        };
        p_invit_recharge.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_invit_recharge();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                case 2:
                    m.awardGold = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            if (!m.hasOwnProperty("awardGold"))
                throw $util.ProtocolError("missing required 'awardGold'", { instance: m });
            return m;
        };
        return p_invit_recharge;
    })();
    $root.c2s_share_info_request = (function() {
        function c2s_share_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_info_request.cmd = 12033;
        c2s_share_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_share_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_share_info_request;
    })();
    $root.s2c_share_info_reply = (function() {
        function s2c_share_info_reply(p) {
            this.shareTotCntAwards = [];
            this.invitRoles = [];
            this.invitLevelRoles = [];
            this.invitRechargeAwards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_info_reply.prototype.shareDailyCnt = 0;
        s2c_share_info_reply.prototype.shareAwardStatus = 0;
        s2c_share_info_reply.prototype.shareRemainCnt = 0;
        s2c_share_info_reply.prototype.shareRemainCntTime = 0;
        s2c_share_info_reply.prototype.shareTotCnt = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_share_info_reply.prototype.shareTotCntAwards = $util.emptyArray;
        s2c_share_info_reply.prototype.invitTotCntAwardId = 0;
        s2c_share_info_reply.prototype.invitRoles = $util.emptyArray;
        s2c_share_info_reply.prototype.invitLevelRoles = $util.emptyArray;
        s2c_share_info_reply.prototype.invitRechargeAwards = $util.emptyArray;
        s2c_share_info_reply.prototype.firstShare = 0;
        s2c_share_info_reply.cmd = 12034;
        s2c_share_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.shareDailyCnt);
            w.uint32(16).int32(m.shareAwardStatus);
            w.uint32(24).int32(m.shareRemainCnt);
            w.uint32(32).int32(m.shareRemainCntTime);
            w.uint32(40).int64(m.shareTotCnt);
            if (m.shareTotCntAwards != null && m.shareTotCntAwards.length) {
                for (var i = 0; i < m.shareTotCntAwards.length; ++i)
                    w.uint32(48).int32(m.shareTotCntAwards[i]);
            }
            w.uint32(56).int32(m.invitTotCntAwardId);
            if (m.invitRoles != null && m.invitRoles.length) {
                for (var i = 0; i < m.invitRoles.length; ++i)
                    $root.p_invit_info.encode(m.invitRoles[i], w.uint32(66).fork()).ldelim();
            }
            if (m.invitLevelRoles != null && m.invitLevelRoles.length) {
                for (var i = 0; i < m.invitLevelRoles.length; ++i)
                    $root.p_invit_info.encode(m.invitLevelRoles[i], w.uint32(74).fork()).ldelim();
            }
            if (m.invitRechargeAwards != null && m.invitRechargeAwards.length) {
                for (var i = 0; i < m.invitRechargeAwards.length; ++i)
                    $root.p_invit_recharge.encode(m.invitRechargeAwards[i], w.uint32(82).fork()).ldelim();
            }
            if (m.firstShare != null && Object.hasOwnProperty.call(m, "firstShare"))
                w.uint32(88).int32(m.firstShare);
            return w;
        };
        s2c_share_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.shareDailyCnt = r.int32();
                    break;
                case 2:
                    m.shareAwardStatus = r.int32();
                    break;
                case 3:
                    m.shareRemainCnt = r.int32();
                    break;
                case 4:
                    m.shareRemainCntTime = r.int32();
                    break;
                case 5:
                    m.shareTotCnt = r.int64();
                    break;
                case 6:
                    if (!(m.shareTotCntAwards && m.shareTotCntAwards.length))
                        m.shareTotCntAwards = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.shareTotCntAwards.push(r.int32());
                    } else
                        m.shareTotCntAwards.push(r.int32());
                    break;
                case 7:
                    m.invitTotCntAwardId = r.int32();
                    break;
                case 8:
                    if (!(m.invitRoles && m.invitRoles.length))
                        m.invitRoles = [];
                    m.invitRoles.push($root.p_invit_info.decode(r, r.uint32()));
                    break;
                case 9:
                    if (!(m.invitLevelRoles && m.invitLevelRoles.length))
                        m.invitLevelRoles = [];
                    m.invitLevelRoles.push($root.p_invit_info.decode(r, r.uint32()));
                    break;
                case 10:
                    if (!(m.invitRechargeAwards && m.invitRechargeAwards.length))
                        m.invitRechargeAwards = [];
                    m.invitRechargeAwards.push($root.p_invit_recharge.decode(r, r.uint32()));
                    break;
                case 11:
                    m.firstShare = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("shareDailyCnt"))
                throw $util.ProtocolError("missing required 'shareDailyCnt'", { instance: m });
            if (!m.hasOwnProperty("shareAwardStatus"))
                throw $util.ProtocolError("missing required 'shareAwardStatus'", { instance: m });
            if (!m.hasOwnProperty("shareRemainCnt"))
                throw $util.ProtocolError("missing required 'shareRemainCnt'", { instance: m });
            if (!m.hasOwnProperty("shareRemainCntTime"))
                throw $util.ProtocolError("missing required 'shareRemainCntTime'", { instance: m });
            if (!m.hasOwnProperty("shareTotCnt"))
                throw $util.ProtocolError("missing required 'shareTotCnt'", { instance: m });
            if (!m.hasOwnProperty("invitTotCntAwardId"))
                throw $util.ProtocolError("missing required 'invitTotCntAwardId'", { instance: m });
            return m;
        };
        return s2c_share_info_reply;
    })();
    $root.c2s_share_share_request = (function() {
        function c2s_share_share_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_share_request.prototype.shareType = 0;
        c2s_share_share_request.prototype.sharePicture = 0;
        c2s_share_share_request.cmd = 12035;
        c2s_share_share_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.shareType);
            w.uint32(16).int32(m.sharePicture);
            return w;
        };
        c2s_share_share_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_share_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.shareType = r.int32();
                    break;
                case 2:
                    m.sharePicture = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("shareType"))
                throw $util.ProtocolError("missing required 'shareType'", { instance: m });
            if (!m.hasOwnProperty("sharePicture"))
                throw $util.ProtocolError("missing required 'sharePicture'", { instance: m });
            return m;
        };
        return c2s_share_share_request;
    })();
    $root.s2c_share_award_status_notify = (function() {
        function s2c_share_award_status_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_award_status_notify.prototype.shareAwardStatus = 0;
        s2c_share_award_status_notify.cmd = 12036;
        s2c_share_award_status_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.shareAwardStatus);
            return w;
        };
        s2c_share_award_status_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_award_status_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.shareAwardStatus = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("shareAwardStatus"))
                throw $util.ProtocolError("missing required 'shareAwardStatus'", { instance: m });
            return m;
        };
        return s2c_share_award_status_notify;
    })();
    $root.s2c_share_remain_cnt_notify = (function() {
        function s2c_share_remain_cnt_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_remain_cnt_notify.prototype.shareRemainCnt = 0;
        s2c_share_remain_cnt_notify.cmd = 12037;
        s2c_share_remain_cnt_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.shareRemainCnt);
            return w;
        };
        s2c_share_remain_cnt_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_remain_cnt_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.shareRemainCnt = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("shareRemainCnt"))
                throw $util.ProtocolError("missing required 'shareRemainCnt'", { instance: m });
            return m;
        };
        return s2c_share_remain_cnt_notify;
    })();
    $root.c2s_share_share_award_request = (function() {
        function c2s_share_share_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_share_award_request.cmd = 12038;
        c2s_share_share_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_share_share_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_share_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_share_share_award_request;
    })();
    $root.s2c_share_share_award_reply = (function() {
        function s2c_share_share_award_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_share_award_reply.prototype.shareRemainCnt = 0;
        s2c_share_share_award_reply.prototype.shareDailyCnt = 0;
        s2c_share_share_award_reply.prototype.shareTotCnt = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        s2c_share_share_award_reply.prototype.shareRemainTime = 0;
        s2c_share_share_award_reply.cmd = 12039;
        s2c_share_share_award_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.shareRemainCnt);
            w.uint32(16).int32(m.shareDailyCnt);
            w.uint32(24).int64(m.shareTotCnt);
            w.uint32(32).int32(m.shareRemainTime);
            return w;
        };
        s2c_share_share_award_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_share_award_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.shareRemainCnt = r.int32();
                    break;
                case 2:
                    m.shareDailyCnt = r.int32();
                    break;
                case 3:
                    m.shareTotCnt = r.int64();
                    break;
                case 4:
                    m.shareRemainTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("shareRemainCnt"))
                throw $util.ProtocolError("missing required 'shareRemainCnt'", { instance: m });
            if (!m.hasOwnProperty("shareDailyCnt"))
                throw $util.ProtocolError("missing required 'shareDailyCnt'", { instance: m });
            if (!m.hasOwnProperty("shareTotCnt"))
                throw $util.ProtocolError("missing required 'shareTotCnt'", { instance: m });
            if (!m.hasOwnProperty("shareRemainTime"))
                throw $util.ProtocolError("missing required 'shareRemainTime'", { instance: m });
            return m;
        };
        return s2c_share_share_award_reply;
    })();
    $root.c2s_share_share_tot_cnt_award_request = (function() {
        function c2s_share_share_tot_cnt_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_share_tot_cnt_award_request.prototype.awardId = 0;
        c2s_share_share_tot_cnt_award_request.cmd = 12040;
        c2s_share_share_tot_cnt_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.awardId);
            return w;
        };
        c2s_share_share_tot_cnt_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_share_tot_cnt_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.awardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("awardId"))
                throw $util.ProtocolError("missing required 'awardId'", { instance: m });
            return m;
        };
        return c2s_share_share_tot_cnt_award_request;
    })();
    $root.s2c_share_share_tot_cnt_award_reply = (function() {
        function s2c_share_share_tot_cnt_award_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_share_tot_cnt_award_reply.prototype.awardId = 0;
        s2c_share_share_tot_cnt_award_reply.cmd = 12041;
        s2c_share_share_tot_cnt_award_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.awardId);
            return w;
        };
        s2c_share_share_tot_cnt_award_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_share_tot_cnt_award_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.awardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("awardId"))
                throw $util.ProtocolError("missing required 'awardId'", { instance: m });
            return m;
        };
        return s2c_share_share_tot_cnt_award_reply;
    })();
    $root.c2s_share_invit_tot_cnt_award_request = (function() {
        function c2s_share_invit_tot_cnt_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_invit_tot_cnt_award_request.cmd = 12042;
        c2s_share_invit_tot_cnt_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_share_invit_tot_cnt_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_invit_tot_cnt_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_share_invit_tot_cnt_award_request;
    })();
    $root.s2c_share_invit_tot_cnt_award_reply = (function() {
        function s2c_share_invit_tot_cnt_award_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_invit_tot_cnt_award_reply.prototype.awardId = 0;
        s2c_share_invit_tot_cnt_award_reply.cmd = 12043;
        s2c_share_invit_tot_cnt_award_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.awardId);
            return w;
        };
        s2c_share_invit_tot_cnt_award_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_invit_tot_cnt_award_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.awardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("awardId"))
                throw $util.ProtocolError("missing required 'awardId'", { instance: m });
            return m;
        };
        return s2c_share_invit_tot_cnt_award_reply;
    })();
    $root.c2s_share_invit_role_award_request = (function() {
        function c2s_share_invit_role_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_invit_role_award_request.prototype.seqId = 0;
        c2s_share_invit_role_award_request.cmd = 12044;
        c2s_share_invit_role_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            return w;
        };
        c2s_share_invit_role_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_invit_role_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            return m;
        };
        return c2s_share_invit_role_award_request;
    })();
    $root.s2c_share_invit_role_award_reply = (function() {
        function s2c_share_invit_role_award_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_invit_role_award_reply.prototype.seqId = 0;
        s2c_share_invit_role_award_reply.cmd = 12045;
        s2c_share_invit_role_award_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            return w;
        };
        s2c_share_invit_role_award_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_invit_role_award_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            return m;
        };
        return s2c_share_invit_role_award_reply;
    })();
    $root.c2s_share_invit_level_role_award_request = (function() {
        function c2s_share_invit_level_role_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_invit_level_role_award_request.prototype.seqId = 0;
        c2s_share_invit_level_role_award_request.cmd = 12046;
        c2s_share_invit_level_role_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            return w;
        };
        c2s_share_invit_level_role_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_invit_level_role_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            return m;
        };
        return c2s_share_invit_level_role_award_request;
    })();
    $root.s2c_share_invit_level_role_award_reply = (function() {
        function s2c_share_invit_level_role_award_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_invit_level_role_award_reply.prototype.seqId = 0;
        s2c_share_invit_level_role_award_reply.cmd = 12047;
        s2c_share_invit_level_role_award_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            return w;
        };
        s2c_share_invit_level_role_award_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_invit_level_role_award_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            return m;
        };
        return s2c_share_invit_level_role_award_reply;
    })();
    $root.c2s_share_invit_recharge_award_request = (function() {
        function c2s_share_invit_recharge_award_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_share_invit_recharge_award_request.prototype.seqId = 0;
        c2s_share_invit_recharge_award_request.cmd = 12048;
        c2s_share_invit_recharge_award_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            return w;
        };
        c2s_share_invit_recharge_award_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_share_invit_recharge_award_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            return m;
        };
        return c2s_share_invit_recharge_award_request;
    })();
    $root.s2c_share_invit_recharge_award_reply = (function() {
        function s2c_share_invit_recharge_award_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_invit_recharge_award_reply.prototype.seqId = 0;
        s2c_share_invit_recharge_award_reply.prototype.awardGold = 0;
        s2c_share_invit_recharge_award_reply.cmd = 12049;
        s2c_share_invit_recharge_award_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            w.uint32(16).int32(m.awardGold);
            return w;
        };
        s2c_share_invit_recharge_award_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_invit_recharge_award_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                case 2:
                    m.awardGold = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            if (!m.hasOwnProperty("awardGold"))
                throw $util.ProtocolError("missing required 'awardGold'", { instance: m });
            return m;
        };
        return s2c_share_invit_recharge_award_reply;
    })();
    $root.s2c_share_add_invit_role_notify = (function() {
        function s2c_share_add_invit_role_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_add_invit_role_notify.prototype.invitRole = null;
        s2c_share_add_invit_role_notify.cmd = 12050;
        s2c_share_add_invit_role_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_invit_info.encode(m.invitRole, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_share_add_invit_role_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_add_invit_role_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.invitRole = $root.p_invit_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("invitRole"))
                throw $util.ProtocolError("missing required 'invitRole'", { instance: m });
            return m;
        };
        return s2c_share_add_invit_role_notify;
    })();
    $root.s2c_share_add_invit_level_role_notify = (function() {
        function s2c_share_add_invit_level_role_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_add_invit_level_role_notify.prototype.invitLevelRole = null;
        s2c_share_add_invit_level_role_notify.cmd = 12051;
        s2c_share_add_invit_level_role_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_invit_info.encode(m.invitLevelRole, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_share_add_invit_level_role_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_add_invit_level_role_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.invitLevelRole = $root.p_invit_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("invitLevelRole"))
                throw $util.ProtocolError("missing required 'invitLevelRole'", { instance: m });
            return m;
        };
        return s2c_share_add_invit_level_role_notify;
    })();
    $root.s2c_share_add_invit_recharge_notify = (function() {
        function s2c_share_add_invit_recharge_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_add_invit_recharge_notify.prototype.seqId = 0;
        s2c_share_add_invit_recharge_notify.prototype.awardGold = 0;
        s2c_share_add_invit_recharge_notify.cmd = 12052;
        s2c_share_add_invit_recharge_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.seqId);
            w.uint32(16).int32(m.awardGold);
            return w;
        };
        s2c_share_add_invit_recharge_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_add_invit_recharge_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.seqId = r.int32();
                    break;
                case 2:
                    m.awardGold = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("seqId"))
                throw $util.ProtocolError("missing required 'seqId'", { instance: m });
            if (!m.hasOwnProperty("awardGold"))
                throw $util.ProtocolError("missing required 'awardGold'", { instance: m });
            return m;
        };
        return s2c_share_add_invit_recharge_notify;
    })();
    $root.s2c_share_tot_cnt_notify = (function() {
        function s2c_share_tot_cnt_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_share_tot_cnt_notify.prototype.shareTotCnt = 0;
        s2c_share_tot_cnt_notify.cmd = 12053;
        s2c_share_tot_cnt_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.shareTotCnt);
            return w;
        };
        s2c_share_tot_cnt_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_share_tot_cnt_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.shareTotCnt = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("shareTotCnt"))
                throw $util.ProtocolError("missing required 'shareTotCnt'", { instance: m });
            return m;
        };
        return s2c_share_tot_cnt_notify;
    })();
    $root.p_commerce_employee = (function() {
        function p_commerce_employee(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_commerce_employee.prototype.employeeId = 0;
        p_commerce_employee.prototype.level = 0;
        p_commerce_employee.prototype.grade = 0;
        p_commerce_employee.prototype.star = 0;
        p_commerce_employee.prototype.score = 0;
        p_commerce_employee.prototype.buildingId = 0;
        p_commerce_employee.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.employeeId);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(16).int32(m.level);
            if (m.grade != null && Object.hasOwnProperty.call(m, "grade"))
                w.uint32(24).int32(m.grade);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(32).int32(m.star);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(40).int32(m.score);
            if (m.buildingId != null && Object.hasOwnProperty.call(m, "buildingId"))
                w.uint32(48).int32(m.buildingId);
            return w;
        };
        p_commerce_employee.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_commerce_employee();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.employeeId = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                case 3:
                    m.grade = r.int32();
                    break;
                case 4:
                    m.star = r.int32();
                    break;
                case 5:
                    m.score = r.int32();
                    break;
                case 6:
                    m.buildingId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("employeeId"))
                throw $util.ProtocolError("missing required 'employeeId'", { instance: m });
            return m;
        };
        return p_commerce_employee;
    })();
    $root.p_commerce_land = (function() {
        function p_commerce_land(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_commerce_land.prototype.landId = 0;
        p_commerce_land.prototype.isOpen = false;
        p_commerce_land.prototype.isUsed = false;
        p_commerce_land.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.landId);
            if (m.isOpen != null && Object.hasOwnProperty.call(m, "isOpen"))
                w.uint32(16).bool(m.isOpen);
            if (m.isUsed != null && Object.hasOwnProperty.call(m, "isUsed"))
                w.uint32(24).bool(m.isUsed);
            return w;
        };
        p_commerce_land.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_commerce_land();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.landId = r.int32();
                    break;
                case 2:
                    m.isOpen = r.bool();
                    break;
                case 3:
                    m.isUsed = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("landId"))
                throw $util.ProtocolError("missing required 'landId'", { instance: m });
            return m;
        };
        return p_commerce_land;
    })();
    $root.p_commerce_building = (function() {
        function p_commerce_building(p) {
            this.employees = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_commerce_building.prototype.buildingId = 0;
        p_commerce_building.prototype.level = 0;
        p_commerce_building.prototype.star = 0;
        p_commerce_building.prototype.employees = $util.emptyArray;
        p_commerce_building.prototype.score = 0;
        p_commerce_building.prototype.lastRunTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_commerce_building.prototype.landId = 0;
        p_commerce_building.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.buildingId);
            w.uint32(16).int32(m.level);
            w.uint32(24).int32(m.star);
            if (m.employees != null && m.employees.length) {
                for (var i = 0; i < m.employees.length; ++i)
                    $root.p_commerce_building_employee.encode(m.employees[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.score);
            w.uint32(48).int64(m.lastRunTime);
            w.uint32(56).int32(m.landId);
            return w;
        };
        p_commerce_building.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_commerce_building();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.buildingId = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                case 4:
                    if (!(m.employees && m.employees.length))
                        m.employees = [];
                    m.employees.push($root.p_commerce_building_employee.decode(r, r.uint32()));
                    break;
                case 5:
                    m.score = r.int32();
                    break;
                case 6:
                    m.lastRunTime = r.int64();
                    break;
                case 7:
                    m.landId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("buildingId"))
                throw $util.ProtocolError("missing required 'buildingId'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("star"))
                throw $util.ProtocolError("missing required 'star'", { instance: m });
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            if (!m.hasOwnProperty("lastRunTime"))
                throw $util.ProtocolError("missing required 'lastRunTime'", { instance: m });
            if (!m.hasOwnProperty("landId"))
                throw $util.ProtocolError("missing required 'landId'", { instance: m });
            return m;
        };
        return p_commerce_building;
    })();
    $root.p_commerce_building_employee = (function() {
        function p_commerce_building_employee(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_commerce_building_employee.prototype.positionId = 0;
        p_commerce_building_employee.prototype.employeeId = 0;
        p_commerce_building_employee.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.positionId);
            if (m.employeeId != null && Object.hasOwnProperty.call(m, "employeeId"))
                w.uint32(16).int32(m.employeeId);
            return w;
        };
        p_commerce_building_employee.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_commerce_building_employee();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.positionId = r.int32();
                    break;
                case 2:
                    m.employeeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("positionId"))
                throw $util.ProtocolError("missing required 'positionId'", { instance: m });
            return m;
        };
        return p_commerce_building_employee;
    })();
    $root.p_commerce_employee_recruit_time = (function() {
        function p_commerce_employee_recruit_time(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_commerce_employee_recruit_time.prototype.type = 0;
        p_commerce_employee_recruit_time.prototype.time = 0;
        p_commerce_employee_recruit_time.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(16).int32(m.time);
            return w;
        };
        p_commerce_employee_recruit_time.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_commerce_employee_recruit_time();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.time = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_commerce_employee_recruit_time;
    })();
    $root.c2s_commerce_query_info_request = (function() {
        function c2s_commerce_query_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_query_info_request.cmd = 12289;
        c2s_commerce_query_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_query_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_query_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_query_info_request;
    })();
    $root.s2c_commerce_query_info_reply = (function() {
        function s2c_commerce_query_info_reply(p) {
            this.employees = [];
            this.lands = [];
            this.buildings = [];
            this.recruitTime = [];
            this.poorHarvest = [];
            this.companySkills = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_query_info_reply.prototype.level = 0;
        s2c_commerce_query_info_reply.prototype.employees = $util.emptyArray;
        s2c_commerce_query_info_reply.prototype.lands = $util.emptyArray;
        s2c_commerce_query_info_reply.prototype.buildings = $util.emptyArray;
        s2c_commerce_query_info_reply.prototype.score = 0;
        s2c_commerce_query_info_reply.prototype.recruitTime = $util.emptyArray;
        s2c_commerce_query_info_reply.prototype.poorHarvest = $util.emptyArray;
        s2c_commerce_query_info_reply.prototype.companySkills = $util.emptyArray;
        s2c_commerce_query_info_reply.cmd = 12290;
        s2c_commerce_query_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.level);
            if (m.employees != null && m.employees.length) {
                for (var i = 0; i < m.employees.length; ++i)
                    $root.p_commerce_employee.encode(m.employees[i], w.uint32(18).fork()).ldelim();
            }
            if (m.lands != null && m.lands.length) {
                for (var i = 0; i < m.lands.length; ++i)
                    $root.p_commerce_land.encode(m.lands[i], w.uint32(26).fork()).ldelim();
            }
            if (m.buildings != null && m.buildings.length) {
                for (var i = 0; i < m.buildings.length; ++i)
                    $root.p_commerce_building.encode(m.buildings[i], w.uint32(34).fork()).ldelim();
            }
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(40).int32(m.score);
            if (m.recruitTime != null && m.recruitTime.length) {
                for (var i = 0; i < m.recruitTime.length; ++i)
                    $root.p_commerce_employee_recruit_time.encode(m.recruitTime[i], w.uint32(50).fork()).ldelim();
            }
            if (m.poorHarvest != null && m.poorHarvest.length) {
                for (var i = 0; i < m.poorHarvest.length; ++i)
                    $root.p_kv_pair.encode(m.poorHarvest[i], w.uint32(58).fork()).ldelim();
            }
            if (m.companySkills != null && m.companySkills.length) {
                for (var i = 0; i < m.companySkills.length; ++i)
                    w.uint32(64).int32(m.companySkills[i]);
            }
            return w;
        };
        s2c_commerce_query_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_query_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    if (!(m.employees && m.employees.length))
                        m.employees = [];
                    m.employees.push($root.p_commerce_employee.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.lands && m.lands.length))
                        m.lands = [];
                    m.lands.push($root.p_commerce_land.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.buildings && m.buildings.length))
                        m.buildings = [];
                    m.buildings.push($root.p_commerce_building.decode(r, r.uint32()));
                    break;
                case 5:
                    m.score = r.int32();
                    break;
                case 6:
                    if (!(m.recruitTime && m.recruitTime.length))
                        m.recruitTime = [];
                    m.recruitTime.push($root.p_commerce_employee_recruit_time.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.poorHarvest && m.poorHarvest.length))
                        m.poorHarvest = [];
                    m.poorHarvest.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 8:
                    if (!(m.companySkills && m.companySkills.length))
                        m.companySkills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.companySkills.push(r.int32());
                    } else
                        m.companySkills.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            return m;
        };
        return s2c_commerce_query_info_reply;
    })();
    $root.c2s_commerce_active_request = (function() {
        function c2s_commerce_active_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_active_request.cmd = 12291;
        c2s_commerce_active_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_active_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_active_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_active_request;
    })();
    $root.c2s_commerce_upgrade_request = (function() {
        function c2s_commerce_upgrade_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_upgrade_request.cmd = 12292;
        c2s_commerce_upgrade_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_upgrade_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_upgrade_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_upgrade_request;
    })();
    $root.s2c_commerce_company_notify = (function() {
        function s2c_commerce_company_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_company_notify.prototype.level = 0;
        s2c_commerce_company_notify.prototype.score = 0;
        s2c_commerce_company_notify.cmd = 12293;
        s2c_commerce_company_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(8).int32(m.level);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(16).int32(m.score);
            return w;
        };
        s2c_commerce_company_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_company_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_company_notify;
    })();
    $root.c2s_commerce_query_coin_per_minute_request = (function() {
        function c2s_commerce_query_coin_per_minute_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_query_coin_per_minute_request.cmd = 12294;
        c2s_commerce_query_coin_per_minute_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_query_coin_per_minute_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_query_coin_per_minute_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_query_coin_per_minute_request;
    })();
    $root.s2c_commerce_query_coin_per_minute_reply = (function() {
        function s2c_commerce_query_coin_per_minute_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_query_coin_per_minute_reply.prototype.coin = 0;
        s2c_commerce_query_coin_per_minute_reply.cmd = 12295;
        s2c_commerce_query_coin_per_minute_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.coin != null && Object.hasOwnProperty.call(m, "coin"))
                w.uint32(8).int32(m.coin);
            return w;
        };
        s2c_commerce_query_coin_per_minute_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_query_coin_per_minute_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.coin = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_query_coin_per_minute_reply;
    })();
    $root.c2s_commerce_employee_recruit_request = (function() {
        function c2s_commerce_employee_recruit_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_employee_recruit_request.prototype.type = 0;
        c2s_commerce_employee_recruit_request.cmd = 12296;
        c2s_commerce_employee_recruit_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_commerce_employee_recruit_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_employee_recruit_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_commerce_employee_recruit_request;
    })();
    $root.s2c_commerce_employee_recruit_reply = (function() {
        function s2c_commerce_employee_recruit_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_employee_recruit_reply.prototype.employeeId = 0;
        s2c_commerce_employee_recruit_reply.prototype.type = 0;
        s2c_commerce_employee_recruit_reply.prototype.num = 0;
        s2c_commerce_employee_recruit_reply.cmd = 12297;
        s2c_commerce_employee_recruit_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.employeeId);
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.num != null && Object.hasOwnProperty.call(m, "num"))
                w.uint32(24).int32(m.num);
            return w;
        };
        s2c_commerce_employee_recruit_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_employee_recruit_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.employeeId = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("employeeId"))
                throw $util.ProtocolError("missing required 'employeeId'", { instance: m });
            return m;
        };
        return s2c_commerce_employee_recruit_reply;
    })();
    $root.c2s_commerce_employee_add_level_request = (function() {
        function c2s_commerce_employee_add_level_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_employee_add_level_request.prototype.employeeId = 0;
        c2s_commerce_employee_add_level_request.prototype.times = 1;
        c2s_commerce_employee_add_level_request.cmd = 12298;
        c2s_commerce_employee_add_level_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.employeeId);
            if (m.times != null && Object.hasOwnProperty.call(m, "times"))
                w.uint32(16).int32(m.times);
            return w;
        };
        c2s_commerce_employee_add_level_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_employee_add_level_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.employeeId = r.int32();
                    break;
                case 2:
                    m.times = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("employeeId"))
                throw $util.ProtocolError("missing required 'employeeId'", { instance: m });
            return m;
        };
        return c2s_commerce_employee_add_level_request;
    })();
    $root.c2s_commerce_employee_add_grade_request = (function() {
        function c2s_commerce_employee_add_grade_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_employee_add_grade_request.prototype.employeeId = 0;
        c2s_commerce_employee_add_grade_request.cmd = 12299;
        c2s_commerce_employee_add_grade_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.employeeId);
            return w;
        };
        c2s_commerce_employee_add_grade_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_employee_add_grade_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.employeeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("employeeId"))
                throw $util.ProtocolError("missing required 'employeeId'", { instance: m });
            return m;
        };
        return c2s_commerce_employee_add_grade_request;
    })();
    $root.c2s_commerce_employee_add_star_request = (function() {
        function c2s_commerce_employee_add_star_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_employee_add_star_request.prototype.employeeId = 0;
        c2s_commerce_employee_add_star_request.cmd = 12300;
        c2s_commerce_employee_add_star_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.employeeId);
            return w;
        };
        c2s_commerce_employee_add_star_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_employee_add_star_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.employeeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("employeeId"))
                throw $util.ProtocolError("missing required 'employeeId'", { instance: m });
            return m;
        };
        return c2s_commerce_employee_add_star_request;
    })();
    $root.s2c_commerce_employee_notice = (function() {
        function s2c_commerce_employee_notice(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_employee_notice.prototype.empolyee = null;
        s2c_commerce_employee_notice.cmd = 12301;
        s2c_commerce_employee_notice.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.empolyee != null && Object.hasOwnProperty.call(m, "empolyee"))
                $root.p_commerce_employee.encode(m.empolyee, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_commerce_employee_notice.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_employee_notice();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.empolyee = $root.p_commerce_employee.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_employee_notice;
    })();
    $root.s2c_commerce_new_employee_notice = (function() {
        function s2c_commerce_new_employee_notice(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_new_employee_notice.prototype.employee = null;
        s2c_commerce_new_employee_notice.cmd = 12302;
        s2c_commerce_new_employee_notice.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.employee != null && Object.hasOwnProperty.call(m, "employee"))
                $root.p_commerce_employee.encode(m.employee, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_commerce_new_employee_notice.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_new_employee_notice();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.employee = $root.p_commerce_employee.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_new_employee_notice;
    })();
    $root.c2s_commerce_building_buy_land_request = (function() {
        function c2s_commerce_building_buy_land_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_building_buy_land_request.prototype.landId = 0;
        c2s_commerce_building_buy_land_request.cmd = 12303;
        c2s_commerce_building_buy_land_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.landId);
            return w;
        };
        c2s_commerce_building_buy_land_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_building_buy_land_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.landId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("landId"))
                throw $util.ProtocolError("missing required 'landId'", { instance: m });
            return m;
        };
        return c2s_commerce_building_buy_land_request;
    })();
    $root.c2s_commerce_building_build_request = (function() {
        function c2s_commerce_building_build_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_building_build_request.prototype.landId = 0;
        c2s_commerce_building_build_request.cmd = 12304;
        c2s_commerce_building_build_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.landId);
            return w;
        };
        c2s_commerce_building_build_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_building_build_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.landId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("landId"))
                throw $util.ProtocolError("missing required 'landId'", { instance: m });
            return m;
        };
        return c2s_commerce_building_build_request;
    })();
    $root.c2s_commerce_building_add_level_request = (function() {
        function c2s_commerce_building_add_level_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_building_add_level_request.prototype.buildingId = 0;
        c2s_commerce_building_add_level_request.prototype.times = 0;
        c2s_commerce_building_add_level_request.cmd = 12305;
        c2s_commerce_building_add_level_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.buildingId);
            w.uint32(16).int32(m.times);
            return w;
        };
        c2s_commerce_building_add_level_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_building_add_level_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.buildingId = r.int32();
                    break;
                case 2:
                    m.times = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("buildingId"))
                throw $util.ProtocolError("missing required 'buildingId'", { instance: m });
            if (!m.hasOwnProperty("times"))
                throw $util.ProtocolError("missing required 'times'", { instance: m });
            return m;
        };
        return c2s_commerce_building_add_level_request;
    })();
    $root.c2s_commerce_building_add_star_request = (function() {
        function c2s_commerce_building_add_star_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_building_add_star_request.prototype.buildingId = 0;
        c2s_commerce_building_add_star_request.cmd = 12306;
        c2s_commerce_building_add_star_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.buildingId);
            return w;
        };
        c2s_commerce_building_add_star_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_building_add_star_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.buildingId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("buildingId"))
                throw $util.ProtocolError("missing required 'buildingId'", { instance: m });
            return m;
        };
        return c2s_commerce_building_add_star_request;
    })();
    $root.c2s_commerce_building_add_employee_request = (function() {
        function c2s_commerce_building_add_employee_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_building_add_employee_request.prototype.buildingId = 0;
        c2s_commerce_building_add_employee_request.prototype.employeeId = 0;
        c2s_commerce_building_add_employee_request.prototype.positionId = 0;
        c2s_commerce_building_add_employee_request.cmd = 12307;
        c2s_commerce_building_add_employee_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.buildingId);
            if (m.employeeId != null && Object.hasOwnProperty.call(m, "employeeId"))
                w.uint32(16).int32(m.employeeId);
            if (m.positionId != null && Object.hasOwnProperty.call(m, "positionId"))
                w.uint32(24).int32(m.positionId);
            return w;
        };
        c2s_commerce_building_add_employee_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_building_add_employee_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.buildingId = r.int32();
                    break;
                case 2:
                    m.employeeId = r.int32();
                    break;
                case 3:
                    m.positionId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("buildingId"))
                throw $util.ProtocolError("missing required 'buildingId'", { instance: m });
            return m;
        };
        return c2s_commerce_building_add_employee_request;
    })();
    $root.c2s_commerce_building_rm_employee_request = (function() {
        function c2s_commerce_building_rm_employee_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_building_rm_employee_request.prototype.buildingId = 0;
        c2s_commerce_building_rm_employee_request.prototype.employeeId = 0;
        c2s_commerce_building_rm_employee_request.prototype.positionId = 0;
        c2s_commerce_building_rm_employee_request.cmd = 12308;
        c2s_commerce_building_rm_employee_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.buildingId);
            if (m.employeeId != null && Object.hasOwnProperty.call(m, "employeeId"))
                w.uint32(16).int32(m.employeeId);
            if (m.positionId != null && Object.hasOwnProperty.call(m, "positionId"))
                w.uint32(24).int32(m.positionId);
            return w;
        };
        c2s_commerce_building_rm_employee_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_building_rm_employee_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.buildingId = r.int32();
                    break;
                case 2:
                    m.employeeId = r.int32();
                    break;
                case 3:
                    m.positionId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("buildingId"))
                throw $util.ProtocolError("missing required 'buildingId'", { instance: m });
            return m;
        };
        return c2s_commerce_building_rm_employee_request;
    })();
    $root.s2c_commerce_building_notice = (function() {
        function s2c_commerce_building_notice(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_building_notice.prototype.building = null;
        s2c_commerce_building_notice.cmd = 12309;
        s2c_commerce_building_notice.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.building != null && Object.hasOwnProperty.call(m, "building"))
                $root.p_commerce_building.encode(m.building, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_commerce_building_notice.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_building_notice();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.building = $root.p_commerce_building.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_building_notice;
    })();
    $root.p_commerce_task_info = (function() {
        function p_commerce_task_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_commerce_task_info.prototype.taskId = 0;
        p_commerce_task_info.prototype.isComplete = 0;
        p_commerce_task_info.prototype.isRewarded = 0;
        p_commerce_task_info.prototype.progress = 0;
        p_commerce_task_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskId != null && Object.hasOwnProperty.call(m, "taskId"))
                w.uint32(8).int32(m.taskId);
            if (m.isComplete != null && Object.hasOwnProperty.call(m, "isComplete"))
                w.uint32(16).int32(m.isComplete);
            if (m.isRewarded != null && Object.hasOwnProperty.call(m, "isRewarded"))
                w.uint32(24).int32(m.isRewarded);
            if (m.progress != null && Object.hasOwnProperty.call(m, "progress"))
                w.uint32(32).int32(m.progress);
            return w;
        };
        p_commerce_task_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_commerce_task_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                case 2:
                    m.isComplete = r.int32();
                    break;
                case 3:
                    m.isRewarded = r.int32();
                    break;
                case 4:
                    m.progress = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_commerce_task_info;
    })();
    $root.c2s_commerce_task_query_info_request = (function() {
        function c2s_commerce_task_query_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_task_query_info_request.cmd = 12310;
        c2s_commerce_task_query_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_task_query_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_task_query_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_task_query_info_request;
    })();
    $root.s2c_commerce_task_query_info_response = (function() {
        function s2c_commerce_task_query_info_response(p) {
            this.taskInfoList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_task_query_info_response.prototype.taskInfoList = $util.emptyArray;
        s2c_commerce_task_query_info_response.cmd = 12311;
        s2c_commerce_task_query_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskInfoList != null && m.taskInfoList.length) {
                for (var i = 0; i < m.taskInfoList.length; ++i)
                    $root.p_commerce_task_info.encode(m.taskInfoList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_commerce_task_query_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_task_query_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskInfoList && m.taskInfoList.length))
                        m.taskInfoList = [];
                    m.taskInfoList.push($root.p_commerce_task_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_task_query_info_response;
    })();
    $root.c2s_commerce_task_get_reward_request = (function() {
        function c2s_commerce_task_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_task_get_reward_request.prototype.taskId = 0;
        c2s_commerce_task_get_reward_request.cmd = 12312;
        c2s_commerce_task_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskId != null && Object.hasOwnProperty.call(m, "taskId"))
                w.uint32(8).int32(m.taskId);
            return w;
        };
        c2s_commerce_task_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_task_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_task_get_reward_request;
    })();
    $root.s2c_commerce_task_get_reward_response = (function() {
        function s2c_commerce_task_get_reward_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_task_get_reward_response.prototype.taskId = 0;
        s2c_commerce_task_get_reward_response.cmd = 12313;
        s2c_commerce_task_get_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskId != null && Object.hasOwnProperty.call(m, "taskId"))
                w.uint32(8).int32(m.taskId);
            return w;
        };
        s2c_commerce_task_get_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_task_get_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_task_get_reward_response;
    })();
    $root.s2c_commerce_task_info_notify = (function() {
        function s2c_commerce_task_info_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_task_info_notify.prototype.taskInfo = null;
        s2c_commerce_task_info_notify.cmd = 12314;
        s2c_commerce_task_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskInfo != null && Object.hasOwnProperty.call(m, "taskInfo"))
                $root.p_commerce_task_info.encode(m.taskInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_commerce_task_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_task_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.taskInfo = $root.p_commerce_task_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_task_info_notify;
    })();
    $root.c2s_commerce_employee_recruit_ten_request = (function() {
        function c2s_commerce_employee_recruit_ten_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_employee_recruit_ten_request.prototype.type = 0;
        c2s_commerce_employee_recruit_ten_request.cmd = 12315;
        c2s_commerce_employee_recruit_ten_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            return w;
        };
        c2s_commerce_employee_recruit_ten_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_employee_recruit_ten_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_commerce_employee_recruit_ten_request;
    })();
    $root.s2c_commerce_employee_recruit_ten_reply = (function() {
        function s2c_commerce_employee_recruit_ten_reply(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_employee_recruit_ten_reply.prototype.list = $util.emptyArray;
        s2c_commerce_employee_recruit_ten_reply.cmd = 12316;
        s2c_commerce_employee_recruit_ten_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.s2c_commerce_employee_recruit_reply.encode(m.list[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_commerce_employee_recruit_ten_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_employee_recruit_ten_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.s2c_commerce_employee_recruit_reply.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_employee_recruit_ten_reply;
    })();
    $root.s2c_commerce_employee_recruit_free_time_notice = (function() {
        function s2c_commerce_employee_recruit_free_time_notice(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_employee_recruit_free_time_notice.prototype.recruitTime = null;
        s2c_commerce_employee_recruit_free_time_notice.cmd = 12317;
        s2c_commerce_employee_recruit_free_time_notice.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.recruitTime != null && Object.hasOwnProperty.call(m, "recruitTime"))
                $root.p_commerce_employee_recruit_time.encode(m.recruitTime, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_commerce_employee_recruit_free_time_notice.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_employee_recruit_free_time_notice();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.recruitTime = $root.p_commerce_employee_recruit_time.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_employee_recruit_free_time_notice;
    })();
    $root.c2s_commerce_get_free_coin_by_ad_request = (function() {
        function c2s_commerce_get_free_coin_by_ad_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_get_free_coin_by_ad_request.cmd = 12318;
        c2s_commerce_get_free_coin_by_ad_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_get_free_coin_by_ad_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_get_free_coin_by_ad_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_get_free_coin_by_ad_request;
    })();
    $root.s2c_commerce_get_free_coin_by_ad_reply = (function() {
        function s2c_commerce_get_free_coin_by_ad_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_get_free_coin_by_ad_reply.prototype.coin = 0;
        s2c_commerce_get_free_coin_by_ad_reply.cmd = 12319;
        s2c_commerce_get_free_coin_by_ad_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.coin);
            return w;
        };
        s2c_commerce_get_free_coin_by_ad_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_get_free_coin_by_ad_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.coin = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("coin"))
                throw $util.ProtocolError("missing required 'coin'", { instance: m });
            return m;
        };
        return s2c_commerce_get_free_coin_by_ad_reply;
    })();
    $root.c2s_commerce_online_coins_request = (function() {
        function c2s_commerce_online_coins_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_online_coins_request.cmd = 12320;
        c2s_commerce_online_coins_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_online_coins_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_online_coins_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_online_coins_request;
    })();
    $root.s2c_commerce_online_coins_reply = (function() {
        function s2c_commerce_online_coins_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_online_coins_reply.prototype.intervalTime = 0;
        s2c_commerce_online_coins_reply.prototype.coins = 0;
        s2c_commerce_online_coins_reply.cmd = 12321;
        s2c_commerce_online_coins_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.intervalTime);
            w.uint32(16).int32(m.coins);
            return w;
        };
        s2c_commerce_online_coins_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_online_coins_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.intervalTime = r.int32();
                    break;
                case 2:
                    m.coins = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("intervalTime"))
                throw $util.ProtocolError("missing required 'intervalTime'", { instance: m });
            if (!m.hasOwnProperty("coins"))
                throw $util.ProtocolError("missing required 'coins'", { instance: m });
            return m;
        };
        return s2c_commerce_online_coins_reply;
    })();
    $root.c2s_commerce_online_coins_fetch_request = (function() {
        function c2s_commerce_online_coins_fetch_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_online_coins_fetch_request.cmd = 12322;
        c2s_commerce_online_coins_fetch_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_online_coins_fetch_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_online_coins_fetch_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_online_coins_fetch_request;
    })();
    $root.s2c_commerce_online_coins_fetch_reply = (function() {
        function s2c_commerce_online_coins_fetch_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_online_coins_fetch_reply.prototype.coins = 0;
        s2c_commerce_online_coins_fetch_reply.cmd = 12323;
        s2c_commerce_online_coins_fetch_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.coins);
            return w;
        };
        s2c_commerce_online_coins_fetch_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_online_coins_fetch_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.coins = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("coins"))
                throw $util.ProtocolError("missing required 'coins'", { instance: m });
            return m;
        };
        return s2c_commerce_online_coins_fetch_reply;
    })();
    $root.s2c_commerce_free_reward_car_notify = (function() {
        function s2c_commerce_free_reward_car_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_free_reward_car_notify.cmd = 12324;
        s2c_commerce_free_reward_car_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_commerce_free_reward_car_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_free_reward_car_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_commerce_free_reward_car_notify;
    })();
    $root.c2s_commerce_free_reward_car_get_request = (function() {
        function c2s_commerce_free_reward_car_get_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_commerce_free_reward_car_get_request.cmd = 12325;
        c2s_commerce_free_reward_car_get_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_commerce_free_reward_car_get_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_commerce_free_reward_car_get_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_commerce_free_reward_car_get_request;
    })();
    $root.s2c_commerce_free_reward_car_get_reply = (function() {
        function s2c_commerce_free_reward_car_get_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_commerce_free_reward_car_get_reply.prototype.itemid = 0;
        s2c_commerce_free_reward_car_get_reply.prototype.itemnum = 0;
        s2c_commerce_free_reward_car_get_reply.cmd = 12326;
        s2c_commerce_free_reward_car_get_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemid);
            w.uint32(16).int32(m.itemnum);
            return w;
        };
        s2c_commerce_free_reward_car_get_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_commerce_free_reward_car_get_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemid = r.int32();
                    break;
                case 2:
                    m.itemnum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemid"))
                throw $util.ProtocolError("missing required 'itemid'", { instance: m });
            if (!m.hasOwnProperty("itemnum"))
                throw $util.ProtocolError("missing required 'itemnum'", { instance: m });
            return m;
        };
        return s2c_commerce_free_reward_car_get_reply;
    })();
    $root.c2s_active_company_skill_request = (function() {
        function c2s_active_company_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_company_skill_request.prototype.skillid = 0;
        c2s_active_company_skill_request.cmd = 12327;
        c2s_active_company_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.skillid);
            return w;
        };
        c2s_active_company_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_company_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_company_skill_request;
    })();
    $root.s2c_active_company_skill_reply = (function() {
        function s2c_active_company_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_company_skill_reply.prototype.skillid = 0;
        s2c_active_company_skill_reply.cmd = 12328;
        s2c_active_company_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(16).int32(m.skillid);
            return w;
        };
        s2c_active_company_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_company_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 2:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_company_skill_reply;
    })();
    $root.p_beauty_info = (function() {
        function p_beauty_info(p) {
            this.gift = [];
            this.skills = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_beauty_info.prototype.id = 0;
        p_beauty_info.prototype.level = 0;
        p_beauty_info.prototype.star = 0;
        p_beauty_info.prototype.exp = 0;
        p_beauty_info.prototype.combat = 0;
        p_beauty_info.prototype.gift = $util.emptyArray;
        p_beauty_info.prototype.skills = $util.emptyArray;
        p_beauty_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.level);
            w.uint32(24).int32(m.star);
            w.uint32(32).int32(m.exp);
            w.uint32(40).int32(m.combat);
            if (m.gift != null && m.gift.length) {
                for (var i = 0; i < m.gift.length; ++i)
                    $root.p_beauty_gift.encode(m.gift[i], w.uint32(50).fork()).ldelim();
            }
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(56).int32(m.skills[i]);
            }
            return w;
        };
        p_beauty_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_beauty_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                case 4:
                    m.exp = r.int32();
                    break;
                case 5:
                    m.combat = r.int32();
                    break;
                case 6:
                    if (!(m.gift && m.gift.length))
                        m.gift = [];
                    m.gift.push($root.p_beauty_gift.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("star"))
                throw $util.ProtocolError("missing required 'star'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            return m;
        };
        return p_beauty_info;
    })();
    $root.p_beauty_gift = (function() {
        function p_beauty_gift(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_beauty_gift.prototype.giftId = 0;
        p_beauty_gift.prototype.giftValue = 0;
        p_beauty_gift.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.giftId);
            w.uint32(16).int32(m.giftValue);
            return w;
        };
        p_beauty_gift.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_beauty_gift();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.giftId = r.int32();
                    break;
                case 2:
                    m.giftValue = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("giftId"))
                throw $util.ProtocolError("missing required 'giftId'", { instance: m });
            if (!m.hasOwnProperty("giftValue"))
                throw $util.ProtocolError("missing required 'giftValue'", { instance: m });
            return m;
        };
        return p_beauty_gift;
    })();
    $root.p_beauty_doll_machine = (function() {
        function p_beauty_doll_machine(p) {
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_beauty_doll_machine.prototype.value = 0;
        p_beauty_doll_machine.prototype.num = 0;
        p_beauty_doll_machine.prototype.vipBuyNum = 0;
        p_beauty_doll_machine.prototype.rewardList = $util.emptyArray;
        p_beauty_doll_machine.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.value);
            w.uint32(16).int32(m.num);
            w.uint32(24).int32(m.vipBuyNum);
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    w.uint32(32).int32(m.rewardList[i]);
            }
            return w;
        };
        p_beauty_doll_machine.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_beauty_doll_machine();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.value = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                case 3:
                    m.vipBuyNum = r.int32();
                    break;
                case 4:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardList.push(r.int32());
                    } else
                        m.rewardList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("vipBuyNum"))
                throw $util.ProtocolError("missing required 'vipBuyNum'", { instance: m });
            return m;
        };
        return p_beauty_doll_machine;
    })();
    $root.p_beauty_energy = (function() {
        function p_beauty_energy(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_beauty_energy.prototype.num = 0;
        p_beauty_energy.prototype.vipBuyNum = 0;
        p_beauty_energy.prototype.nextAppointmentTime = 0;
        p_beauty_energy.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            w.uint32(16).int32(m.vipBuyNum);
            w.uint32(24).int32(m.nextAppointmentTime);
            return w;
        };
        p_beauty_energy.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_beauty_energy();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                case 2:
                    m.vipBuyNum = r.int32();
                    break;
                case 3:
                    m.nextAppointmentTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("vipBuyNum"))
                throw $util.ProtocolError("missing required 'vipBuyNum'", { instance: m });
            if (!m.hasOwnProperty("nextAppointmentTime"))
                throw $util.ProtocolError("missing required 'nextAppointmentTime'", { instance: m });
            return m;
        };
        return p_beauty_energy;
    })();
    $root.p_beauty_system = (function() {
        function p_beauty_system(p) {
            this.beauties = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_beauty_system.prototype.beauties = $util.emptyArray;
        p_beauty_system.prototype.carnival = null;
        p_beauty_system.prototype.energy = null;
        p_beauty_system.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.beauties != null && m.beauties.length) {
                for (var i = 0; i < m.beauties.length; ++i)
                    $root.p_beauty_info.encode(m.beauties[i], w.uint32(10).fork()).ldelim();
            }
            $root.p_beauty_doll_machine.encode(m.carnival, w.uint32(18).fork()).ldelim();
            $root.p_beauty_energy.encode(m.energy, w.uint32(26).fork()).ldelim();
            return w;
        };
        p_beauty_system.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_beauty_system();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.beauties && m.beauties.length))
                        m.beauties = [];
                    m.beauties.push($root.p_beauty_info.decode(r, r.uint32()));
                    break;
                case 2:
                    m.carnival = $root.p_beauty_doll_machine.decode(r, r.uint32());
                    break;
                case 3:
                    m.energy = $root.p_beauty_energy.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("carnival"))
                throw $util.ProtocolError("missing required 'carnival'", { instance: m });
            if (!m.hasOwnProperty("energy"))
                throw $util.ProtocolError("missing required 'energy'", { instance: m });
            return m;
        };
        return p_beauty_system;
    })();
    $root.c2s_beauty_system_info_request = (function() {
        function c2s_beauty_system_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_system_info_request.cmd = 12545;
        c2s_beauty_system_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_beauty_system_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_system_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_beauty_system_info_request;
    })();
    $root.s2c_beauty_system_info_response = (function() {
        function s2c_beauty_system_info_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_beauty_system_info_response.prototype.systemInfo = null;
        s2c_beauty_system_info_response.cmd = 12546;
        s2c_beauty_system_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_beauty_system.encode(m.systemInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_beauty_system_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_beauty_system_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.systemInfo = $root.p_beauty_system.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("systemInfo"))
                throw $util.ProtocolError("missing required 'systemInfo'", { instance: m });
            return m;
        };
        return s2c_beauty_system_info_response;
    })();
    $root.c2s_beauty_open_request = (function() {
        function c2s_beauty_open_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_open_request.prototype.beautyId = 0;
        c2s_beauty_open_request.cmd = 12547;
        c2s_beauty_open_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beautyId);
            return w;
        };
        c2s_beauty_open_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_open_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyId"))
                throw $util.ProtocolError("missing required 'beautyId'", { instance: m });
            return m;
        };
        return c2s_beauty_open_request;
    })();
    $root.s2c_beauty_open_response = (function() {
        function s2c_beauty_open_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_beauty_open_response.prototype.beautyInfo = null;
        s2c_beauty_open_response.cmd = 12548;
        s2c_beauty_open_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_beauty_info.encode(m.beautyInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_beauty_open_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_beauty_open_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyInfo = $root.p_beauty_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyInfo"))
                throw $util.ProtocolError("missing required 'beautyInfo'", { instance: m });
            return m;
        };
        return s2c_beauty_open_response;
    })();
    $root.s2c_auto_open_beauty_notify = (function() {
        function s2c_auto_open_beauty_notify(p) {
            this.beautyInfo = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_auto_open_beauty_notify.prototype.beautyInfo = $util.emptyArray;
        s2c_auto_open_beauty_notify.cmd = 12549;
        s2c_auto_open_beauty_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.beautyInfo != null && m.beautyInfo.length) {
                for (var i = 0; i < m.beautyInfo.length; ++i)
                    $root.p_beauty_info.encode(m.beautyInfo[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_auto_open_beauty_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_auto_open_beauty_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.beautyInfo && m.beautyInfo.length))
                        m.beautyInfo = [];
                    m.beautyInfo.push($root.p_beauty_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_auto_open_beauty_notify;
    })();
    $root.c2s_beauty_lv_up_request = (function() {
        function c2s_beauty_lv_up_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_lv_up_request.prototype.beautyId = 0;
        c2s_beauty_lv_up_request.prototype.itemId = 0;
        c2s_beauty_lv_up_request.cmd = 12550;
        c2s_beauty_lv_up_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beautyId);
            w.uint32(16).int32(m.itemId);
            return w;
        };
        c2s_beauty_lv_up_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_lv_up_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyId = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyId"))
                throw $util.ProtocolError("missing required 'beautyId'", { instance: m });
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            return m;
        };
        return c2s_beauty_lv_up_request;
    })();
    $root.s2c_beauty_lv_up_response = (function() {
        function s2c_beauty_lv_up_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_beauty_lv_up_response.prototype.beautyInfo = null;
        s2c_beauty_lv_up_response.cmd = 12551;
        s2c_beauty_lv_up_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_beauty_info.encode(m.beautyInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_beauty_lv_up_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_beauty_lv_up_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyInfo = $root.p_beauty_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyInfo"))
                throw $util.ProtocolError("missing required 'beautyInfo'", { instance: m });
            return m;
        };
        return s2c_beauty_lv_up_response;
    })();
    $root.c2s_beauty_star_up_request = (function() {
        function c2s_beauty_star_up_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_star_up_request.prototype.beautyId = 0;
        c2s_beauty_star_up_request.cmd = 12552;
        c2s_beauty_star_up_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beautyId);
            return w;
        };
        c2s_beauty_star_up_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_star_up_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyId"))
                throw $util.ProtocolError("missing required 'beautyId'", { instance: m });
            return m;
        };
        return c2s_beauty_star_up_request;
    })();
    $root.s2c_beauty_star_up_response = (function() {
        function s2c_beauty_star_up_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_beauty_star_up_response.prototype.beautyInfo = null;
        s2c_beauty_star_up_response.cmd = 12553;
        s2c_beauty_star_up_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_beauty_info.encode(m.beautyInfo, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_beauty_star_up_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_beauty_star_up_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyInfo = $root.p_beauty_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyInfo"))
                throw $util.ProtocolError("missing required 'beautyInfo'", { instance: m });
            return m;
        };
        return s2c_beauty_star_up_response;
    })();
    $root.c2s_beauty_catch_doll_request = (function() {
        function c2s_beauty_catch_doll_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_catch_doll_request.prototype.operator = 0;
        c2s_beauty_catch_doll_request.cmd = 12554;
        c2s_beauty_catch_doll_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.operator);
            return w;
        };
        c2s_beauty_catch_doll_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_catch_doll_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.operator = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("operator"))
                throw $util.ProtocolError("missing required 'operator'", { instance: m });
            return m;
        };
        return c2s_beauty_catch_doll_request;
    })();
    $root.s2c_beauty_catch_doll_response = (function() {
        function s2c_beauty_catch_doll_response(p) {
            this.dollId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_beauty_catch_doll_response.prototype.dollId = $util.emptyArray;
        s2c_beauty_catch_doll_response.cmd = 12555;
        s2c_beauty_catch_doll_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.dollId != null && m.dollId.length) {
                for (var i = 0; i < m.dollId.length; ++i)
                    w.uint32(8).int32(m.dollId[i]);
            }
            return w;
        };
        s2c_beauty_catch_doll_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_beauty_catch_doll_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.dollId && m.dollId.length))
                        m.dollId = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.dollId.push(r.int32());
                    } else
                        m.dollId.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_beauty_catch_doll_response;
    })();
    $root.c2s_beauty_get_excited_reward_request = (function() {
        function c2s_beauty_get_excited_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_get_excited_reward_request.prototype.rewardId = 0;
        c2s_beauty_get_excited_reward_request.cmd = 12556;
        c2s_beauty_get_excited_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rewardId);
            return w;
        };
        c2s_beauty_get_excited_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_get_excited_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rewardId"))
                throw $util.ProtocolError("missing required 'rewardId'", { instance: m });
            return m;
        };
        return c2s_beauty_get_excited_reward_request;
    })();
    $root.c2s_beauty_appointment_request = (function() {
        function c2s_beauty_appointment_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_appointment_request.prototype.beautyId = 0;
        c2s_beauty_appointment_request.cmd = 12557;
        c2s_beauty_appointment_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beautyId);
            return w;
        };
        c2s_beauty_appointment_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_appointment_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyId"))
                throw $util.ProtocolError("missing required 'beautyId'", { instance: m });
            return m;
        };
        return c2s_beauty_appointment_request;
    })();
    $root.s2c_beauty_appointment_reward_response = (function() {
        function s2c_beauty_appointment_reward_response(p) {
            this.reward = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_beauty_appointment_reward_response.prototype.reward = $util.emptyArray;
        s2c_beauty_appointment_reward_response.prototype.energy = null;
        s2c_beauty_appointment_reward_response.cmd = 12558;
        s2c_beauty_appointment_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.reward != null && m.reward.length) {
                for (var i = 0; i < m.reward.length; ++i)
                    $root.appointment_reward.encode(m.reward[i], w.uint32(10).fork()).ldelim();
            }
            $root.p_beauty_energy.encode(m.energy, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_beauty_appointment_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_beauty_appointment_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.reward && m.reward.length))
                        m.reward = [];
                    m.reward.push($root.appointment_reward.decode(r, r.uint32()));
                    break;
                case 2:
                    m.energy = $root.p_beauty_energy.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("energy"))
                throw $util.ProtocolError("missing required 'energy'", { instance: m });
            return m;
        };
        return s2c_beauty_appointment_reward_response;
    })();
    $root.appointment_reward = (function() {
        function appointment_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        appointment_reward.prototype.itemId = 0;
        appointment_reward.prototype.num = 0;
        appointment_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.num);
            return w;
        };
        appointment_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.appointment_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return appointment_reward;
    })();
    $root.c2s_beauty_buy_num_request = (function() {
        function c2s_beauty_buy_num_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_beauty_buy_num_request.prototype.select = 0;
        c2s_beauty_buy_num_request.cmd = 12559;
        c2s_beauty_buy_num_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.select);
            return w;
        };
        c2s_beauty_buy_num_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_beauty_buy_num_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.select = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("select"))
                throw $util.ProtocolError("missing required 'select'", { instance: m });
            return m;
        };
        return c2s_beauty_buy_num_request;
    })();
    $root.s2c_vip_buy_num_change_notify = (function() {
        function s2c_vip_buy_num_change_notify(p) {
            this.change = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_vip_buy_num_change_notify.prototype.change = $util.emptyArray;
        s2c_vip_buy_num_change_notify.cmd = 12560;
        s2c_vip_buy_num_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.change != null && m.change.length) {
                for (var i = 0; i < m.change.length; ++i)
                    $root.buy_num_change.encode(m.change[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_vip_buy_num_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_vip_buy_num_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.change && m.change.length))
                        m.change = [];
                    m.change.push($root.buy_num_change.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_vip_buy_num_change_notify;
    })();
    $root.buy_num_change = (function() {
        function buy_num_change(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        buy_num_change.prototype.select = 0;
        buy_num_change.prototype.num = 0;
        buy_num_change.prototype.why = 0;
        buy_num_change.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.select);
            w.uint32(16).int32(m.num);
            w.uint32(24).int32(m.why);
            return w;
        };
        buy_num_change.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.buy_num_change();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.select = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                case 3:
                    m.why = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("select"))
                throw $util.ProtocolError("missing required 'select'", { instance: m });
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("why"))
                throw $util.ProtocolError("missing required 'why'", { instance: m });
            return m;
        };
        return buy_num_change;
    })();
    $root.c2s_active_beauty_skill_request = (function() {
        function c2s_active_beauty_skill_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_active_beauty_skill_request.prototype.beautyId = 0;
        c2s_active_beauty_skill_request.prototype.skillid = 0;
        c2s_active_beauty_skill_request.cmd = 12561;
        c2s_active_beauty_skill_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beautyId);
            w.uint32(16).int32(m.skillid);
            return w;
        };
        c2s_active_beauty_skill_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_active_beauty_skill_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyId = r.int32();
                    break;
                case 2:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyId"))
                throw $util.ProtocolError("missing required 'beautyId'", { instance: m });
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return c2s_active_beauty_skill_request;
    })();
    $root.s2c_active_beauty_skill_reply = (function() {
        function s2c_active_beauty_skill_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_active_beauty_skill_reply.prototype.beautyId = 0;
        s2c_active_beauty_skill_reply.prototype.skillid = 0;
        s2c_active_beauty_skill_reply.cmd = 12562;
        s2c_active_beauty_skill_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.beautyId);
            w.uint32(16).int32(m.skillid);
            return w;
        };
        s2c_active_beauty_skill_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_active_beauty_skill_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.beautyId = r.int32();
                    break;
                case 2:
                    m.skillid = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("beautyId"))
                throw $util.ProtocolError("missing required 'beautyId'", { instance: m });
            if (!m.hasOwnProperty("skillid"))
                throw $util.ProtocolError("missing required 'skillid'", { instance: m });
            return m;
        };
        return s2c_active_beauty_skill_reply;
    })();
    $root.p_equip_smelter = (function() {
        function p_equip_smelter(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_equip_smelter.prototype.exp = 0;
        p_equip_smelter.prototype.level = 0;
        p_equip_smelter.prototype.combat = 0;
        p_equip_smelter.prototype.nextCombat = 0;
        p_equip_smelter.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.exp != null && Object.hasOwnProperty.call(m, "exp"))
                w.uint32(8).int32(m.exp);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(16).int32(m.level);
            if (m.combat != null && Object.hasOwnProperty.call(m, "combat"))
                w.uint32(24).int32(m.combat);
            if (m.nextCombat != null && Object.hasOwnProperty.call(m, "nextCombat"))
                w.uint32(32).int32(m.nextCombat);
            return w;
        };
        p_equip_smelter.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_equip_smelter();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.exp = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    m.nextCombat = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_equip_smelter;
    })();
    $root.c2s_equip_smelter_info_request = (function() {
        function c2s_equip_smelter_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_equip_smelter_info_request.cmd = 12801;
        c2s_equip_smelter_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_equip_smelter_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_equip_smelter_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_equip_smelter_info_request;
    })();
    $root.s2c_equip_smelter_info_reply = (function() {
        function s2c_equip_smelter_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_smelter_info_reply.prototype.smelter = null;
        s2c_equip_smelter_info_reply.cmd = 12802;
        s2c_equip_smelter_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_equip_smelter.encode(m.smelter, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_equip_smelter_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_smelter_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.smelter = $root.p_equip_smelter.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("smelter"))
                throw $util.ProtocolError("missing required 'smelter'", { instance: m });
            return m;
        };
        return s2c_equip_smelter_info_reply;
    })();
    $root.s2c_equip_smelter_info_change_notify = (function() {
        function s2c_equip_smelter_info_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_equip_smelter_info_change_notify.prototype.equipSmelter = null;
        s2c_equip_smelter_info_change_notify.cmd = 12803;
        s2c_equip_smelter_info_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_equip_smelter.encode(m.equipSmelter, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_equip_smelter_info_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_equip_smelter_info_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipSmelter = $root.p_equip_smelter.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("equipSmelter"))
                throw $util.ProtocolError("missing required 'equipSmelter'", { instance: m });
            return m;
        };
        return s2c_equip_smelter_info_change_notify;
    })();
    $root.p_squire_member_info = (function() {
        function p_squire_member_info(p) {
            this.skills = [];
            this.equips = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_squire_member_info.prototype.id = 0;
        p_squire_member_info.prototype.level = 0;
        p_squire_member_info.prototype.grade = 0;
        p_squire_member_info.prototype.exp = 0;
        p_squire_member_info.prototype.combat = 0;
        p_squire_member_info.prototype.skills = $util.emptyArray;
        p_squire_member_info.prototype.equips = $util.emptyArray;
        p_squire_member_info.prototype.isActivating = 0;
        p_squire_member_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.level);
            w.uint32(24).int32(m.grade);
            w.uint32(32).int32(m.exp);
            w.uint32(40).int32(m.combat);
            if (m.skills != null && m.skills.length) {
                for (var i = 0; i < m.skills.length; ++i)
                    w.uint32(48).int32(m.skills[i]);
            }
            if (m.equips != null && m.equips.length) {
                for (var i = 0; i < m.equips.length; ++i)
                    $root.p_squire_equip.encode(m.equips[i], w.uint32(58).fork()).ldelim();
            }
            w.uint32(64).int32(m.isActivating);
            return w;
        };
        p_squire_member_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_squire_member_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                case 3:
                    m.grade = r.int32();
                    break;
                case 4:
                    m.exp = r.int32();
                    break;
                case 5:
                    m.combat = r.int32();
                    break;
                case 6:
                    if (!(m.skills && m.skills.length))
                        m.skills = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skills.push(r.int32());
                    } else
                        m.skills.push(r.int32());
                    break;
                case 7:
                    if (!(m.equips && m.equips.length))
                        m.equips = [];
                    m.equips.push($root.p_squire_equip.decode(r, r.uint32()));
                    break;
                case 8:
                    m.isActivating = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("level"))
                throw $util.ProtocolError("missing required 'level'", { instance: m });
            if (!m.hasOwnProperty("grade"))
                throw $util.ProtocolError("missing required 'grade'", { instance: m });
            if (!m.hasOwnProperty("exp"))
                throw $util.ProtocolError("missing required 'exp'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("isActivating"))
                throw $util.ProtocolError("missing required 'isActivating'", { instance: m });
            return m;
        };
        return p_squire_member_info;
    })();
    $root.c2s_squire_info_request = (function() {
        function c2s_squire_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_squire_info_request.cmd = 13057;
        c2s_squire_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_squire_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_squire_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_squire_info_request;
    })();
    $root.s2c_squire_info_response = (function() {
        function s2c_squire_info_response(p) {
            this.members = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_squire_info_response.prototype.members = $util.emptyArray;
        s2c_squire_info_response.cmd = 13058;
        s2c_squire_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.members != null && m.members.length) {
                for (var i = 0; i < m.members.length; ++i)
                    $root.p_squire_member_info.encode(m.members[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_squire_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_squire_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.members && m.members.length))
                        m.members = [];
                    m.members.push($root.p_squire_member_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_squire_info_response;
    })();
    $root.c2s_squire_member_open_request = (function() {
        function c2s_squire_member_open_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_squire_member_open_request.prototype.memberId = 0;
        c2s_squire_member_open_request.cmd = 13059;
        c2s_squire_member_open_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.memberId);
            return w;
        };
        c2s_squire_member_open_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_squire_member_open_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.memberId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            return m;
        };
        return c2s_squire_member_open_request;
    })();
    $root.s2c_squire_member_open_respose = (function() {
        function s2c_squire_member_open_respose(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_squire_member_open_respose.prototype.member = null;
        s2c_squire_member_open_respose.cmd = 13060;
        s2c_squire_member_open_respose.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_squire_member_info.encode(m.member, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_squire_member_open_respose.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_squire_member_open_respose();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.member = $root.p_squire_member_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("member"))
                throw $util.ProtocolError("missing required 'member'", { instance: m });
            return m;
        };
        return s2c_squire_member_open_respose;
    })();
    $root.c2s_member_lv_up_request = (function() {
        function c2s_member_lv_up_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_member_lv_up_request.prototype.itemId = 0;
        c2s_member_lv_up_request.prototype.memberId = 0;
        c2s_member_lv_up_request.cmd = 13061;
        c2s_member_lv_up_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.itemId);
            w.uint32(16).int32(m.memberId);
            return w;
        };
        c2s_member_lv_up_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_member_lv_up_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.memberId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("itemId"))
                throw $util.ProtocolError("missing required 'itemId'", { instance: m });
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            return m;
        };
        return c2s_member_lv_up_request;
    })();
    $root.c2s_member_grade_up_request = (function() {
        function c2s_member_grade_up_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_member_grade_up_request.prototype.memberId = 0;
        c2s_member_grade_up_request.cmd = 13062;
        c2s_member_grade_up_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.memberId);
            return w;
        };
        c2s_member_grade_up_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_member_grade_up_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.memberId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            return m;
        };
        return c2s_member_grade_up_request;
    })();
    $root.c2s_member_equip_operating_request = (function() {
        function c2s_member_equip_operating_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_member_equip_operating_request.prototype.memberId = 0;
        c2s_member_equip_operating_request.prototype.operating = 0;
        c2s_member_equip_operating_request.prototype.uniqId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        c2s_member_equip_operating_request.cmd = 13063;
        c2s_member_equip_operating_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.memberId);
            w.uint32(16).int32(m.operating);
            w.uint32(24).int64(m.uniqId);
            return w;
        };
        c2s_member_equip_operating_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_member_equip_operating_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.memberId = r.int32();
                    break;
                case 2:
                    m.operating = r.int32();
                    break;
                case 3:
                    m.uniqId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("memberId"))
                throw $util.ProtocolError("missing required 'memberId'", { instance: m });
            if (!m.hasOwnProperty("operating"))
                throw $util.ProtocolError("missing required 'operating'", { instance: m });
            if (!m.hasOwnProperty("uniqId"))
                throw $util.ProtocolError("missing required 'uniqId'", { instance: m });
            return m;
        };
        return c2s_member_equip_operating_request;
    })();
    $root.s2c_member_change_response = (function() {
        function s2c_member_change_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_member_change_response.prototype.member = null;
        s2c_member_change_response.prototype.addExp = 0;
        s2c_member_change_response.cmd = 13064;
        s2c_member_change_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_squire_member_info.encode(m.member, w.uint32(10).fork()).ldelim();
            if (m.addExp != null && Object.hasOwnProperty.call(m, "addExp"))
                w.uint32(16).int32(m.addExp);
            return w;
        };
        s2c_member_change_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_member_change_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.member = $root.p_squire_member_info.decode(r, r.uint32());
                    break;
                case 2:
                    m.addExp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("member"))
                throw $util.ProtocolError("missing required 'member'", { instance: m });
            return m;
        };
        return s2c_member_change_response;
    })();
    $root.s2c_member_open_notify = (function() {
        function s2c_member_open_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_member_open_notify.prototype.member = null;
        s2c_member_open_notify.cmd = 13065;
        s2c_member_open_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_squire_member_info.encode(m.member, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_member_open_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_member_open_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.member = $root.p_squire_member_info.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("member"))
                throw $util.ProtocolError("missing required 'member'", { instance: m });
            return m;
        };
        return s2c_member_open_notify;
    })();
    $root.c2s_grow_road_date_request = (function() {
        function c2s_grow_road_date_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_grow_road_date_request.cmd = 13313;
        c2s_grow_road_date_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_grow_road_date_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_grow_road_date_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_grow_road_date_request;
    })();
    $root.s2c_grow_road_date_response = (function() {
        function s2c_grow_road_date_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_grow_road_date_response.prototype.day = 0;
        s2c_grow_road_date_response.prototype.growRoad = null;
        s2c_grow_road_date_response.cmd = 13314;
        s2c_grow_road_date_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.day);
            if (m.growRoad != null && Object.hasOwnProperty.call(m, "growRoad"))
                $root.p_grow_road_struct.encode(m.growRoad, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_grow_road_date_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_grow_road_date_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.day = r.int32();
                    break;
                case 2:
                    m.growRoad = $root.p_grow_road_struct.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("day"))
                throw $util.ProtocolError("missing required 'day'", { instance: m });
            return m;
        };
        return s2c_grow_road_date_response;
    })();
    $root.p_grow_road_struct = (function() {
        function p_grow_road_struct(p) {
            this.eventList = [];
            this.pointsRewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_grow_road_struct.prototype.score = 0;
        p_grow_road_struct.prototype.eventList = $util.emptyArray;
        p_grow_road_struct.prototype.pointsRewardList = $util.emptyArray;
        p_grow_road_struct.prototype.deadline = 0;
        p_grow_road_struct.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.score);
            if (m.eventList != null && m.eventList.length) {
                for (var i = 0; i < m.eventList.length; ++i)
                    $root.p_grow_road_target_struct.encode(m.eventList[i], w.uint32(18).fork()).ldelim();
            }
            if (m.pointsRewardList != null && m.pointsRewardList.length) {
                for (var i = 0; i < m.pointsRewardList.length; ++i)
                    w.uint32(24).int32(m.pointsRewardList[i]);
            }
            if (m.deadline != null && Object.hasOwnProperty.call(m, "deadline"))
                w.uint32(32).int32(m.deadline);
            return w;
        };
        p_grow_road_struct.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_grow_road_struct();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.score = r.int32();
                    break;
                case 2:
                    if (!(m.eventList && m.eventList.length))
                        m.eventList = [];
                    m.eventList.push($root.p_grow_road_target_struct.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.pointsRewardList && m.pointsRewardList.length))
                        m.pointsRewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.pointsRewardList.push(r.int32());
                    } else
                        m.pointsRewardList.push(r.int32());
                    break;
                case 4:
                    m.deadline = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("score"))
                throw $util.ProtocolError("missing required 'score'", { instance: m });
            return m;
        };
        return p_grow_road_struct;
    })();
    $root.p_grow_road_target_struct = (function() {
        function p_grow_road_target_struct(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_grow_road_target_struct.prototype.id = 0;
        p_grow_road_target_struct.prototype.schedule = 0;
        p_grow_road_target_struct.prototype.target = 0;
        p_grow_road_target_struct.prototype.type = 0;
        p_grow_road_target_struct.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.schedule);
            if (m.target != null && Object.hasOwnProperty.call(m, "target"))
                w.uint32(24).int32(m.target);
            w.uint32(32).int32(m.type);
            return w;
        };
        p_grow_road_target_struct.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_grow_road_target_struct();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.schedule = r.int32();
                    break;
                case 3:
                    m.target = r.int32();
                    break;
                case 4:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("schedule"))
                throw $util.ProtocolError("missing required 'schedule'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return p_grow_road_target_struct;
    })();
    $root.s2c_grow_road_update_notify = (function() {
        function s2c_grow_road_update_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_grow_road_update_notify.prototype.eventList = null;
        s2c_grow_road_update_notify.cmd = 13315;
        s2c_grow_road_update_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_grow_road_struct.encode(m.eventList, w.uint32(10).fork()).ldelim();
            return w;
        };
        s2c_grow_road_update_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_grow_road_update_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.eventList = $root.p_grow_road_struct.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("eventList"))
                throw $util.ProtocolError("missing required 'eventList'", { instance: m });
            return m;
        };
        return s2c_grow_road_update_notify;
    })();
    $root.c2s_grow_road_get_reward_request = (function() {
        function c2s_grow_road_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_grow_road_get_reward_request.prototype.type = 0;
        c2s_grow_road_get_reward_request.prototype.id = 0;
        c2s_grow_road_get_reward_request.cmd = 13316;
        c2s_grow_road_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.type);
            w.uint32(16).int32(m.id);
            return w;
        };
        c2s_grow_road_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_grow_road_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_grow_road_get_reward_request;
    })();
    $root.c2s_query_open_activity_request = (function() {
        function c2s_query_open_activity_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_open_activity_request.cmd = 13569;
        c2s_query_open_activity_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_open_activity_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_open_activity_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_open_activity_request;
    })();
    $root.s2c_query_open_activity_response = (function() {
        function s2c_query_open_activity_response(p) {
            this.activityList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_open_activity_response.prototype.activityList = $util.emptyArray;
        s2c_query_open_activity_response.cmd = 13570;
        s2c_query_open_activity_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityList != null && m.activityList.length) {
                for (var i = 0; i < m.activityList.length; ++i)
                    $root.p_activity.encode(m.activityList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_query_open_activity_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_open_activity_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activityList && m.activityList.length))
                        m.activityList = [];
                    m.activityList.push($root.p_activity.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_query_open_activity_response;
    })();
    $root.p_activity = (function() {
        function p_activity(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity.prototype.activityId = 0;
        p_activity.prototype.endTime = 0;
        p_activity.prototype.openTime = 0;
        p_activity.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.openTime);
            w.uint32(24).int32(m.endTime);
            return w;
        };
        p_activity.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 3:
                    m.endTime = r.int32();
                    break;
                case 2:
                    m.openTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            if (!m.hasOwnProperty("openTime"))
                throw $util.ProtocolError("missing required 'openTime'", { instance: m });
            return m;
        };
        return p_activity;
    })();
    $root.c2s_query_activity_detail_request = (function() {
        function c2s_query_activity_detail_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_activity_detail_request.prototype.activityId = 0;
        c2s_query_activity_detail_request.cmd = 13571;
        c2s_query_activity_detail_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            return w;
        };
        c2s_query_activity_detail_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_activity_detail_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            return m;
        };
        return c2s_query_activity_detail_request;
    })();
    $root.s2c_exchange_activity_response = (function() {
        function s2c_exchange_activity_response(p) {
            this.lastExchange = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_exchange_activity_response.prototype.lastExchange = $util.emptyArray;
        s2c_exchange_activity_response.cmd = 13572;
        s2c_exchange_activity_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.lastExchange != null && m.lastExchange.length) {
                for (var i = 0; i < m.lastExchange.length; ++i)
                    $root.p_activity_kv.encode(m.lastExchange[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_exchange_activity_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_exchange_activity_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.lastExchange && m.lastExchange.length))
                        m.lastExchange = [];
                    m.lastExchange.push($root.p_activity_kv.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_exchange_activity_response;
    })();
    $root.s2c_sort_gang_response = (function() {
        function s2c_sort_gang_response(p) {
            this.activityList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_sort_gang_response.prototype.activityList = $util.emptyArray;
        s2c_sort_gang_response.cmd = 13573;
        s2c_sort_gang_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityList != null && m.activityList.length) {
                for (var i = 0; i < m.activityList.length; ++i)
                    $root.p_sort_gang.encode(m.activityList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_sort_gang_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_sort_gang_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activityList && m.activityList.length))
                        m.activityList = [];
                    m.activityList.push($root.p_sort_gang.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_sort_gang_response;
    })();
    $root.p_sort_gang = (function() {
        function p_sort_gang(p) {
            this.memberList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_sort_gang.prototype.gangName = "";
        p_sort_gang.prototype.rank = 0;
        p_sort_gang.prototype.memberList = $util.emptyArray;
        p_sort_gang.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(10).string(m.gangName);
            w.uint32(16).int32(m.rank);
            if (m.memberList != null && m.memberList.length) {
                for (var i = 0; i < m.memberList.length; ++i)
                    $root.p_sort_member.encode(m.memberList[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        p_sort_gang.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_sort_gang();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.gangName = r.string();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    if (!(m.memberList && m.memberList.length))
                        m.memberList = [];
                    m.memberList.push($root.p_sort_member.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("gangName"))
                throw $util.ProtocolError("missing required 'gangName'", { instance: m });
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            return m;
        };
        return p_sort_gang;
    })();
    $root.p_sort_member = (function() {
        function p_sort_member(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_sort_member.prototype.rank = 0;
        p_sort_member.prototype.name = "";
        p_sort_member.prototype.combat = 0;
        p_sort_member.prototype.title = 0;
        p_sort_member.prototype.head = 0;
        p_sort_member.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            w.uint32(18).string(m.name);
            w.uint32(24).int32(m.combat);
            w.uint32(32).int32(m.title);
            w.uint32(40).int32(m.head);
            return w;
        };
        p_sort_member.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_sort_member();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.combat = r.int32();
                    break;
                case 4:
                    m.title = r.int32();
                    break;
                case 5:
                    m.head = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            if (!m.hasOwnProperty("name"))
                throw $util.ProtocolError("missing required 'name'", { instance: m });
            if (!m.hasOwnProperty("combat"))
                throw $util.ProtocolError("missing required 'combat'", { instance: m });
            if (!m.hasOwnProperty("title"))
                throw $util.ProtocolError("missing required 'title'", { instance: m });
            if (!m.hasOwnProperty("head"))
                throw $util.ProtocolError("missing required 'head'", { instance: m });
            return m;
        };
        return p_sort_member;
    })();
    $root.p_activity_kv = (function() {
        function p_activity_kv(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_activity_kv.prototype.key = 0;
        p_activity_kv.prototype.value = 0;
        p_activity_kv.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.key);
            w.uint32(16).int32(m.value);
            return w;
        };
        p_activity_kv.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_activity_kv();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.int32();
                    break;
                case 2:
                    m.value = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("key"))
                throw $util.ProtocolError("missing required 'key'", { instance: m });
            if (!m.hasOwnProperty("value"))
                throw $util.ProtocolError("missing required 'value'", { instance: m });
            return m;
        };
        return p_activity_kv;
    })();
    $root.c2s_get_reward_request = (function() {
        function c2s_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_get_reward_request.prototype.activityId = 0;
        c2s_get_reward_request.prototype.rewardId = 0;
        c2s_get_reward_request.cmd = 13574;
        c2s_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            w.uint32(16).int32(m.rewardId);
            return w;
        };
        c2s_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            if (!m.hasOwnProperty("rewardId"))
                throw $util.ProtocolError("missing required 'rewardId'", { instance: m });
            return m;
        };
        return c2s_get_reward_request;
    })();
    $root.s2c_get_reward_response = (function() {
        function s2c_get_reward_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_get_reward_response.prototype.activityId = 0;
        s2c_get_reward_response.prototype.wordExchangeLast = null;
        s2c_get_reward_response.cmd = 13575;
        s2c_get_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.activityId);
            if (m.wordExchangeLast != null && Object.hasOwnProperty.call(m, "wordExchangeLast"))
                $root.p_activity_kv.encode(m.wordExchangeLast, w.uint32(18).fork()).ldelim();
            return w;
        };
        s2c_get_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_get_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.wordExchangeLast = $root.p_activity_kv.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("activityId"))
                throw $util.ProtocolError("missing required 'activityId'", { instance: m });
            return m;
        };
        return s2c_get_reward_response;
    })();
    $root.s2c_can_wear_title_notify = (function() {
        function s2c_can_wear_title_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_can_wear_title_notify.prototype.rank = 0;
        s2c_can_wear_title_notify.cmd = 13576;
        s2c_can_wear_title_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rank);
            return w;
        };
        s2c_can_wear_title_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_can_wear_title_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rank = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rank"))
                throw $util.ProtocolError("missing required 'rank'", { instance: m });
            return m;
        };
        return s2c_can_wear_title_notify;
    })();
    $root.s2c_open_service_activity_lottery_response = (function() {
        function s2c_open_service_activity_lottery_response(p) {
            this.remainDropList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_service_activity_lottery_response.prototype.point = 0;
        s2c_open_service_activity_lottery_response.prototype.currentDropId = 0;
        s2c_open_service_activity_lottery_response.prototype.remainDropList = $util.emptyArray;
        s2c_open_service_activity_lottery_response.cmd = 13577;
        s2c_open_service_activity_lottery_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.point != null && Object.hasOwnProperty.call(m, "point"))
                w.uint32(8).int32(m.point);
            if (m.currentDropId != null && Object.hasOwnProperty.call(m, "currentDropId"))
                w.uint32(16).int32(m.currentDropId);
            if (m.remainDropList != null && m.remainDropList.length) {
                for (var i = 0; i < m.remainDropList.length; ++i)
                    $root.p_kv_pair.encode(m.remainDropList[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_open_service_activity_lottery_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_service_activity_lottery_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.point = r.int32();
                    break;
                case 2:
                    m.currentDropId = r.int32();
                    break;
                case 3:
                    if (!(m.remainDropList && m.remainDropList.length))
                        m.remainDropList = [];
                    m.remainDropList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_service_activity_lottery_response;
    })();
    $root.c2s_open_service_activity_lottery_play_request = (function() {
        function c2s_open_service_activity_lottery_play_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_open_service_activity_lottery_play_request.cmd = 13578;
        c2s_open_service_activity_lottery_play_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_open_service_activity_lottery_play_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_open_service_activity_lottery_play_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_open_service_activity_lottery_play_request;
    })();
    $root.s2c_open_service_activity_lottery_play_response = (function() {
        function s2c_open_service_activity_lottery_play_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_service_activity_lottery_play_response.prototype.itemId = 0;
        s2c_open_service_activity_lottery_play_response.prototype.num = 0;
        s2c_open_service_activity_lottery_play_response.cmd = 13579;
        s2c_open_service_activity_lottery_play_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(8).int32(m.itemId);
            if (m.num != null && Object.hasOwnProperty.call(m, "num"))
                w.uint32(16).int32(m.num);
            return w;
        };
        s2c_open_service_activity_lottery_play_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_service_activity_lottery_play_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_service_activity_lottery_play_response;
    })();
    $root.s2c_open_service_open_server_charge_response = (function() {
        function s2c_open_service_open_server_charge_response(p) {
            this.rewardedList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_service_open_server_charge_response.prototype.point = 0;
        s2c_open_service_open_server_charge_response.prototype.rewardedList = $util.emptyArray;
        s2c_open_service_open_server_charge_response.cmd = 13580;
        s2c_open_service_open_server_charge_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.point != null && Object.hasOwnProperty.call(m, "point"))
                w.uint32(8).int32(m.point);
            if (m.rewardedList != null && m.rewardedList.length) {
                for (var i = 0; i < m.rewardedList.length; ++i)
                    w.uint32(16).int32(m.rewardedList[i]);
            }
            return w;
        };
        s2c_open_service_open_server_charge_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_service_open_server_charge_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.point = r.int32();
                    break;
                case 2:
                    if (!(m.rewardedList && m.rewardedList.length))
                        m.rewardedList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardedList.push(r.int32());
                    } else
                        m.rewardedList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_service_open_server_charge_response;
    })();
    $root.c2s_open_service_open_server_charge_get_reward_request = (function() {
        function c2s_open_service_open_server_charge_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_open_service_open_server_charge_get_reward_request.prototype.rewardId = 0;
        c2s_open_service_open_server_charge_get_reward_request.cmd = 13581;
        c2s_open_service_open_server_charge_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardId != null && Object.hasOwnProperty.call(m, "rewardId"))
                w.uint32(8).int32(m.rewardId);
            return w;
        };
        c2s_open_service_open_server_charge_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_open_service_open_server_charge_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_open_service_open_server_charge_get_reward_request;
    })();
    $root.s2c_open_service_open_server_charge_get_reward_response = (function() {
        function s2c_open_service_open_server_charge_get_reward_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_service_open_server_charge_get_reward_response.prototype.rewardId = 0;
        s2c_open_service_open_server_charge_get_reward_response.cmd = 13582;
        s2c_open_service_open_server_charge_get_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardId != null && Object.hasOwnProperty.call(m, "rewardId"))
                w.uint32(8).int32(m.rewardId);
            return w;
        };
        s2c_open_service_open_server_charge_get_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_service_open_server_charge_get_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_service_open_server_charge_get_reward_response;
    })();
    $root.c2s_daily_charge_request = (function() {
        function c2s_daily_charge_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_charge_request.cmd = 13825;
        c2s_daily_charge_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_daily_charge_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_charge_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_daily_charge_request;
    })();
    $root.s2c_daily_charge_response = (function() {
        function s2c_daily_charge_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_daily_charge_response.prototype.isGetFirstChargeReward = 0;
        s2c_daily_charge_response.prototype.isFirstChargeOnThisDay = 0;
        s2c_daily_charge_response.cmd = 13826;
        s2c_daily_charge_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.isGetFirstChargeReward);
            w.uint32(16).int32(m.isFirstChargeOnThisDay);
            return w;
        };
        s2c_daily_charge_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_daily_charge_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isGetFirstChargeReward = r.int32();
                    break;
                case 2:
                    m.isFirstChargeOnThisDay = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("isGetFirstChargeReward"))
                throw $util.ProtocolError("missing required 'isGetFirstChargeReward'", { instance: m });
            if (!m.hasOwnProperty("isFirstChargeOnThisDay"))
                throw $util.ProtocolError("missing required 'isFirstChargeOnThisDay'", { instance: m });
            return m;
        };
        return s2c_daily_charge_response;
    })();
    $root.c2s_daily_charge_get_daily_charge_info_request = (function() {
        function c2s_daily_charge_get_daily_charge_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_charge_get_daily_charge_info_request.cmd = 13827;
        c2s_daily_charge_get_daily_charge_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_daily_charge_get_daily_charge_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_charge_get_daily_charge_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_daily_charge_get_daily_charge_info_request;
    })();
    $root.s2c_daily_charge_get_daily_charge_info_response = (function() {
        function s2c_daily_charge_get_daily_charge_info_response(p) {
            this.roleCharge = [];
            this.roleChargeHistory = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_daily_charge_get_daily_charge_info_response.prototype.roleCharge = $util.emptyArray;
        s2c_daily_charge_get_daily_charge_info_response.prototype.roleChargeHistory = $util.emptyArray;
        s2c_daily_charge_get_daily_charge_info_response.prototype.chargeNum = 0;
        s2c_daily_charge_get_daily_charge_info_response.cmd = 13828;
        s2c_daily_charge_get_daily_charge_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleCharge != null && m.roleCharge.length) {
                for (var i = 0; i < m.roleCharge.length; ++i)
                    $root.p_daily_role_charge.encode(m.roleCharge[i], w.uint32(10).fork()).ldelim();
            }
            if (m.roleChargeHistory != null && m.roleChargeHistory.length) {
                for (var i = 0; i < m.roleChargeHistory.length; ++i)
                    $root.p_daily_charge.encode(m.roleChargeHistory[i], w.uint32(18).fork()).ldelim();
            }
            w.uint32(24).int32(m.chargeNum);
            return w;
        };
        s2c_daily_charge_get_daily_charge_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_daily_charge_get_daily_charge_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleCharge && m.roleCharge.length))
                        m.roleCharge = [];
                    m.roleCharge.push($root.p_daily_role_charge.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.roleChargeHistory && m.roleChargeHistory.length))
                        m.roleChargeHistory = [];
                    m.roleChargeHistory.push($root.p_daily_charge.decode(r, r.uint32()));
                    break;
                case 3:
                    m.chargeNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("chargeNum"))
                throw $util.ProtocolError("missing required 'chargeNum'", { instance: m });
            return m;
        };
        return s2c_daily_charge_get_daily_charge_info_response;
    })();
    $root.p_daily_role_charge = (function() {
        function p_daily_role_charge(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_daily_role_charge.prototype.charge = 0;
        p_daily_role_charge.prototype.isGetReward = 0;
        p_daily_role_charge.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.charge);
            w.uint32(16).int32(m.isGetReward);
            return w;
        };
        p_daily_role_charge.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_daily_role_charge();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.charge = r.int32();
                    break;
                case 2:
                    m.isGetReward = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("charge"))
                throw $util.ProtocolError("missing required 'charge'", { instance: m });
            if (!m.hasOwnProperty("isGetReward"))
                throw $util.ProtocolError("missing required 'isGetReward'", { instance: m });
            return m;
        };
        return p_daily_role_charge;
    })();
    $root.p_daily_charge = (function() {
        function p_daily_charge(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_daily_charge.prototype.charge = 0;
        p_daily_charge.prototype.day = 0;
        p_daily_charge.prototype.canGetReward = 0;
        p_daily_charge.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.charge);
            w.uint32(16).int32(m.day);
            w.uint32(24).int32(m.canGetReward);
            return w;
        };
        p_daily_charge.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_daily_charge();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.charge = r.int32();
                    break;
                case 2:
                    m.day = r.int32();
                    break;
                case 3:
                    m.canGetReward = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("charge"))
                throw $util.ProtocolError("missing required 'charge'", { instance: m });
            if (!m.hasOwnProperty("day"))
                throw $util.ProtocolError("missing required 'day'", { instance: m });
            if (!m.hasOwnProperty("canGetReward"))
                throw $util.ProtocolError("missing required 'canGetReward'", { instance: m });
            return m;
        };
        return p_daily_charge;
    })();
    $root.c2s_daily_charge_get_reward_request = (function() {
        function c2s_daily_charge_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_charge_get_reward_request.prototype.rewardType = 0;
        c2s_daily_charge_get_reward_request.prototype.rewardId = 0;
        c2s_daily_charge_get_reward_request.cmd = 13829;
        c2s_daily_charge_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.rewardType);
            w.uint32(16).int32(m.rewardId);
            return w;
        };
        c2s_daily_charge_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_charge_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardType = r.int32();
                    break;
                case 2:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("rewardType"))
                throw $util.ProtocolError("missing required 'rewardType'", { instance: m });
            if (!m.hasOwnProperty("rewardId"))
                throw $util.ProtocolError("missing required 'rewardId'", { instance: m });
            return m;
        };
        return c2s_daily_charge_get_reward_request;
    })();
    $root.c2s_open_function_query_reward_request = (function() {
        function c2s_open_function_query_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_open_function_query_reward_request.cmd = 14081;
        c2s_open_function_query_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_open_function_query_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_open_function_query_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_open_function_query_reward_request;
    })();
    $root.s2c_open_function_query_reward_response = (function() {
        function s2c_open_function_query_reward_response(p) {
            this.idList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_function_query_reward_response.prototype.idList = $util.emptyArray;
        s2c_open_function_query_reward_response.cmd = 14082;
        s2c_open_function_query_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.idList != null && m.idList.length) {
                for (var i = 0; i < m.idList.length; ++i)
                    w.uint32(8).int32(m.idList[i]);
            }
            return w;
        };
        s2c_open_function_query_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_function_query_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.idList && m.idList.length))
                        m.idList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.idList.push(r.int32());
                    } else
                        m.idList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_function_query_reward_response;
    })();
    $root.c2s_open_function_get_rewared_request = (function() {
        function c2s_open_function_get_rewared_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_open_function_get_rewared_request.prototype.id = 0;
        c2s_open_function_get_rewared_request.cmd = 14083;
        c2s_open_function_get_rewared_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            return w;
        };
        c2s_open_function_get_rewared_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_open_function_get_rewared_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            return m;
        };
        return c2s_open_function_get_rewared_request;
    })();
    $root.s2c_open_function_get_rewared_response = (function() {
        function s2c_open_function_get_rewared_response(p) {
            this.idList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_open_function_get_rewared_response.prototype.idList = $util.emptyArray;
        s2c_open_function_get_rewared_response.cmd = 14084;
        s2c_open_function_get_rewared_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.idList != null && m.idList.length) {
                for (var i = 0; i < m.idList.length; ++i)
                    w.uint32(8).int32(m.idList[i]);
            }
            return w;
        };
        s2c_open_function_get_rewared_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_open_function_get_rewared_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.idList && m.idList.length))
                        m.idList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.idList.push(r.int32());
                    } else
                        m.idList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_open_function_get_rewared_response;
    })();
    $root.p_dungeon_reward = (function() {
        function p_dungeon_reward(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_dungeon_reward.prototype.id = 0;
        p_dungeon_reward.prototype.type = 0;
        p_dungeon_reward.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.type);
            return w;
        };
        p_dungeon_reward.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_dungeon_reward();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return p_dungeon_reward;
    })();
    $root.p_schedule = (function() {
        function p_schedule(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_schedule.prototype.chapterId = 0;
        p_schedule.prototype.levelId = 0;
        p_schedule.prototype.starId = 0;
        p_schedule.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.chapterId);
            w.uint32(16).int32(m.levelId);
            w.uint32(24).int32(m.starId);
            return w;
        };
        p_schedule.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_schedule();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.chapterId = r.int32();
                    break;
                case 2:
                    m.levelId = r.int32();
                    break;
                case 3:
                    m.starId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("chapterId"))
                throw $util.ProtocolError("missing required 'chapterId'", { instance: m });
            if (!m.hasOwnProperty("levelId"))
                throw $util.ProtocolError("missing required 'levelId'", { instance: m });
            if (!m.hasOwnProperty("starId"))
                throw $util.ProtocolError("missing required 'starId'", { instance: m });
            return m;
        };
        return p_schedule;
    })();
    $root.c2s_dungeon_query_info_request = (function() {
        function c2s_dungeon_query_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dungeon_query_info_request.cmd = 14337;
        c2s_dungeon_query_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_dungeon_query_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dungeon_query_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_dungeon_query_info_request;
    })();
    $root.s2c_dungeon_query_info_response = (function() {
        function s2c_dungeon_query_info_response(p) {
            this.rewardList = [];
            this.strengthList = [];
            this.scheduleList = [];
            this.chapterStarList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dungeon_query_info_response.prototype.max = null;
        s2c_dungeon_query_info_response.prototype.strength = 0;
        s2c_dungeon_query_info_response.prototype.buyStrengthNum = 0;
        s2c_dungeon_query_info_response.prototype.rewardList = $util.emptyArray;
        s2c_dungeon_query_info_response.prototype.strengthList = $util.emptyArray;
        s2c_dungeon_query_info_response.prototype.scheduleList = $util.emptyArray;
        s2c_dungeon_query_info_response.prototype.chapterStarList = $util.emptyArray;
        s2c_dungeon_query_info_response.cmd = 14338;
        s2c_dungeon_query_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_kv_pair.encode(m.max, w.uint32(10).fork()).ldelim();
            w.uint32(16).int32(m.strength);
            w.uint32(24).int32(m.buyStrengthNum);
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    $root.p_dungeon_reward.encode(m.rewardList[i], w.uint32(34).fork()).ldelim();
            }
            if (m.strengthList != null && m.strengthList.length) {
                for (var i = 0; i < m.strengthList.length; ++i)
                    $root.p_kv_pair.encode(m.strengthList[i], w.uint32(42).fork()).ldelim();
            }
            if (m.scheduleList != null && m.scheduleList.length) {
                for (var i = 0; i < m.scheduleList.length; ++i)
                    $root.p_schedule.encode(m.scheduleList[i], w.uint32(50).fork()).ldelim();
            }
            if (m.chapterStarList != null && m.chapterStarList.length) {
                for (var i = 0; i < m.chapterStarList.length; ++i)
                    $root.p_kv_pair.encode(m.chapterStarList[i], w.uint32(58).fork()).ldelim();
            }
            return w;
        };
        s2c_dungeon_query_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dungeon_query_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.max = $root.p_kv_pair.decode(r, r.uint32());
                    break;
                case 2:
                    m.strength = r.int32();
                    break;
                case 3:
                    m.buyStrengthNum = r.int32();
                    break;
                case 4:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    m.rewardList.push($root.p_dungeon_reward.decode(r, r.uint32()));
                    break;
                case 5:
                    if (!(m.strengthList && m.strengthList.length))
                        m.strengthList = [];
                    m.strengthList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 6:
                    if (!(m.scheduleList && m.scheduleList.length))
                        m.scheduleList = [];
                    m.scheduleList.push($root.p_schedule.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.chapterStarList && m.chapterStarList.length))
                        m.chapterStarList = [];
                    m.chapterStarList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("max"))
                throw $util.ProtocolError("missing required 'max'", { instance: m });
            if (!m.hasOwnProperty("strength"))
                throw $util.ProtocolError("missing required 'strength'", { instance: m });
            if (!m.hasOwnProperty("buyStrengthNum"))
                throw $util.ProtocolError("missing required 'buyStrengthNum'", { instance: m });
            return m;
        };
        return s2c_dungeon_query_info_response;
    })();
    $root.s2c_dungeon_cost_strength_nofity = (function() {
        function s2c_dungeon_cost_strength_nofity(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dungeon_cost_strength_nofity.prototype.strength = 0;
        s2c_dungeon_cost_strength_nofity.cmd = 14339;
        s2c_dungeon_cost_strength_nofity.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.strength);
            return w;
        };
        s2c_dungeon_cost_strength_nofity.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dungeon_cost_strength_nofity();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.strength = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("strength"))
                throw $util.ProtocolError("missing required 'strength'", { instance: m });
            return m;
        };
        return s2c_dungeon_cost_strength_nofity;
    })();
    $root.s2c_dungeon_schedule_change_notify = (function() {
        function s2c_dungeon_schedule_change_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dungeon_schedule_change_notify.prototype.scheduleChange = null;
        s2c_dungeon_schedule_change_notify.prototype.chapterStarList = null;
        s2c_dungeon_schedule_change_notify.prototype.max = null;
        s2c_dungeon_schedule_change_notify.cmd = 14340;
        s2c_dungeon_schedule_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            $root.p_schedule.encode(m.scheduleChange, w.uint32(10).fork()).ldelim();
            $root.p_kv_pair.encode(m.chapterStarList, w.uint32(18).fork()).ldelim();
            if (m.max != null && Object.hasOwnProperty.call(m, "max"))
                $root.p_kv_pair.encode(m.max, w.uint32(26).fork()).ldelim();
            return w;
        };
        s2c_dungeon_schedule_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dungeon_schedule_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.scheduleChange = $root.p_schedule.decode(r, r.uint32());
                    break;
                case 2:
                    m.chapterStarList = $root.p_kv_pair.decode(r, r.uint32());
                    break;
                case 3:
                    m.max = $root.p_kv_pair.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("scheduleChange"))
                throw $util.ProtocolError("missing required 'scheduleChange'", { instance: m });
            if (!m.hasOwnProperty("chapterStarList"))
                throw $util.ProtocolError("missing required 'chapterStarList'", { instance: m });
            return m;
        };
        return s2c_dungeon_schedule_change_notify;
    })();
    $root.c2s_dungeon_strength_request = (function() {
        function c2s_dungeon_strength_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dungeon_strength_request.prototype.id = 0;
        c2s_dungeon_strength_request.prototype.type = 0;
        c2s_dungeon_strength_request.cmd = 14341;
        c2s_dungeon_strength_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_dungeon_strength_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dungeon_strength_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_dungeon_strength_request;
    })();
    $root.s2c_dungeon_strength_response = (function() {
        function s2c_dungeon_strength_response(p) {
            this.strengthList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dungeon_strength_response.prototype.strength = 0;
        s2c_dungeon_strength_response.prototype.strengthList = $util.emptyArray;
        s2c_dungeon_strength_response.cmd = 14342;
        s2c_dungeon_strength_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.strength);
            if (m.strengthList != null && m.strengthList.length) {
                for (var i = 0; i < m.strengthList.length; ++i)
                    $root.p_kv_pair.encode(m.strengthList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_dungeon_strength_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dungeon_strength_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.strength = r.int32();
                    break;
                case 2:
                    if (!(m.strengthList && m.strengthList.length))
                        m.strengthList = [];
                    m.strengthList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("strength"))
                throw $util.ProtocolError("missing required 'strength'", { instance: m });
            return m;
        };
        return s2c_dungeon_strength_response;
    })();
    $root.c2s_dungeon_buy_strength_request = (function() {
        function c2s_dungeon_buy_strength_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dungeon_buy_strength_request.cmd = 14343;
        c2s_dungeon_buy_strength_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_dungeon_buy_strength_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dungeon_buy_strength_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_dungeon_buy_strength_request;
    })();
    $root.s2c_dungeon_buy_strength_response = (function() {
        function s2c_dungeon_buy_strength_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dungeon_buy_strength_response.prototype.strength = 0;
        s2c_dungeon_buy_strength_response.prototype.buyStrengthNum = 0;
        s2c_dungeon_buy_strength_response.cmd = 14344;
        s2c_dungeon_buy_strength_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.strength);
            w.uint32(16).int32(m.buyStrengthNum);
            return w;
        };
        s2c_dungeon_buy_strength_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dungeon_buy_strength_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.strength = r.int32();
                    break;
                case 2:
                    m.buyStrengthNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("strength"))
                throw $util.ProtocolError("missing required 'strength'", { instance: m });
            if (!m.hasOwnProperty("buyStrengthNum"))
                throw $util.ProtocolError("missing required 'buyStrengthNum'", { instance: m });
            return m;
        };
        return s2c_dungeon_buy_strength_response;
    })();
    $root.c2s_dungeon_get_reward_request = (function() {
        function c2s_dungeon_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_dungeon_get_reward_request.prototype.id = 0;
        c2s_dungeon_get_reward_request.prototype.type = 0;
        c2s_dungeon_get_reward_request.cmd = 14345;
        c2s_dungeon_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.type);
            return w;
        };
        c2s_dungeon_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_dungeon_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            return m;
        };
        return c2s_dungeon_get_reward_request;
    })();
    $root.s2c_dungeon_get_reward_response = (function() {
        function s2c_dungeon_get_reward_response(p) {
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_dungeon_get_reward_response.prototype.rewardList = $util.emptyArray;
        s2c_dungeon_get_reward_response.cmd = 14346;
        s2c_dungeon_get_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    $root.p_dungeon_reward.encode(m.rewardList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };
        s2c_dungeon_get_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_dungeon_get_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 2:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    m.rewardList.push($root.p_dungeon_reward.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_dungeon_get_reward_response;
    })();
    $root.c2s_query_answer_info_request = (function() {
        function c2s_query_answer_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_answer_info_request.cmd = 14593;
        c2s_query_answer_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_query_answer_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_answer_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_answer_info_request;
    })();
    $root.p_answer_rank = (function() {
        function p_answer_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_answer_rank.prototype.rankPos = 0;
        p_answer_rank.prototype.name = "";
        p_answer_rank.prototype.points = 0;
        p_answer_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankPos != null && Object.hasOwnProperty.call(m, "rankPos"))
                w.uint32(8).int32(m.rankPos);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(18).string(m.name);
            if (m.points != null && Object.hasOwnProperty.call(m, "points"))
                w.uint32(24).int32(m.points);
            return w;
        };
        p_answer_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_answer_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankPos = r.int32();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.points = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_answer_rank;
    })();
    $root.s2c_query_answer_info_response = (function() {
        function s2c_query_answer_info_response(p) {
            this.rewards = [];
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_query_answer_info_response.prototype.num = 0;
        s2c_query_answer_info_response.prototype.time = 0;
        s2c_query_answer_info_response.prototype.points = 0;
        s2c_query_answer_info_response.prototype.rewards = $util.emptyArray;
        s2c_query_answer_info_response.prototype.isFinish = 0;
        s2c_query_answer_info_response.prototype.isDetached = 0;
        s2c_query_answer_info_response.prototype.rankList = $util.emptyArray;
        s2c_query_answer_info_response.prototype.myRank = null;
        s2c_query_answer_info_response.cmd = 14594;
        s2c_query_answer_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            w.uint32(16).int32(m.time);
            w.uint32(24).int32(m.points);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    w.uint32(32).int32(m.rewards[i]);
            }
            w.uint32(40).int32(m.isFinish);
            w.uint32(48).int32(m.isDetached);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_answer_rank.encode(m.rankList[i], w.uint32(58).fork()).ldelim();
            }
            $root.p_answer_rank.encode(m.myRank, w.uint32(66).fork()).ldelim();
            return w;
        };
        s2c_query_answer_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_query_answer_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                case 2:
                    m.time = r.int32();
                    break;
                case 3:
                    m.points = r.int32();
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewards.push(r.int32());
                    } else
                        m.rewards.push(r.int32());
                    break;
                case 5:
                    m.isFinish = r.int32();
                    break;
                case 6:
                    m.isDetached = r.int32();
                    break;
                case 7:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_answer_rank.decode(r, r.uint32()));
                    break;
                case 8:
                    m.myRank = $root.p_answer_rank.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("time"))
                throw $util.ProtocolError("missing required 'time'", { instance: m });
            if (!m.hasOwnProperty("points"))
                throw $util.ProtocolError("missing required 'points'", { instance: m });
            if (!m.hasOwnProperty("isFinish"))
                throw $util.ProtocolError("missing required 'isFinish'", { instance: m });
            if (!m.hasOwnProperty("isDetached"))
                throw $util.ProtocolError("missing required 'isDetached'", { instance: m });
            if (!m.hasOwnProperty("myRank"))
                throw $util.ProtocolError("missing required 'myRank'", { instance: m });
            return m;
        };
        return s2c_query_answer_info_response;
    })();
    $root.c2s_update_answer_schedule_request = (function() {
        function c2s_update_answer_schedule_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_update_answer_schedule_request.prototype.num = 0;
        c2s_update_answer_schedule_request.prototype.result = 0;
        c2s_update_answer_schedule_request.cmd = 14595;
        c2s_update_answer_schedule_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            w.uint32(16).int32(m.result);
            return w;
        };
        c2s_update_answer_schedule_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_update_answer_schedule_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                case 2:
                    m.result = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            if (!m.hasOwnProperty("result"))
                throw $util.ProtocolError("missing required 'result'", { instance: m });
            return m;
        };
        return c2s_update_answer_schedule_request;
    })();
    $root.s2c_update_answer_schedule_response = (function() {
        function s2c_update_answer_schedule_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_update_answer_schedule_response.prototype.points = 0;
        s2c_update_answer_schedule_response.cmd = 14596;
        s2c_update_answer_schedule_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.points != null && Object.hasOwnProperty.call(m, "points"))
                w.uint32(8).int32(m.points);
            return w;
        };
        s2c_update_answer_schedule_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_update_answer_schedule_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.points = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_update_answer_schedule_response;
    })();
    $root.c2s_answer_role_get_reward_request = (function() {
        function c2s_answer_role_get_reward_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_answer_role_get_reward_request.prototype.num = 0;
        c2s_answer_role_get_reward_request.cmd = 14597;
        c2s_answer_role_get_reward_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            return w;
        };
        c2s_answer_role_get_reward_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_answer_role_get_reward_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_answer_role_get_reward_request;
    })();
    $root.s2c_answer_role_get_reward_response = (function() {
        function s2c_answer_role_get_reward_response(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_answer_role_get_reward_response.prototype.rewards = $util.emptyArray;
        s2c_answer_role_get_reward_response.cmd = 14598;
        s2c_answer_role_get_reward_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    w.uint32(8).int32(m.rewards[i]);
            }
            return w;
        };
        s2c_answer_role_get_reward_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_answer_role_get_reward_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewards.push(r.int32());
                    } else
                        m.rewards.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_answer_role_get_reward_response;
    })();
    $root.c2s_answer_finish_activity_request = (function() {
        function c2s_answer_finish_activity_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_answer_finish_activity_request.cmd = 14599;
        c2s_answer_finish_activity_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_answer_finish_activity_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_answer_finish_activity_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_answer_finish_activity_request;
    })();
    $root.c2s_daily_activities_cumulative_online_info_request = (function() {
        function c2s_daily_activities_cumulative_online_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_activities_cumulative_online_info_request.cmd = 14849;
        c2s_daily_activities_cumulative_online_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_daily_activities_cumulative_online_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_activities_cumulative_online_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_daily_activities_cumulative_online_info_request;
    })();
    $root.s2c_daily_activities_cumulative_online_info_response = (function() {
        function s2c_daily_activities_cumulative_online_info_response(p) {
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_daily_activities_cumulative_online_info_response.prototype.rewardList = $util.emptyArray;
        s2c_daily_activities_cumulative_online_info_response.cmd = 14850;
        s2c_daily_activities_cumulative_online_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    w.uint32(8).int32(m.rewardList[i]);
            }
            return w;
        };
        s2c_daily_activities_cumulative_online_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_daily_activities_cumulative_online_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardList.push(r.int32());
                    } else
                        m.rewardList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_daily_activities_cumulative_online_info_response;
    })();
    $root.c2s_daily_activities_cumulative_online_get_request = (function() {
        function c2s_daily_activities_cumulative_online_get_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_activities_cumulative_online_get_request.prototype.num = 0;
        c2s_daily_activities_cumulative_online_get_request.cmd = 14851;
        c2s_daily_activities_cumulative_online_get_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            return w;
        };
        c2s_daily_activities_cumulative_online_get_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_activities_cumulative_online_get_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_daily_activities_cumulative_online_get_request;
    })();
    $root.s2c_daily_activities_cumulative_online_get_response = (function() {
        function s2c_daily_activities_cumulative_online_get_response(p) {
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_daily_activities_cumulative_online_get_response.prototype.rewardList = $util.emptyArray;
        s2c_daily_activities_cumulative_online_get_response.cmd = 14852;
        s2c_daily_activities_cumulative_online_get_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    w.uint32(8).int32(m.rewardList[i]);
            }
            return w;
        };
        s2c_daily_activities_cumulative_online_get_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_daily_activities_cumulative_online_get_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardList.push(r.int32());
                    } else
                        m.rewardList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_daily_activities_cumulative_online_get_response;
    })();
    $root.c2s_daily_activities_daily_special_info_request = (function() {
        function c2s_daily_activities_daily_special_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_activities_daily_special_info_request.cmd = 14853;
        c2s_daily_activities_daily_special_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_daily_activities_daily_special_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_activities_daily_special_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_daily_activities_daily_special_info_request;
    })();
    $root.s2c_daily_activities_daily_special_info_response = (function() {
        function s2c_daily_activities_daily_special_info_response(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_daily_activities_daily_special_info_response.prototype.free = 0;
        s2c_daily_activities_daily_special_info_response.prototype.cost1 = 0;
        s2c_daily_activities_daily_special_info_response.prototype.cost2 = 0;
        s2c_daily_activities_daily_special_info_response.cmd = 14854;
        s2c_daily_activities_daily_special_info_response.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.free);
            w.uint32(16).int32(m.cost1);
            w.uint32(24).int32(m.cost2);
            return w;
        };
        s2c_daily_activities_daily_special_info_response.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_daily_activities_daily_special_info_response();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.free = r.int32();
                    break;
                case 2:
                    m.cost1 = r.int32();
                    break;
                case 3:
                    m.cost2 = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("free"))
                throw $util.ProtocolError("missing required 'free'", { instance: m });
            if (!m.hasOwnProperty("cost1"))
                throw $util.ProtocolError("missing required 'cost1'", { instance: m });
            if (!m.hasOwnProperty("cost2"))
                throw $util.ProtocolError("missing required 'cost2'", { instance: m });
            return m;
        };
        return s2c_daily_activities_daily_special_info_response;
    })();
    $root.c2s_daily_activities_daily_special_get_request = (function() {
        function c2s_daily_activities_daily_special_get_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_daily_activities_daily_special_get_request.prototype.num = 0;
        c2s_daily_activities_daily_special_get_request.cmd = 14855;
        c2s_daily_activities_daily_special_get_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.num);
            return w;
        };
        c2s_daily_activities_daily_special_get_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_daily_activities_daily_special_get_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("num"))
                throw $util.ProtocolError("missing required 'num'", { instance: m });
            return m;
        };
        return c2s_daily_activities_daily_special_get_request;
    })();
    $root.p_boss_arrival_rank = (function() {
        function p_boss_arrival_rank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_boss_arrival_rank.prototype.roleId = 0;
        p_boss_arrival_rank.prototype.name = "";
        p_boss_arrival_rank.prototype.rank = 0;
        p_boss_arrival_rank.prototype.damage = 0;
        p_boss_arrival_rank.prototype.fightScore = 0;
        p_boss_arrival_rank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(8).int32(m.roleId);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(18).string(m.name);
            if (m.rank != null && Object.hasOwnProperty.call(m, "rank"))
                w.uint32(24).int32(m.rank);
            if (m.damage != null && Object.hasOwnProperty.call(m, "damage"))
                w.uint32(32).int32(m.damage);
            if (m.fightScore != null && Object.hasOwnProperty.call(m, "fightScore"))
                w.uint32(40).int32(m.fightScore);
            return w;
        };
        p_boss_arrival_rank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_boss_arrival_rank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int32();
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.rank = r.int32();
                    break;
                case 4:
                    m.damage = r.int32();
                    break;
                case 5:
                    m.fightScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return p_boss_arrival_rank;
    })();
    $root.c2s_boss_arrival_query_info_request = (function() {
        function c2s_boss_arrival_query_info_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_boss_arrival_query_info_request.cmd = 15105;
        c2s_boss_arrival_query_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_boss_arrival_query_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_boss_arrival_query_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_boss_arrival_query_info_request;
    })();
    $root.s2c_boss_arrival_query_info_reply = (function() {
        function s2c_boss_arrival_query_info_reply(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_arrival_query_info_reply.prototype.remainTimes = 0;
        s2c_boss_arrival_query_info_reply.cmd = 15106;
        s2c_boss_arrival_query_info_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.remainTimes != null && Object.hasOwnProperty.call(m, "remainTimes"))
                w.uint32(8).int32(m.remainTimes);
            return w;
        };
        s2c_boss_arrival_query_info_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_arrival_query_info_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.remainTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_arrival_query_info_reply;
    })();
    $root.c2s_boss_arrival_query_rank_request = (function() {
        function c2s_boss_arrival_query_rank_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_boss_arrival_query_rank_request.prototype.monsterId = 0;
        c2s_boss_arrival_query_rank_request.cmd = 15107;
        c2s_boss_arrival_query_rank_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.monsterId != null && Object.hasOwnProperty.call(m, "monsterId"))
                w.uint32(8).int32(m.monsterId);
            return w;
        };
        c2s_boss_arrival_query_rank_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_boss_arrival_query_rank_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.monsterId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_boss_arrival_query_rank_request;
    })();
    $root.s2c_boss_arrival_query_rank_reply = (function() {
        function s2c_boss_arrival_query_rank_reply(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_arrival_query_rank_reply.prototype.selfRank = 0;
        s2c_boss_arrival_query_rank_reply.prototype.selfDamage = 0;
        s2c_boss_arrival_query_rank_reply.prototype.rankList = $util.emptyArray;
        s2c_boss_arrival_query_rank_reply.cmd = 15108;
        s2c_boss_arrival_query_rank_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.selfRank != null && Object.hasOwnProperty.call(m, "selfRank"))
                w.uint32(8).int32(m.selfRank);
            if (m.selfDamage != null && Object.hasOwnProperty.call(m, "selfDamage"))
                w.uint32(16).int32(m.selfDamage);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.p_boss_arrival_rank.encode(m.rankList[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_boss_arrival_query_rank_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_arrival_query_rank_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.selfRank = r.int32();
                    break;
                case 2:
                    m.selfDamage = r.int32();
                    break;
                case 3:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.p_boss_arrival_rank.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_arrival_query_rank_reply;
    })();
    $root.s2c_boss_arrival_boss_died_notify = (function() {
        function s2c_boss_arrival_boss_died_notify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_arrival_boss_died_notify.cmd = 15109;
        s2c_boss_arrival_boss_died_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        s2c_boss_arrival_boss_died_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_arrival_boss_died_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_arrival_boss_died_notify;
    })();
    $root.s2c_boss_arrival_reward_notify = (function() {
        function s2c_boss_arrival_reward_notify(p) {
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_boss_arrival_reward_notify.prototype.rewardType = 0;
        s2c_boss_arrival_reward_notify.prototype.rank = 0;
        s2c_boss_arrival_reward_notify.prototype.rewardList = $util.emptyArray;
        s2c_boss_arrival_reward_notify.cmd = 15110;
        s2c_boss_arrival_reward_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardType != null && Object.hasOwnProperty.call(m, "rewardType"))
                w.uint32(8).int32(m.rewardType);
            if (m.rank != null && Object.hasOwnProperty.call(m, "rank"))
                w.uint32(16).int32(m.rank);
            if (m.rewardList != null && m.rewardList.length) {
                for (var i = 0; i < m.rewardList.length; ++i)
                    $root.p_kv_pair.encode(m.rewardList[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };
        s2c_boss_arrival_reward_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_boss_arrival_reward_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardType = r.int32();
                    break;
                case 2:
                    m.rank = r.int32();
                    break;
                case 3:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    m.rewardList.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_boss_arrival_reward_notify;
    })();
    $root.p_each_sale_info = (function() {
        function p_each_sale_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_each_sale_info.prototype.id = 0;
        p_each_sale_info.prototype.status = 0;
        p_each_sale_info.prototype.endTime = 0;
        p_each_sale_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.status);
            w.uint32(24).int32(m.endTime);
            return w;
        };
        p_each_sale_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_each_sale_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.status = r.int32();
                    break;
                case 3:
                    m.endTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            if (!m.hasOwnProperty("endTime"))
                throw $util.ProtocolError("missing required 'endTime'", { instance: m });
            return m;
        };
        return p_each_sale_info;
    })();
    $root.s2c_flash_sale_change_notify = (function() {
        function s2c_flash_sale_change_notify(p) {
            this.saleList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_flash_sale_change_notify.prototype.saleList = $util.emptyArray;
        s2c_flash_sale_change_notify.cmd = 15361;
        s2c_flash_sale_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.saleList != null && m.saleList.length) {
                for (var i = 0; i < m.saleList.length; ++i)
                    $root.p_each_sale_info.encode(m.saleList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_flash_sale_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_flash_sale_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.saleList && m.saleList.length))
                        m.saleList = [];
                    m.saleList.push($root.p_each_sale_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_flash_sale_change_notify;
    })();
    $root.c2s_flash_sale_reward_get_request = (function() {
        function c2s_flash_sale_reward_get_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_flash_sale_reward_get_request.prototype.saleId = 0;
        c2s_flash_sale_reward_get_request.cmd = 15362;
        c2s_flash_sale_reward_get_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.saleId);
            return w;
        };
        c2s_flash_sale_reward_get_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_flash_sale_reward_get_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.saleId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("saleId"))
                throw $util.ProtocolError("missing required 'saleId'", { instance: m });
            return m;
        };
        return c2s_flash_sale_reward_get_request;
    })();
    $root.c2s_query_flash_service_info_request = (function() {
        function c2s_query_flash_service_info_request(p) {
            this.contentIdList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_query_flash_service_info_request.prototype.contentIdList = $util.emptyArray;
        c2s_query_flash_service_info_request.cmd = 15617;
        c2s_query_flash_service_info_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.contentIdList != null && m.contentIdList.length) {
                for (var i = 0; i < m.contentIdList.length; ++i)
                    w.uint32(8).int32(m.contentIdList[i]);
            }
            return w;
        };
        c2s_query_flash_service_info_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_query_flash_service_info_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.contentIdList && m.contentIdList.length))
                        m.contentIdList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.contentIdList.push(r.int32());
                    } else
                        m.contentIdList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_query_flash_service_info_request;
    })();
    $root.player_data = (function() {
        function player_data(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        player_data.prototype.id = 0;
        player_data.prototype.data = 0;
        player_data.prototype.status = 0;
        player_data.prototype.extra = 0;
        player_data.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.id);
            w.uint32(16).int32(m.data);
            w.uint32(24).int32(m.status);
            w.uint32(32).int32(m.extra);
            return w;
        };
        player_data.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.player_data();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.data = r.int32();
                    break;
                case 3:
                    m.status = r.int32();
                    break;
                case 4:
                    m.extra = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("id"))
                throw $util.ProtocolError("missing required 'id'", { instance: m });
            if (!m.hasOwnProperty("data"))
                throw $util.ProtocolError("missing required 'data'", { instance: m });
            if (!m.hasOwnProperty("status"))
                throw $util.ProtocolError("missing required 'status'", { instance: m });
            if (!m.hasOwnProperty("extra"))
                throw $util.ProtocolError("missing required 'extra'", { instance: m });
            return m;
        };
        return player_data;
    })();
    $root.p_content_info = (function() {
        function p_content_info(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_content_info.prototype.contentId = 0;
        p_content_info.prototype.mainId = 0;
        p_content_info.prototype.type = 0;
        p_content_info.prototype.smallType = 0;
        p_content_info.prototype.countData = 0;
        p_content_info.prototype.data = $util.emptyArray;
        p_content_info.prototype.openTime = 0;
        p_content_info.prototype.closeTime = 0;
        p_content_info.prototype.effectOpenTime = 0;
        p_content_info.prototype.effectCloseTime = 0;
        p_content_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.contentId);
            w.uint32(16).int32(m.mainId);
            w.uint32(24).int32(m.type);
            w.uint32(32).int32(m.smallType);
            if (m.countData != null && Object.hasOwnProperty.call(m, "countData"))
                w.uint32(40).int32(m.countData);
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.player_data.encode(m.data[i], w.uint32(50).fork()).ldelim();
            }
            if (m.openTime != null && Object.hasOwnProperty.call(m, "openTime"))
                w.uint32(56).int32(m.openTime);
            if (m.closeTime != null && Object.hasOwnProperty.call(m, "closeTime"))
                w.uint32(64).int32(m.closeTime);
            if (m.effectOpenTime != null && Object.hasOwnProperty.call(m, "effectOpenTime"))
                w.uint32(72).int32(m.effectOpenTime);
            if (m.effectCloseTime != null && Object.hasOwnProperty.call(m, "effectCloseTime"))
                w.uint32(80).int32(m.effectCloseTime);
            return w;
        };
        p_content_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_content_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.contentId = r.int32();
                    break;
                case 2:
                    m.mainId = r.int32();
                    break;
                case 3:
                    m.type = r.int32();
                    break;
                case 4:
                    m.smallType = r.int32();
                    break;
                case 5:
                    m.countData = r.int32();
                    break;
                case 6:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.player_data.decode(r, r.uint32()));
                    break;
                case 7:
                    m.openTime = r.int32();
                    break;
                case 8:
                    m.closeTime = r.int32();
                    break;
                case 9:
                    m.effectOpenTime = r.int32();
                    break;
                case 10:
                    m.effectCloseTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("contentId"))
                throw $util.ProtocolError("missing required 'contentId'", { instance: m });
            if (!m.hasOwnProperty("mainId"))
                throw $util.ProtocolError("missing required 'mainId'", { instance: m });
            if (!m.hasOwnProperty("type"))
                throw $util.ProtocolError("missing required 'type'", { instance: m });
            if (!m.hasOwnProperty("smallType"))
                throw $util.ProtocolError("missing required 'smallType'", { instance: m });
            return m;
        };
        return p_content_info;
    })();
    $root.s2c_flash_service_change_notify = (function() {
        function s2c_flash_service_change_notify(p) {
            this.contentList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_flash_service_change_notify.prototype.contentList = $util.emptyArray;
        s2c_flash_service_change_notify.cmd = 15618;
        s2c_flash_service_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.contentList != null && m.contentList.length) {
                for (var i = 0; i < m.contentList.length; ++i)
                    $root.p_content_info.encode(m.contentList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_flash_service_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_flash_service_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.contentList && m.contentList.length))
                        m.contentList = [];
                    m.contentList.push($root.p_content_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_flash_service_change_notify;
    })();
    $root.s2c_flash_service_info_notify = (function() {
        function s2c_flash_service_info_notify(p) {
            this.contentList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_flash_service_info_notify.prototype.contentList = $util.emptyArray;
        s2c_flash_service_info_notify.cmd = 15619;
        s2c_flash_service_info_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.contentList != null && m.contentList.length) {
                for (var i = 0; i < m.contentList.length; ++i)
                    $root.p_content_info.encode(m.contentList[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };
        s2c_flash_service_info_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_flash_service_info_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.contentList && m.contentList.length))
                        m.contentList = [];
                    m.contentList.push($root.p_content_info.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return s2c_flash_service_info_notify;
    })();
    $root.c2s_flash_service_reward_get_request = (function() {
        function c2s_flash_service_reward_get_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_flash_service_reward_get_request.prototype.contentId = 0;
        c2s_flash_service_reward_get_request.prototype.subId = 0;
        c2s_flash_service_reward_get_request.cmd = 15620;
        c2s_flash_service_reward_get_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.contentId);
            w.uint32(16).int32(m.subId);
            return w;
        };
        c2s_flash_service_reward_get_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_flash_service_reward_get_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.contentId = r.int32();
                    break;
                case 2:
                    m.subId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("contentId"))
                throw $util.ProtocolError("missing required 'contentId'", { instance: m });
            if (!m.hasOwnProperty("subId"))
                throw $util.ProtocolError("missing required 'subId'", { instance: m });
            return m;
        };
        return c2s_flash_service_reward_get_request;
    })();
    $root.c2s_flash_service_operation_request = (function() {
        function c2s_flash_service_operation_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_flash_service_operation_request.prototype.contentId = 0;
        c2s_flash_service_operation_request.prototype.subId = 0;
        c2s_flash_service_operation_request.prototype.opt = 0;
        c2s_flash_service_operation_request.prototype.extra = 0;
        c2s_flash_service_operation_request.cmd = 15621;
        c2s_flash_service_operation_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int32(m.contentId);
            w.uint32(16).int32(m.subId);
            w.uint32(24).int32(m.opt);
            w.uint32(32).int32(m.extra);
            return w;
        };
        c2s_flash_service_operation_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_flash_service_operation_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.contentId = r.int32();
                    break;
                case 2:
                    m.subId = r.int32();
                    break;
                case 3:
                    m.opt = r.int32();
                    break;
                case 4:
                    m.extra = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("contentId"))
                throw $util.ProtocolError("missing required 'contentId'", { instance: m });
            if (!m.hasOwnProperty("subId"))
                throw $util.ProtocolError("missing required 'subId'", { instance: m });
            if (!m.hasOwnProperty("opt"))
                throw $util.ProtocolError("missing required 'opt'", { instance: m });
            if (!m.hasOwnProperty("extra"))
                throw $util.ProtocolError("missing required 'extra'", { instance: m });
            return m;
        };
        return c2s_flash_service_operation_request;
    })();
    $root.p_cat_record = (function() {
        function p_cat_record(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        p_cat_record.prototype.roleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
        p_cat_record.prototype.roleName = "";
        p_cat_record.prototype.costType = 0;
        p_cat_record.prototype.costNum = 0;
        p_cat_record.prototype.winRate = 0;
        p_cat_record.prototype.winNum = 0;
        p_cat_record.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            w.uint32(8).int64(m.roleId);
            w.uint32(18).string(m.roleName);
            w.uint32(24).int32(m.costType);
            w.uint32(32).int32(m.costNum);
            w.uint32(40).int32(m.winRate);
            w.uint32(48).int32(m.winNum);
            return w;
        };
        p_cat_record.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.p_cat_record();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.int64();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.costType = r.int32();
                    break;
                case 4:
                    m.costNum = r.int32();
                    break;
                case 5:
                    m.winRate = r.int32();
                    break;
                case 6:
                    m.winNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("roleId"))
                throw $util.ProtocolError("missing required 'roleId'", { instance: m });
            if (!m.hasOwnProperty("roleName"))
                throw $util.ProtocolError("missing required 'roleName'", { instance: m });
            if (!m.hasOwnProperty("costType"))
                throw $util.ProtocolError("missing required 'costType'", { instance: m });
            if (!m.hasOwnProperty("costNum"))
                throw $util.ProtocolError("missing required 'costNum'", { instance: m });
            if (!m.hasOwnProperty("winRate"))
                throw $util.ProtocolError("missing required 'winRate'", { instance: m });
            if (!m.hasOwnProperty("winNum"))
                throw $util.ProtocolError("missing required 'winNum'", { instance: m });
            return m;
        };
        return p_cat_record;
    })();
    $root.c2s_cat_info = (function() {
        function c2s_cat_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_cat_info.cmd = 15873;
        c2s_cat_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_cat_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_cat_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_cat_info;
    })();
    $root.s2c_cat_info = (function() {
        function s2c_cat_info(p) {
            this.serverTimes = [];
            this.catTimes = [];
            this.catRecord = [];
            this.canGet = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_cat_info.prototype.serverTimes = $util.emptyArray;
        s2c_cat_info.prototype.goldNum = 0;
        s2c_cat_info.prototype.catTimes = $util.emptyArray;
        s2c_cat_info.prototype.catRecord = $util.emptyArray;
        s2c_cat_info.prototype.isFinished = 0;
        s2c_cat_info.prototype.canGet = $util.emptyArray;
        s2c_cat_info.cmd = 15874;
        s2c_cat_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serverTimes != null && m.serverTimes.length) {
                for (var i = 0; i < m.serverTimes.length; ++i)
                    $root.p_kv_pair.encode(m.serverTimes[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.goldNum);
            if (m.catTimes != null && m.catTimes.length) {
                for (var i = 0; i < m.catTimes.length; ++i)
                    $root.p_kv_pair.encode(m.catTimes[i], w.uint32(26).fork()).ldelim();
            }
            if (m.catRecord != null && m.catRecord.length) {
                for (var i = 0; i < m.catRecord.length; ++i)
                    $root.p_cat_record.encode(m.catRecord[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.isFinished);
            if (m.canGet != null && m.canGet.length) {
                for (var i = 0; i < m.canGet.length; ++i)
                    w.uint32(48).int32(m.canGet[i]);
            }
            return w;
        };
        s2c_cat_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_cat_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.serverTimes && m.serverTimes.length))
                        m.serverTimes = [];
                    m.serverTimes.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 2:
                    m.goldNum = r.int32();
                    break;
                case 3:
                    if (!(m.catTimes && m.catTimes.length))
                        m.catTimes = [];
                    m.catTimes.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.catRecord && m.catRecord.length))
                        m.catRecord = [];
                    m.catRecord.push($root.p_cat_record.decode(r, r.uint32()));
                    break;
                case 5:
                    m.isFinished = r.int32();
                    break;
                case 6:
                    if (!(m.canGet && m.canGet.length))
                        m.canGet = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.canGet.push(r.int32());
                    } else
                        m.canGet.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("goldNum"))
                throw $util.ProtocolError("missing required 'goldNum'", { instance: m });
            if (!m.hasOwnProperty("isFinished"))
                throw $util.ProtocolError("missing required 'isFinished'", { instance: m });
            return m;
        };
        return s2c_cat_info;
    })();
    $root.c2s_cat_close_info = (function() {
        function c2s_cat_close_info(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_cat_close_info.cmd = 15875;
        c2s_cat_close_info.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_cat_close_info.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_cat_close_info();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_cat_close_info;
    })();
    $root.s2c_cat_change_notify = (function() {
        function s2c_cat_change_notify(p) {
            this.serverTimes = [];
            this.catTimes = [];
            this.catRecord = [];
            this.canGet = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_cat_change_notify.prototype.serverTimes = $util.emptyArray;
        s2c_cat_change_notify.prototype.goldNum = 0;
        s2c_cat_change_notify.prototype.catTimes = $util.emptyArray;
        s2c_cat_change_notify.prototype.catRecord = $util.emptyArray;
        s2c_cat_change_notify.prototype.isFinished = 0;
        s2c_cat_change_notify.prototype.canGet = $util.emptyArray;
        s2c_cat_change_notify.cmd = 15876;
        s2c_cat_change_notify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serverTimes != null && m.serverTimes.length) {
                for (var i = 0; i < m.serverTimes.length; ++i)
                    $root.p_kv_pair.encode(m.serverTimes[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.goldNum);
            if (m.catTimes != null && m.catTimes.length) {
                for (var i = 0; i < m.catTimes.length; ++i)
                    $root.p_kv_pair.encode(m.catTimes[i], w.uint32(26).fork()).ldelim();
            }
            if (m.catRecord != null && m.catRecord.length) {
                for (var i = 0; i < m.catRecord.length; ++i)
                    $root.p_cat_record.encode(m.catRecord[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.isFinished);
            if (m.canGet != null && m.canGet.length) {
                for (var i = 0; i < m.canGet.length; ++i)
                    w.uint32(48).int32(m.canGet[i]);
            }
            return w;
        };
        s2c_cat_change_notify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_cat_change_notify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.serverTimes && m.serverTimes.length))
                        m.serverTimes = [];
                    m.serverTimes.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 2:
                    m.goldNum = r.int32();
                    break;
                case 3:
                    if (!(m.catTimes && m.catTimes.length))
                        m.catTimes = [];
                    m.catTimes.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.catRecord && m.catRecord.length))
                        m.catRecord = [];
                    m.catRecord.push($root.p_cat_record.decode(r, r.uint32()));
                    break;
                case 5:
                    m.isFinished = r.int32();
                    break;
                case 6:
                    if (!(m.canGet && m.canGet.length))
                        m.canGet = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.canGet.push(r.int32());
                    } else
                        m.canGet.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("goldNum"))
                throw $util.ProtocolError("missing required 'goldNum'", { instance: m });
            if (!m.hasOwnProperty("isFinished"))
                throw $util.ProtocolError("missing required 'isFinished'", { instance: m });
            return m;
        };
        return s2c_cat_change_notify;
    })();
    $root.c2s_draw_cat_request = (function() {
        function c2s_draw_cat_request(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        c2s_draw_cat_request.cmd = 15877;
        c2s_draw_cat_request.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };
        c2s_draw_cat_request.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.c2s_draw_cat_request();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };
        return c2s_draw_cat_request;
    })();
    $root.s2c_draw_cat_reply = (function() {
        function s2c_draw_cat_reply(p) {
            this.serverTimes = [];
            this.catTimes = [];
            this.catRecord = [];
            this.canGet = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }
        s2c_draw_cat_reply.prototype.serverTimes = $util.emptyArray;
        s2c_draw_cat_reply.prototype.goldNum = 0;
        s2c_draw_cat_reply.prototype.catTimes = $util.emptyArray;
        s2c_draw_cat_reply.prototype.catRecord = $util.emptyArray;
        s2c_draw_cat_reply.prototype.isFinished = 0;
        s2c_draw_cat_reply.prototype.canGet = $util.emptyArray;
        s2c_draw_cat_reply.prototype.getId = 0;
        s2c_draw_cat_reply.prototype.getMulti = 0;
        s2c_draw_cat_reply.cmd = 15878;
        s2c_draw_cat_reply.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serverTimes != null && m.serverTimes.length) {
                for (var i = 0; i < m.serverTimes.length; ++i)
                    $root.p_kv_pair.encode(m.serverTimes[i], w.uint32(10).fork()).ldelim();
            }
            w.uint32(16).int32(m.goldNum);
            if (m.catTimes != null && m.catTimes.length) {
                for (var i = 0; i < m.catTimes.length; ++i)
                    $root.p_kv_pair.encode(m.catTimes[i], w.uint32(26).fork()).ldelim();
            }
            if (m.catRecord != null && m.catRecord.length) {
                for (var i = 0; i < m.catRecord.length; ++i)
                    $root.p_cat_record.encode(m.catRecord[i], w.uint32(34).fork()).ldelim();
            }
            w.uint32(40).int32(m.isFinished);
            if (m.canGet != null && m.canGet.length) {
                for (var i = 0; i < m.canGet.length; ++i)
                    w.uint32(48).int32(m.canGet[i]);
            }
            w.uint32(56).int32(m.getId);
            w.uint32(64).int32(m.getMulti);
            return w;
        };
        s2c_draw_cat_reply.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.s2c_draw_cat_reply();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.serverTimes && m.serverTimes.length))
                        m.serverTimes = [];
                    m.serverTimes.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 2:
                    m.goldNum = r.int32();
                    break;
                case 3:
                    if (!(m.catTimes && m.catTimes.length))
                        m.catTimes = [];
                    m.catTimes.push($root.p_kv_pair.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.catRecord && m.catRecord.length))
                        m.catRecord = [];
                    m.catRecord.push($root.p_cat_record.decode(r, r.uint32()));
                    break;
                case 5:
                    m.isFinished = r.int32();
                    break;
                case 6:
                    if (!(m.canGet && m.canGet.length))
                        m.canGet = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.canGet.push(r.int32());
                    } else
                        m.canGet.push(r.int32());
                    break;
                case 7:
                    m.getId = r.int32();
                    break;
                case 8:
                    m.getMulti = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            if (!m.hasOwnProperty("goldNum"))
                throw $util.ProtocolError("missing required 'goldNum'", { instance: m });
            if (!m.hasOwnProperty("isFinished"))
                throw $util.ProtocolError("missing required 'isFinished'", { instance: m });
            if (!m.hasOwnProperty("getId"))
                throw $util.ProtocolError("missing required 'getId'", { instance: m });
            if (!m.hasOwnProperty("getMulti"))
                throw $util.ProtocolError("missing required 'getMulti'", { instance: m });
            return m;
        };
        return s2c_draw_cat_reply;
    })();
    return $root;
})(protobuf);

var ErrorCodeConst
(ErrorCodeConst||(ErrorCodeConst={})).DEFAULT = {
    "0": "成功",
    "1": "非法参数",
    "2": "无此对象",
    "3": "角色名已被占用",
    "4": "角色数量限制",
    "5": "职业未开放",
    "6": "角色不存在",
    "7": "禁IP",
    "8": "禁账号",
    "9": "禁言",
    "10": "禁设备",
    "11": "状态限制",
    "12": "战斗中",
    "13": "已处理某种状态",
    "14": "等级限制",
    "15": "铜币不足",
    "17": "在阵容中",
    "18": "背包空间不足",
    "19": "不在",
    "20": "转生不足",
    "22": "自己加自己",
    "23": "己方好友已达上限",
    "24": "对方好友已达上限",
    "25": "己方好友已达上限",
    "26": "对方好友已达上限",
    "27": "双方不是好友",
    "28": "性别限制",
    "29": "种族限制",
    "30": "元宝不足",
    "31": "绑定元宝不足",
    "32": "钱币不足",
    "33": "权限不足",
    "34": "聊天间隔时间不足",
    "35": "不能送礼给NPC",
    "36": "不能招募NPC",
    "37": "NPC好感度不足",
    "38": "魅力不足",
    "39": "送礼次数限制",
    "40": "门派限制",
    "41": "该位置不可行走",
    "42": "不可复活",
    "43": "经验不足",
    "47": "钱币数量达到上限",
    "48": "未知货币类型",
    "50": "登录校验失败",
    "51": "登录校验异常",
    "52": "非法账号",
    "53": "非法服务器ID",
    "54": "服务器维护中",
    "55": "包含敏感字符",
    "60": "角色死亡",
    "61": "角色未死亡",
    "62": "当前场景不允许使用该模式",
    "63": "金币祈福次数不足",
    "64": "经验祈福次数不足",
    "70": "已在副本中",
    "71": "不在副本中",
    "72": "副本次数不足",
    "73": "副本道具不足",
    "74": "副本不存在",
    "75": "不允许进入此副本",
    "76": "副本CD中",
    "77": "VIP购买次数不足",
    "78": "组队状态不能进入副本",
    "79": "单人状态不能进入副本",
    "80": "前置副本未通关",
    "81": "队员已离线",
    "82": "在副本中",
    "83": "冲级礼包数量限制",
    "84": "队伍人数不符不能进入副本",
    "85": "VIP等级不足",
    "86": "邀请币不足",
    "87": "处于PK状态中,不可退出副本",
    "91": "未押镖",
    "92": "押镖中",
    "93": "当日接镖数已达上限",
    "94": "当前未触发押镖奇遇事件",
    "95": "未刷镖",
    "99": "网络超时",
    "100": "连接超时",
    "101": "宠物未找到",
    "102": "最大转生",
    "103": "宠物已掠阵",
    "104": "无出战宠物",
    "105": "灵珠未找到",
    "106": "已镶嵌同种类型的灵珠",
    "107": "错误的宠物升星道具",
    "108": "要激活的幻化宠物不存在",
    "109": "宠物等级已满",
    "110": "宠物星阶已满",
    "111": "幻化宠物阶已满",
    "112": "错误的幻化宠物升阶道具",
    "113": "错误的坐骑升星道具",
    "114": "要激活的幻化坐骑不存在",
    "115": "错误的幻化坐骑升阶道具",
    "116": "坐骑星阶已满",
    "117": "幻化坐骑阶已满",
    "118": "翅膀等级已满",
    "119": "错误的翅膀升级道具",
    "120": "幻化翅膀不存在",
    "121": "幻化翅膀已达最大上限",
    "122": "错误的法宝提升道具",
    "123": "幻化法宝最大等级",
    "124": "幻化法宝不存在",
    "125": "法宝等级已满",
    "126": "错误的武器提升道具",
    "127": "幻化神兵不存在",
    "128": "幻化武器最大等级",
    "129": "神兵等级已满",
    "130": "错误的披风提升道具",
    "131": "幻化披风不存在",
    "132": "幻化披风等级已满",
    "133": "披风等级已满",
    "134": "符文未开启",
    "135": "背包中没有该符文",
    "136": "地元石或天元石不足",
    "137": "地格符文碎片或天格符文碎片不足",
    "138": "符文背包已满",
    "139": "地格和天格不能兑换",
    "140": "符文被锁定",
    "141": "符文不能被替换",
    "142": "最大幻化装扮等级",
    "143": "竞技场排名不存在",
    "144": "错误的竞技场奖励",
    "145": "排名需要刷新",
    "146": "激励次数已满",
    "147": "超过可购买次数",
    "148": "可挑战次数不足",
    "149": "竞技场未开放",
    "150": "竞技场荣誉值不足",
    "151": "战斗力不足",
    "152": "名望已满",
    "153": "名望未开启",
    "154": "龙魂已升级到顶级",
    "155": "月卡-未激活",
    "156": "月卡-已激活",
    "157": "月卡-今日奖励已领取",
    "158": "限时宠物不能使用该功能",
    "180": "未配置仙灵信息",
    "181": "仙灵已激活",
    "182": "仙灵未激活",
    "183": "仙灵出战状态无改变",
    "184": "仙灵出战所需装备件数不足",
    "185": "当前仙灵未穿戴任何装备",
    "186": "当前仙灵未穿戴目标装备",
    "187": "仙灵背包中找不到目标装备",
    "188": "仙灵装备已强化到最高级",
    "189": "仙灵装备强化材料不足",
    "190": "因仙灵装备品质限制，无法穿戴",
    "191": "仙灵出战人数达到上限",
    "192": "仙灵背包空间不足",
    "200": "宠物已出战",
    "201": "道具不足",
    "202": "道具配置有误",
    "203": "道具不可丢弃",
    "204": "道具使用数目达到上限",
    "205": "无法合成目标道具",
    "206": "未提交合成材料",
    "207": "未配置道具使用效果，无法使用",
    "208": "仓库空间满",
    "209": "仓库内目标道具不足",
    "210": "仓库格子扩展数达到上限",
    "211": "背包格子扩展数达到上限",
    "301": "没有配置这个装备",
    "302": "装备不允许被打造",
    "303": "装备扩展信息丢失",
    "304": "没有下一级装备",
    "305": "此部位未镶嵌宝石",
    "306": "耐久度满，无需修复",
    "307": "宝石孔不存在",
    "308": "宝石等级不足",
    "309": "宝石类型不符",
    "310": "此位置未穿戴装备",
    "311": "未配置下一级宝石",
    "312": "下一级宝石的等级高于装备可镶嵌的宝石等级",
    "313": "下一级宝石类型与可镶嵌类型不符",
    "314": "未配置下一级宝石的合成规则",
    "315": "穿戴中",
    "316": "此装备不能分解",
    "317": "此装备不能重铸",
    "318": "此道具不可穿戴",
    "319": "未穿戴此装备",
    "320": "装备未激活，不可穿戴",
    "321": "装备位置已强化到当前穿戴装备上限",
    "322": "此装备穿戴后不可卸下",
    "323": "套装不存在",
    "324": "套装打造部位不符",
    "325": "装备等级限制",
    "326": "洗练槽位未激活",
    "327": "重复激活洗练槽位",
    "328": "套装-材料装备的品质不符",
    "329": "套装-材料装备的星数不符",
    "330": "套装-重复激活",
    "331": "装备紫色条目数配置错误",
    "332": "装备蓝色条目数配置错误",
    "333": "装备性别限制",
    "334": "非装备道具",
    "335": "此装备不能拆解",
    "336": "绑定装备不能拆解",
    "337": "配置错误",
    "338": "不是代金卷",
    "339": "代金卷配置参数异常",
    "340": "洗炼精琢失败",
    "341": "洗炼精琢已满",
    "401": "商城-配置表中无此商品",
    "402": "商城-已经达到限购上限",
    "403": "商城错误",
    "404": "商城-非道具商品不能直接使用",
    "410": "已购买此类型投资计划",
    "411": "未购买此类型投资计划",
    "412": "已领取投资计划奖励",
    "500": "已在队伍中",
    "501": "该场景不允许组队",
    "502": "队伍已满",
    "503": "进入申请队列",
    "504": "不在队伍中",
    "505": "不是队长",
    "506": "队伍不存在",
    "507": "队伍人数不足",
    "508": "不同游戏服",
    "509": "队友同性别",
    "510": "无异性好友在线",
    "601": "任务不存在",
    "602": "任务未接取",
    "603": "任务未完成",
    "604": "任务已完成",
    "605": "任务已接取",
    "606": "前置任务未完成",
    "607": "任务已过期",
    "608": "已完成今日所有赏金任务",
    "609": "没有可接取的任务",
    "610": "请求领取的任务不在可选列表中",
    "611": "已有备选任务",
    "612": "未配置付费道具，无法通过付费立即完成任务",
    "613": "未加入集团，无法领取/提交集团任务",
    "614": "已完成本周所有集团任务",
    "615": "日常任务重复接取",
    "701": "未获得此技能",
    "702": "技能冷却中",
    "703": "技能释放失败",
    "704": "BUFF叠加数限制",
    "705": "攻击方在安全区域内",
    "706": "目标在安全区域内",
    "707": "不是掉落物归属者",
    "708": "掉落物不存在",
    "710": "九层妖塔-未开启",
    "711": "九层妖塔-开启时间已超过10分钟",
    "712": "九层妖塔-已通关",
    "713": "九层妖塔-未找到场景",
    "714": "九层妖塔-进入活动失败",
    "715": "该副本不可扫荡",
    "716": "该副本未完成不可扫荡",
    "717": "九层妖塔-层数限制",
    "718": "诛仙塔-层数限制",
    "719": "不在采集物范围内",
    "720": "其他玩家正在采集",
    "721": "采集物不存在",
    "722": "采集次数限制",
    "723": "凌霄殿状态限制",
    "724": "七天登录次数不足",
    "725": "非伴侣",
    "726": "请先退出当前副本再进入世界服",
    "727": "在九层妖塔中",
    "728": "仙侣副本购买次数不足",
    "801": "活动奖励不存在",
    "802": "活动奖励已领取",
    "803": "活动活跃度不足",
    "804": "可找回的活动次数不足",
    "805": "活跃等级已达上限",
    "806": "活跃等级可用于升级的活跃不足",
    "807": "活跃等级限制",
    "808": "累计离线挂机时间已达上限",
    "809": "在线领元宝：每天最多领取N次收益，今天已领取完毕",
    "810": "累计签到天数不足",
    "811": "成就点数不足",
    "812": "已领取过奖励",
    "813": "未达成成就领取条件",
    "830": "寻宝-积分不足",
    "831": "寻宝-类型错误",
    "832": "寻宝-商城商品不存在",
    "833": "寻宝-免费次数不够(免费时间未到)",
    "834": "装备寻宝背包空间不足",
    "889": "市场-订单不存在",
    "890": "市场-购买自己的订单",
    "891": "市场-物无法出售",
    "892": "市场-密码错误",
    "900": "队伍成员远离",
    "901": "亲密度不足",
    "902": "对方已拥有配偶",
    "903": "操作超时",
    "904": "已结婚",
    "910": "集团名称已存在",
    "911": "集团申请条件不满足",
    "912": "没有权限",
    "913": "集团资金不足",
    "914": "没有集团",
    "915": "职位没有位置",
    "916": "没有该申请者",
    "917": "已有集团",
    "918": "集团技能达到上限",
    "919": "集团贡献不足",
    "920": "集团-捐献装备条件不符",
    "921": "集团-仓库积分不足",
    "922": "集团-没有该记录",
    "923": "集团-人数已满",
    "924": "集团-已经没有更多的集团了",
    "925": "集团战-该集团没有参加",
    "926": "集团战-不在集团战场景内",
    "927": "集团战-错误的水晶id",
    "928": "集团战-己方已占领水晶",
    "929": "集团战-敌方正在占领水晶",
    "930": "集团战-占领水晶超出范围",
    "931": "集团战-该集团当场已结束",
    "932": "集团战-集团战未开始",
    "933": "集团战-不是至尊集团",
    "934": "集团战-已在集团战内",
    "935": "集团战-加入集团需要24小时才能进行集团战",
    "936": "集团战-集团战期间不允许自离集团",
    "937": "集团战-无战胜集团",
    "938": "集团晚宴-已经吃过了",
    "939": "集团晚宴-晚宴未开始",
    "940": "集团-仓库空间满",
    "941": "集团战-不能解散上榜集团",
    "942": "集团神兽-挑战冷却",
    "943": "集团神兽-兽粮不足",
    "944": "集团神兽-未在副本开启时间段内",
    "945": "集团神兽-本周挑战次数已达上限",
    "946": "集团神兽-副本开启中",
    "947": "集团神兽-副本未开启",
    "948": "集团神兽-集团成立时间不足，不能开启活动",
    "949": "集团神兽-加入集团时间不足，不能进入副本",
    "950": "没有找到对应奖励",
    "960": "激活码已使用",
    "961": "无该激活码",
    "962": "已使用同类激活码",
    "963": "预约次数为0，无法预约",
    "964": "已邀请过",
    "965": "当前无婚宴",
    "966": "你是婚礼主人，无需索要请柬",
    "967": "你已是婚礼宾客，无需索要请柬",
    "968": "已发送索要请求",
    "969": "婚礼还未开始",
    "970": "你不是宾客，无法参加婚宴",
    "971": "你不是婚礼主人",
    "972": "活动未开启",
    "973": "场景限制",
    "974": "赠送祝福道具不足",
    "975": "婚礼邀请次数不足",
    "976": "婚礼购买邀请次数超上限",
    "977": "玩家不在场景里",
    "978": "请先预约婚礼",
    "980": "你已预约婚礼，不能离婚！",
    "981": "婚礼时间已被预约",
    "982": "婚礼时间已过",
    "983": "婚礼主人到场才可以拜堂！",
    "984": "该物品只能在结婚场景使用",
    "985": "你已预约过一场婚礼，请先参加完婚礼后再次预约！",
    "986": "未结婚",
    "987": "爱情宝匣过期或未购买",
    "988": "爱情宝匣已购买",
    "989": "同心锁未穿戴",
    "990": "充值-没有周卡",
    "991": "充值-周卡当天已领取",
    "992": "充值-该充值返利奖励已领取",
    "993": "充值-累计充值不足",
    "1001": "先领取奖励",
    "1002": "充值-没有充值",
    "1003": "充值-奖励类型错误",
    "1004": "充值-每日充值数不足",
    "1005": "充值-充值不足",
    "1006": "充值订单不存在",
    "1007": "该订单号不是代付订单",
    "1008": "订单号已经锁定",
    "1009": "订单已经支付",
    "1010": "订单已经超时",
    "1011": "订单类型异常",
    "1012": "订单充值ID不存在",
    "1013": "订单充值ID不存在",
    "1014": "没有足够的代金卷",
    "1015": "订单已经完成",
    "995": "七日冲榜-没有奖励可领取",
    "996": "该激活码已过期",
    "997": "背包已满，无法兑换",
    "998": "在巅峰竞技匹配状态中",
    "1100": "聚魂背包满",
    "1101": "聚魂穿戴位置已满",
    "1102": "已存在相同属性聚魂",
    "1103": "未佩戴聚魂",
    "1104": "缺少精华",
    "1105": "缺少配置",
    "1106": "聚魂加成属性数量错误",
    "1107": "未佩戴此聚魂",
    "1108": "存在非法聚魂",
    "1109": "未拥有此聚魂",
    "1200": "角色等级不足",
    "1201": "杀怪数量不足",
    "1202": "关卡未开启",
    "1203": "关卡正在挑战中",
    "1204": "该关卡不可自动挑战",
    "1132": "缺少配置",
    "1133": "嗨点活动未开启",
    "1134": "嗨点活动-缺少嗨点",
    "1135": "嗨点活动已结束",
    "1400": "奖励条件未达成",
    "1401": "奖励已领取",
    "1402": "红包奖励不存在",
    "1403": "没有领奖次数",
    "1404": "当天奖励已达最大次数",
    "1501": "没找到等级配置",
    "1502": "没找到星级配置",
    "1503": "没找到市场配置",
    "1504": "没找到员工配置",
    "1505": "没找到员工",
    "1506": "阶不够, 无法升级",
    "1507": "等级不够, 无法升阶",
    "1508": "已经升阶, 请先提升等级",
    "1509": "没找到阶级配置",
    "1521": "未找到公司配置",
    "1522": "实力不足, 无法升级",
    "1531": "未找到土地配置",
    "1532": "土地已经购买",
    "1533": "公司等级不足, 无法开启土地",
    "1534": "土地未购买",
    "1535": "土地已经建造了建筑",
    "1541": "未找到建筑配置",
    "1542": "建筑未开启",
    "1543": "未找到建筑星级配置",
    "1544": "员工已经在其他建筑中",
    "1545": "位置未开启",
    "1546": "这个位置没有员工",
    "1547": "公司总人数不足",
    "1548": "名望限制无法升级",
    "1599": "商业系统未开启",
    "2001": "红颜已开启",
    "2002": "红颜需要自动开启",
    "2003": "错误的红颜id",
    "2004": "红颜还未开启",
    "2005": "红颜已经达到最大星级",
    "2006": "错误的升级消耗品",
    "2007": "当天赠送礼物已达到上限",
    "2008": "抓取娃娃次数不足",
    "2009": "已领取该奖励",
    "2010": "红颜等级不够",
    "2011": "精力不足",
    "2012": "购买次数不足",
    "2014": "红颜已达到最大等级",
    "2015": "红颜约会cd中",
    "2051": "错误的战队成员id",
    "2052": "战队成员还未开启",
    "2053": "以达到当前品阶最大等级",
    "2054": "已达到最大等级",
    "2055": "目前还不能升阶",
    "2056": "已达到最大阶数",
    "2057": "错误的操作类型",
    "2058": "背包中没有该装备",
    "2059": "错误的装备位置",
    "2060": "用户没有装备该武器",
    "2070": "超过七天",
    "2071": "已领取奖励",
    "2072": "任务没完成",
    "2073": "还未开启",
    "2074": "分数不足",
    "2075": "超出领取时间",
    "2080": "可领取奖励次数不足",
    "2081": "活动未开启",
    "2082": "活动已关闭",
    "2083": "已领取",
    "2084": "点数不足",
    "2085": "点数不足",
    "2086": "没有可抽的奖励了",
    "2087": "集团狂欢不在排行榜中",
    "2088": "开服任务未完成",
    "2089": "开服任务已领取",
    "2090": "中心服务器连接不上",
    "2091": "未定义的排行榜",
    "2092": "跨服排行榜还未开启",
    "2093": "虚拟币不足",
    "2094": "飞行币不足",
    "2095": "名望已领取",
    "2100": "用户还未充值",
    "2101": "已领取该奖励",
    "2102": "用户充值不足",
    "2103": "首冲当天不处理",
    "2105": "防沉迷, 三小时",
    "2110": "章节id不存在",
    "2111": "错误的奖励星数",
    "2112": "已领取该奖励",
    "2113": "奖励需要星不足",
    "2114": "错误的体力id",
    "2115": "领取体力还未开放",
    "2116": "已达到体力上限",
    "2117": "体力购买次数不足",
    "2118": "需要通关之前关卡",
    "2119": "所需体力不足",
    "2130": "已领取该经验",
    "2131": "已购买该礼包",
    "2035": "当天已领取每日奖励",
    "2036": "挑战层数不足",
    "2201": "竞技场排名已经改变了",
    "2202": "竞技场还不能领取",
    "2205": "超出时间限制",
    "2206": "活动结束",
    "2207": "重复答题",
    "2208": "积分不足",
    "2210": "累计在线时长不足",
    "2211": "当天总广告播放次数已达上限",
    "2212": "当天快速金币广告播放次数已达上限",
    "2213": "当天快速复活广告播放次数已达上限",
    "2214": "当天额外vip经验广告播放次数已达上限",
    "2215": "当天免费寻宝广告播放次数已达上限",
    "2216": "当天免费补领体力看广告播放次数已达上限",
    "2217": "当天签到看广告播放次数已达上限",
    "2218": "当天看广告招商次数已达上限",
    "2219": "当天看广告离线奖励加倍次数已达上限",
    "2220": "免费小车奖励不存在",
    "2230": "激活码使用成功",
    "2231": "错误的激活码",
    "2232": "激活码已经被使用",
    "2234": "已经领取过奖励",
    "2235": "已经过期",
    "2236": "不能在本服领取",
    "2237": "不能在本平台领取",
    "2300": "活动结束",
    "2301": "活动失效",
    "2302": "活动奖励已领取",
    "2303": "条件不满足",
    "3000": "功能未激活",
    "3001": "没有终结连赢两次以上的集团",
    "3002": "鼓舞次数上限",
    "3003": "集团守卫-集团守卫未开始",
    "3004": "装备已过期",
    "3005": "尚未达到活动开启时间",
    "3006": "限时魔王-未找到场景",
    "3008": "活动已经结束",
    "3009": "可用元宝不足",
    "3010": "全服剩余次数不足",
}
